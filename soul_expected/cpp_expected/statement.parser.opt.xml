<parserFile>
 <grammar name="StatementParser">
  <rule first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, MUTABLE, DIV, REGISTER, AMP_AMP, NAMESPACE, OPERATOR, TYPEDEF, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, USING, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, DO, IF, STRING_LITERAL, TYPEID, LBRACE, ID, BREAK, INTEGER_LITERAL, LANGLE, SEMICOLON, ARROW, CASE, CHAR_LITERAL, DOT, GOTO, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONTINUE, CONST_CAST, RETURN, FOR, LBRACKET, SWITCH, LPAREN, FALSE, CARET, COMMA, WHILE, FLOATING_LITERAL, DEFAULT, NULLPTR}" name="Statement">
   <choice first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, MUTABLE, DIV, REGISTER, AMP_AMP, NAMESPACE, OPERATOR, TYPEDEF, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, USING, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, DO, IF, STRING_LITERAL, TYPEID, LBRACE, ID, BREAK, INTEGER_LITERAL, LANGLE, SEMICOLON, ARROW, CASE, CHAR_LITERAL, DOT, GOTO, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONTINUE, CONST_CAST, RETURN, FOR, LBRACKET, SWITCH, LPAREN, FALSE, CARET, COMMA, WHILE, FLOATING_LITERAL, DEFAULT, NULLPTR}">
    <choice first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, COLON_COLON, MUTABLE, REGISTER, NAMESPACE, OPERATOR, TYPEDEF, VOID, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, USING, CONST, LONG, SHORT, STAR, CHAR, CHAR8T, DO, IF, LBRACE, ID, BREAK, SEMICOLON, CASE, GOTO, AMP, CONTINUE, RETURN, FOR, SWITCH, WHILE, DEFAULT}">
     <switch first="{DO, IF, LBRACE, ID, BREAK, SEMICOLON, CASE, GOTO, CONTINUE, RETURN, FOR, SWITCH, WHILE, DEFAULT}">
      <case first="{ID, CASE, DEFAULT}">
       <action first="{ID, CASE, DEFAULT}">
        <nonterminal first="{ID, CASE, DEFAULT}" ruleName="LabeledStatement"/>
       </action>
      </case>
      <case first="{SEMICOLON}">
       <action first="{SEMICOLON}">
        <nonterminal first="{SEMICOLON}" ruleName="EmptyStatement"/>
       </action>
      </case>
      <case first="{LBRACE}">
       <action first="{LBRACE}">
        <nonterminal first="{LBRACE}" ruleName="CompoundStatement"/>
       </action>
      </case>
      <case first="{IF, SWITCH}">
       <action first="{IF, SWITCH}">
        <nonterminal first="{IF, SWITCH}" ruleName="SelectionStatement"/>
       </action>
      </case>
      <case first="{DO, FOR, WHILE}">
       <action first="{DO, FOR, WHILE}">
        <nonterminal first="{DO, FOR, WHILE}" ruleName="IterationStatement"/>
       </action>
      </case>
      <case first="{BREAK, GOTO, CONTINUE, RETURN}">
       <action first="{BREAK, GOTO, CONTINUE, RETURN}">
        <nonterminal first="{BREAK, GOTO, CONTINUE, RETURN}" ruleName="JumpStatement"/>
       </action>
      </case>
     </switch>
     <action first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, COLON_COLON, MUTABLE, REGISTER, NAMESPACE, OPERATOR, TYPEDEF, VOID, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, USING, CONST, LONG, SHORT, STAR, CHAR, CHAR8T, ID, SEMICOLON, AMP}">
      <nonterminal first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, COLON_COLON, MUTABLE, REGISTER, NAMESPACE, OPERATOR, TYPEDEF, VOID, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, USING, CONST, LONG, SHORT, STAR, CHAR, CHAR8T, ID, SEMICOLON, AMP}" ruleName="DeclarationStatement"/>
     </action>
    </choice>
    <action first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}">
     <nonterminal first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}" ruleName="ExpressionStatement"/>
    </action>
   </choice>
  </rule>
  <rule first="{ID, CASE, DEFAULT}" name="LabeledStatement">
   <switch first="{ID, CASE, DEFAULT}">
    <case first="{ID}">
     <sequence first="{ID}">
      <sequence first="{ID}">
       <action first="{ID}">
        <token first="{ID}" name="ID"/>
       </action>
       <token first="{COLON}" name="COLON"/>
      </sequence>
      <action first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, MUTABLE, DIV, REGISTER, AMP_AMP, NAMESPACE, OPERATOR, TYPEDEF, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, USING, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, DO, IF, STRING_LITERAL, TYPEID, LBRACE, ID, BREAK, INTEGER_LITERAL, LANGLE, SEMICOLON, ARROW, CASE, CHAR_LITERAL, DOT, GOTO, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONTINUE, CONST_CAST, RETURN, FOR, LBRACKET, SWITCH, LPAREN, FALSE, CARET, COMMA, WHILE, FLOATING_LITERAL, DEFAULT, NULLPTR}">
       <nonterminal first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, MUTABLE, DIV, REGISTER, AMP_AMP, NAMESPACE, OPERATOR, TYPEDEF, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, USING, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, DO, IF, STRING_LITERAL, TYPEID, LBRACE, ID, BREAK, INTEGER_LITERAL, LANGLE, SEMICOLON, ARROW, CASE, CHAR_LITERAL, DOT, GOTO, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONTINUE, CONST_CAST, RETURN, FOR, LBRACKET, SWITCH, LPAREN, FALSE, CARET, COMMA, WHILE, FLOATING_LITERAL, DEFAULT, NULLPTR}" ruleName="Statement"/>
      </action>
     </sequence>
    </case>
    <case first="{CASE}">
     <sequence first="{CASE}">
      <sequence first="{CASE}">
       <sequence first="{CASE}">
        <token first="{CASE}" name="CASE"/>
        <nonterminal first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}" ruleName="ConstantExpression"/>
       </sequence>
       <token first="{COLON}" name="COLON"/>
      </sequence>
      <action first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, MUTABLE, DIV, REGISTER, AMP_AMP, NAMESPACE, OPERATOR, TYPEDEF, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, USING, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, DO, IF, STRING_LITERAL, TYPEID, LBRACE, ID, BREAK, INTEGER_LITERAL, LANGLE, SEMICOLON, ARROW, CASE, CHAR_LITERAL, DOT, GOTO, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONTINUE, CONST_CAST, RETURN, FOR, LBRACKET, SWITCH, LPAREN, FALSE, CARET, COMMA, WHILE, FLOATING_LITERAL, DEFAULT, NULLPTR}">
       <nonterminal first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, MUTABLE, DIV, REGISTER, AMP_AMP, NAMESPACE, OPERATOR, TYPEDEF, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, USING, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, DO, IF, STRING_LITERAL, TYPEID, LBRACE, ID, BREAK, INTEGER_LITERAL, LANGLE, SEMICOLON, ARROW, CASE, CHAR_LITERAL, DOT, GOTO, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONTINUE, CONST_CAST, RETURN, FOR, LBRACKET, SWITCH, LPAREN, FALSE, CARET, COMMA, WHILE, FLOATING_LITERAL, DEFAULT, NULLPTR}" ruleName="Statement"/>
      </action>
     </sequence>
    </case>
    <case first="{DEFAULT}">
     <sequence first="{DEFAULT}">
      <sequence first="{DEFAULT}">
       <token first="{DEFAULT}" name="DEFAULT"/>
       <token first="{COLON}" name="COLON"/>
      </sequence>
      <action first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, MUTABLE, DIV, REGISTER, AMP_AMP, NAMESPACE, OPERATOR, TYPEDEF, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, USING, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, DO, IF, STRING_LITERAL, TYPEID, LBRACE, ID, BREAK, INTEGER_LITERAL, LANGLE, SEMICOLON, ARROW, CASE, CHAR_LITERAL, DOT, GOTO, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONTINUE, CONST_CAST, RETURN, FOR, LBRACKET, SWITCH, LPAREN, FALSE, CARET, COMMA, WHILE, FLOATING_LITERAL, DEFAULT, NULLPTR}">
       <nonterminal first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, MUTABLE, DIV, REGISTER, AMP_AMP, NAMESPACE, OPERATOR, TYPEDEF, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, USING, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, DO, IF, STRING_LITERAL, TYPEID, LBRACE, ID, BREAK, INTEGER_LITERAL, LANGLE, SEMICOLON, ARROW, CASE, CHAR_LITERAL, DOT, GOTO, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONTINUE, CONST_CAST, RETURN, FOR, LBRACKET, SWITCH, LPAREN, FALSE, CARET, COMMA, WHILE, FLOATING_LITERAL, DEFAULT, NULLPTR}" ruleName="Statement"/>
      </action>
     </sequence>
    </case>
   </switch>
  </rule>
  <rule first="{SEMICOLON}" name="EmptyStatement">
   <action first="{SEMICOLON}">
    <token first="{SEMICOLON}" name="SEMICOLON"/>
   </action>
  </rule>
  <rule first="{LBRACE}" name="CompoundStatement">
   <action first="{LBRACE}">
    <group first="{LBRACE}">
     <sequence first="{LBRACE}">
      <sequence first="{LBRACE}">
       <action first="{LBRACE}">
        <token first="{LBRACE}" name="LBRACE"/>
       </action>
       <kleene first="{#, #, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, MUTABLE, DIV, REGISTER, AMP_AMP, NAMESPACE, OPERATOR, TYPEDEF, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, USING, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, DO, IF, STRING_LITERAL, TYPEID, LBRACE, ID, BREAK, INTEGER_LITERAL, LANGLE, SEMICOLON, ARROW, CASE, CHAR_LITERAL, DOT, GOTO, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONTINUE, CONST_CAST, RETURN, FOR, LBRACKET, SWITCH, LPAREN, FALSE, CARET, COMMA, WHILE, FLOATING_LITERAL, DEFAULT, NULLPTR}">
        <group first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, MUTABLE, DIV, REGISTER, AMP_AMP, NAMESPACE, OPERATOR, TYPEDEF, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, USING, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, DO, IF, STRING_LITERAL, TYPEID, LBRACE, ID, BREAK, INTEGER_LITERAL, LANGLE, SEMICOLON, ARROW, CASE, CHAR_LITERAL, DOT, GOTO, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONTINUE, CONST_CAST, RETURN, FOR, LBRACKET, SWITCH, LPAREN, FALSE, CARET, COMMA, WHILE, FLOATING_LITERAL, DEFAULT, NULLPTR}">
         <action first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, MUTABLE, DIV, REGISTER, AMP_AMP, NAMESPACE, OPERATOR, TYPEDEF, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, USING, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, DO, IF, STRING_LITERAL, TYPEID, LBRACE, ID, BREAK, INTEGER_LITERAL, LANGLE, SEMICOLON, ARROW, CASE, CHAR_LITERAL, DOT, GOTO, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONTINUE, CONST_CAST, RETURN, FOR, LBRACKET, SWITCH, LPAREN, FALSE, CARET, COMMA, WHILE, FLOATING_LITERAL, DEFAULT, NULLPTR}">
          <nonterminal first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, MUTABLE, DIV, REGISTER, AMP_AMP, NAMESPACE, OPERATOR, TYPEDEF, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, USING, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, DO, IF, STRING_LITERAL, TYPEID, LBRACE, ID, BREAK, INTEGER_LITERAL, LANGLE, SEMICOLON, ARROW, CASE, CHAR_LITERAL, DOT, GOTO, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONTINUE, CONST_CAST, RETURN, FOR, LBRACKET, SWITCH, LPAREN, FALSE, CARET, COMMA, WHILE, FLOATING_LITERAL, DEFAULT, NULLPTR}" ruleName="Statement"/>
         </action>
        </group>
       </kleene>
      </sequence>
      <token first="{RBRACE}" name="RBRACE"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{IF, SWITCH}" name="SelectionStatement">
   <switch first="{IF, SWITCH}">
    <case first="{IF}">
     <action first="{IF}">
      <nonterminal first="{IF}" ruleName="IfStatement"/>
     </action>
    </case>
    <case first="{SWITCH}">
     <action first="{SWITCH}">
      <nonterminal first="{SWITCH}" ruleName="SwitchStatement"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{IF}" name="IfStatement">
   <action first="{IF}">
    <group first="{IF}">
     <sequence first="{IF}">
      <sequence first="{IF}">
       <sequence first="{IF}">
        <sequence first="{IF}">
         <sequence first="{IF}">
          <token first="{IF}" name="IF"/>
          <token first="{LPAREN}" name="LPAREN"/>
         </sequence>
         <nonterminal first="{#, #, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}" ruleName="Condition"/>
        </sequence>
        <token first="{RPAREN}" name="RPAREN"/>
       </sequence>
       <nonterminal first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, MUTABLE, DIV, REGISTER, AMP_AMP, NAMESPACE, OPERATOR, TYPEDEF, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, USING, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, DO, IF, STRING_LITERAL, TYPEID, LBRACE, ID, BREAK, INTEGER_LITERAL, LANGLE, SEMICOLON, ARROW, CASE, CHAR_LITERAL, DOT, GOTO, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONTINUE, CONST_CAST, RETURN, FOR, LBRACKET, SWITCH, LPAREN, FALSE, CARET, COMMA, WHILE, FLOATING_LITERAL, DEFAULT, NULLPTR}" ruleName="Statement"/>
      </sequence>
      <optional first="{#, ELSE}">
       <group first="{ELSE}">
        <sequence first="{ELSE}">
         <token first="{ELSE}" name="ELSE"/>
         <nonterminal first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, MUTABLE, DIV, REGISTER, AMP_AMP, NAMESPACE, OPERATOR, TYPEDEF, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, USING, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, DO, IF, STRING_LITERAL, TYPEID, LBRACE, ID, BREAK, INTEGER_LITERAL, LANGLE, SEMICOLON, ARROW, CASE, CHAR_LITERAL, DOT, GOTO, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONTINUE, CONST_CAST, RETURN, FOR, LBRACKET, SWITCH, LPAREN, FALSE, CARET, COMMA, WHILE, FLOATING_LITERAL, DEFAULT, NULLPTR}" ruleName="Statement"/>
        </sequence>
       </group>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{SWITCH}" name="SwitchStatement">
   <action first="{SWITCH}">
    <group first="{SWITCH}">
     <sequence first="{SWITCH}">
      <sequence first="{SWITCH}">
       <sequence first="{SWITCH}">
        <sequence first="{SWITCH}">
         <token first="{SWITCH}" name="SWITCH"/>
         <token first="{LPAREN}" name="LPAREN"/>
        </sequence>
        <nonterminal first="{#, #, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}" ruleName="Condition"/>
       </sequence>
       <token first="{RPAREN}" name="RPAREN"/>
      </sequence>
      <nonterminal first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, MUTABLE, DIV, REGISTER, AMP_AMP, NAMESPACE, OPERATOR, TYPEDEF, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, USING, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, DO, IF, STRING_LITERAL, TYPEID, LBRACE, ID, BREAK, INTEGER_LITERAL, LANGLE, SEMICOLON, ARROW, CASE, CHAR_LITERAL, DOT, GOTO, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONTINUE, CONST_CAST, RETURN, FOR, LBRACKET, SWITCH, LPAREN, FALSE, CARET, COMMA, WHILE, FLOATING_LITERAL, DEFAULT, NULLPTR}" ruleName="Statement"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{DO, FOR, WHILE}" name="IterationStatement">
   <choice first="{DO, FOR, WHILE}">
    <switch first="{DO, FOR, WHILE}">
     <case first="{WHILE}">
      <action first="{WHILE}">
       <nonterminal first="{WHILE}" ruleName="WhileStatement"/>
      </action>
     </case>
     <case first="{DO}">
      <action first="{DO}">
       <nonterminal first="{DO}" ruleName="DoStatement"/>
      </action>
     </case>
     <case first="{FOR}">
      <action first="{FOR}">
       <nonterminal first="{FOR}" ruleName="RangeForStatement"/>
      </action>
     </case>
    </switch>
    <action first="{FOR}">
     <nonterminal first="{FOR}" ruleName="ForStatement"/>
    </action>
   </choice>
  </rule>
  <rule first="{WHILE}" name="WhileStatement">
   <action first="{WHILE}">
    <group first="{WHILE}">
     <sequence first="{WHILE}">
      <sequence first="{WHILE}">
       <sequence first="{WHILE}">
        <sequence first="{WHILE}">
         <token first="{WHILE}" name="WHILE"/>
         <token first="{LPAREN}" name="LPAREN"/>
        </sequence>
        <nonterminal first="{#, #, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}" ruleName="Condition"/>
       </sequence>
       <token first="{RPAREN}" name="RPAREN"/>
      </sequence>
      <nonterminal first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, MUTABLE, DIV, REGISTER, AMP_AMP, NAMESPACE, OPERATOR, TYPEDEF, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, USING, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, DO, IF, STRING_LITERAL, TYPEID, LBRACE, ID, BREAK, INTEGER_LITERAL, LANGLE, SEMICOLON, ARROW, CASE, CHAR_LITERAL, DOT, GOTO, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONTINUE, CONST_CAST, RETURN, FOR, LBRACKET, SWITCH, LPAREN, FALSE, CARET, COMMA, WHILE, FLOATING_LITERAL, DEFAULT, NULLPTR}" ruleName="Statement"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{DO}" name="DoStatement">
   <action first="{DO}">
    <group first="{DO}">
     <sequence first="{DO}">
      <sequence first="{DO}">
       <sequence first="{DO}">
        <sequence first="{DO}">
         <sequence first="{DO}">
          <sequence first="{DO}">
           <token first="{DO}" name="DO"/>
           <nonterminal first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, MUTABLE, DIV, REGISTER, AMP_AMP, NAMESPACE, OPERATOR, TYPEDEF, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, USING, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, DO, IF, STRING_LITERAL, TYPEID, LBRACE, ID, BREAK, INTEGER_LITERAL, LANGLE, SEMICOLON, ARROW, CASE, CHAR_LITERAL, DOT, GOTO, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONTINUE, CONST_CAST, RETURN, FOR, LBRACKET, SWITCH, LPAREN, FALSE, CARET, COMMA, WHILE, FLOATING_LITERAL, DEFAULT, NULLPTR}" ruleName="Statement"/>
          </sequence>
          <token first="{WHILE}" name="WHILE"/>
         </sequence>
         <token first="{LPAREN}" name="LPAREN"/>
        </sequence>
        <nonterminal first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}" ruleName="Expression"/>
       </sequence>
       <token first="{RPAREN}" name="RPAREN"/>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{FOR}" name="RangeForStatement">
   <action first="{FOR}">
    <group first="{FOR}">
     <sequence first="{FOR}">
      <sequence first="{FOR}">
       <sequence first="{FOR}">
        <sequence first="{FOR}">
         <sequence first="{FOR}">
          <sequence first="{FOR}">
           <token first="{FOR}" name="FOR"/>
           <token first="{LPAREN}" name="LPAREN"/>
          </sequence>
          <nonterminal first="{#, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, COLON_COLON, MUTABLE, REGISTER, OPERATOR, TYPEDEF, VOID, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, STAR, CHAR, CHAR8T, ID, AMP}" ruleName="ForRangeDeclaration"/>
         </sequence>
         <token first="{COLON}" name="COLON"/>
        </sequence>
        <nonterminal first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}" ruleName="Expression"/>
       </sequence>
       <token first="{RPAREN}" name="RPAREN"/>
      </sequence>
      <nonterminal first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, MUTABLE, DIV, REGISTER, AMP_AMP, NAMESPACE, OPERATOR, TYPEDEF, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, USING, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, DO, IF, STRING_LITERAL, TYPEID, LBRACE, ID, BREAK, INTEGER_LITERAL, LANGLE, SEMICOLON, ARROW, CASE, CHAR_LITERAL, DOT, GOTO, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONTINUE, CONST_CAST, RETURN, FOR, LBRACKET, SWITCH, LPAREN, FALSE, CARET, COMMA, WHILE, FLOATING_LITERAL, DEFAULT, NULLPTR}" ruleName="Statement"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, COLON_COLON, MUTABLE, REGISTER, OPERATOR, TYPEDEF, VOID, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, STAR, CHAR, CHAR8T, ID, AMP}" name="ForRangeDeclaration">
   <action first="{#, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, COLON_COLON, MUTABLE, REGISTER, OPERATOR, TYPEDEF, VOID, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, STAR, CHAR, CHAR8T, ID, AMP}">
    <group first="{#, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, COLON_COLON, MUTABLE, REGISTER, OPERATOR, TYPEDEF, VOID, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, STAR, CHAR, CHAR8T, ID, AMP}">
     <sequence first="{#, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, COLON_COLON, MUTABLE, REGISTER, OPERATOR, TYPEDEF, VOID, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, STAR, CHAR, CHAR8T, ID, AMP}">
      <sequence first="{#, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, COLON_COLON, MUTABLE, REGISTER, TYPEDEF, VOID, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T, ID}">
       <action first="{#}">
        <empty first="{#}"/>
       </action>
       <nonterminal first="{#, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, COLON_COLON, MUTABLE, REGISTER, TYPEDEF, VOID, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T, ID}" ruleName="DeclSpecifierSeq"/>
      </sequence>
      <action first="{#, #, COLON_COLON, OPERATOR, STAR, ID, AMP}">
       <nonterminal first="{#, #, COLON_COLON, OPERATOR, STAR, ID, AMP}" ruleName="Declarator"/>
      </action>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{FOR}" name="ForStatement">
   <sequence first="{FOR}">
    <sequence first="{FOR}">
     <sequence first="{FOR}">
      <sequence first="{FOR}">
       <sequence first="{FOR}">
        <sequence first="{FOR}">
         <sequence first="{FOR}">
          <token first="{FOR}" name="FOR"/>
          <token first="{LPAREN}" name="LPAREN"/>
         </sequence>
         <nonterminal first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, MUTABLE, DIV, REGISTER, AMP_AMP, OPERATOR, TYPEDEF, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, SEMICOLON, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}" ruleName="ForInitStatement"/>
        </sequence>
        <optional first="{#, #, #, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}">
         <nonterminal first="{#, #, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}" ruleName="Condition"/>
        </optional>
       </sequence>
       <token first="{SEMICOLON}" name="SEMICOLON"/>
      </sequence>
      <optional first="{#, #, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}">
       <nonterminal first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}" ruleName="Expression"/>
      </optional>
     </sequence>
     <token first="{RPAREN}" name="RPAREN"/>
    </sequence>
    <action first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, MUTABLE, DIV, REGISTER, AMP_AMP, NAMESPACE, OPERATOR, TYPEDEF, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, USING, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, DO, IF, STRING_LITERAL, TYPEID, LBRACE, ID, BREAK, INTEGER_LITERAL, LANGLE, SEMICOLON, ARROW, CASE, CHAR_LITERAL, DOT, GOTO, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONTINUE, CONST_CAST, RETURN, FOR, LBRACKET, SWITCH, LPAREN, FALSE, CARET, COMMA, WHILE, FLOATING_LITERAL, DEFAULT, NULLPTR}">
     <nonterminal first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, MUTABLE, DIV, REGISTER, AMP_AMP, NAMESPACE, OPERATOR, TYPEDEF, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, USING, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, DO, IF, STRING_LITERAL, TYPEID, LBRACE, ID, BREAK, INTEGER_LITERAL, LANGLE, SEMICOLON, ARROW, CASE, CHAR_LITERAL, DOT, GOTO, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONTINUE, CONST_CAST, RETURN, FOR, LBRACKET, SWITCH, LPAREN, FALSE, CARET, COMMA, WHILE, FLOATING_LITERAL, DEFAULT, NULLPTR}" ruleName="Statement"/>
    </action>
   </sequence>
  </rule>
  <rule first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, MUTABLE, DIV, REGISTER, AMP_AMP, OPERATOR, TYPEDEF, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, SEMICOLON, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}" name="ForInitStatement">
   <choice first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, MUTABLE, DIV, REGISTER, AMP_AMP, OPERATOR, TYPEDEF, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, SEMICOLON, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}">
    <switch first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, SEMICOLON, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}">
     <case first="{SEMICOLON}">
      <action first="{SEMICOLON}">
       <nonterminal first="{SEMICOLON}" ruleName="EmptyStatement"/>
      </action>
     </case>
     <case first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}">
      <action first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}">
       <nonterminal first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}" ruleName="ExpressionStatement"/>
      </action>
     </case>
    </switch>
    <action first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, COLON_COLON, MUTABLE, REGISTER, OPERATOR, TYPEDEF, VOID, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, STAR, CHAR, CHAR8T, ID, SEMICOLON, AMP}">
     <nonterminal first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, COLON_COLON, MUTABLE, REGISTER, OPERATOR, TYPEDEF, VOID, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, STAR, CHAR, CHAR8T, ID, SEMICOLON, AMP}" ruleName="SimpleDeclaration"/>
    </action>
   </choice>
  </rule>
  <rule first="{BREAK, GOTO, CONTINUE, RETURN}" name="JumpStatement">
   <switch first="{BREAK, GOTO, CONTINUE, RETURN}">
    <case first="{BREAK}">
     <action first="{BREAK}">
      <nonterminal first="{BREAK}" ruleName="BreakStatement"/>
     </action>
    </case>
    <case first="{CONTINUE}">
     <action first="{CONTINUE}">
      <nonterminal first="{CONTINUE}" ruleName="ContinueStatement"/>
     </action>
    </case>
    <case first="{RETURN}">
     <action first="{RETURN}">
      <nonterminal first="{RETURN}" ruleName="ReturnStatement"/>
     </action>
    </case>
    <case first="{GOTO}">
     <action first="{GOTO}">
      <nonterminal first="{GOTO}" ruleName="GotoStatement"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{BREAK}" name="BreakStatement">
   <action first="{BREAK}">
    <group first="{BREAK}">
     <sequence first="{BREAK}">
      <token first="{BREAK}" name="BREAK"/>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{CONTINUE}" name="ContinueStatement">
   <action first="{CONTINUE}">
    <group first="{CONTINUE}">
     <sequence first="{CONTINUE}">
      <token first="{CONTINUE}" name="CONTINUE"/>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{RETURN}" name="ReturnStatement">
   <action first="{RETURN}">
    <group first="{RETURN}">
     <sequence first="{RETURN}">
      <sequence first="{RETURN}">
       <token first="{RETURN}" name="RETURN"/>
       <optional first="{#, #, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}">
        <nonterminal first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}" ruleName="Expression"/>
       </optional>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{GOTO}" name="GotoStatement">
   <action first="{GOTO}">
    <group first="{GOTO}">
     <sequence first="{GOTO}">
      <sequence first="{GOTO}">
       <token first="{GOTO}" name="GOTO"/>
       <action first="{ID}">
        <token first="{ID}" name="ID"/>
       </action>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, COLON_COLON, MUTABLE, REGISTER, NAMESPACE, OPERATOR, TYPEDEF, VOID, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, USING, CONST, LONG, SHORT, STAR, CHAR, CHAR8T, ID, SEMICOLON, AMP}" name="DeclarationStatement">
   <action first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, COLON_COLON, MUTABLE, REGISTER, NAMESPACE, OPERATOR, TYPEDEF, VOID, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, USING, CONST, LONG, SHORT, STAR, CHAR, CHAR8T, ID, SEMICOLON, AMP}">
    <group first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, COLON_COLON, MUTABLE, REGISTER, NAMESPACE, OPERATOR, TYPEDEF, VOID, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, USING, CONST, LONG, SHORT, STAR, CHAR, CHAR8T, ID, SEMICOLON, AMP}">
     <nonterminal first="{#, #, #, #, CHAR32T, WCHART, BOOL, STATIC, FLOAT, SIGNED, COLON_COLON, MUTABLE, REGISTER, NAMESPACE, OPERATOR, TYPEDEF, VOID, AUTO, EXTERN, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, USING, CONST, LONG, SHORT, STAR, CHAR, CHAR8T, ID, SEMICOLON, AMP}" ruleName="BlockDeclaration"/>
    </group>
   </action>
  </rule>
  <rule first="{#, #, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}" name="Condition">
   <group first="{#, #, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}">
    <choice first="{#, #, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}">
     <sequence first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, COLON_COLON, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T, ID}">
      <sequence first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, COLON_COLON, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T, ID}">
       <sequence first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, COLON_COLON, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T, ID}">
        <nonterminal first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, COLON_COLON, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T, ID}" ruleName="TypeId"/>
        <nonterminal first="{#, #, COLON_COLON, OPERATOR, STAR, ID, AMP}" ruleName="Declarator"/>
       </sequence>
       <token first="{ASSIGN}" name="ASSIGN"/>
      </sequence>
      <action first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, FLOATING_LITERAL, NULLPTR}">
       <nonterminal first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, FLOATING_LITERAL, NULLPTR}" ruleName="AssignmentExpression"/>
      </action>
     </sequence>
     <action first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}">
      <nonterminal first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}" ruleName="Expression"/>
     </action>
    </choice>
   </group>
  </rule>
  <rule first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}" name="ExpressionStatement">
   <action first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}">
    <group first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}">
     <sequence first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}">
      <nonterminal first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}" ruleName="Expression"/>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
 </grammar>
</parserFile>
