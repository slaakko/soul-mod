<parserFile>
 <grammar name="DeclaratorParser">
  <rule first="{#, #, #, COLON_COLON, OPERATOR, STAR, ID, AMP}" name="InitDeclaratorList">
   <action first="{#, #, #, COLON_COLON, OPERATOR, STAR, ID, AMP}">
    <group first="{#, #, #, COLON_COLON, OPERATOR, STAR, ID, AMP}">
     <sequence first="{#, #, #, COLON_COLON, OPERATOR, STAR, ID, AMP}">
      <action first="{#}">
       <empty first="{#}"/>
      </action>
      <group first="{#, #, COLON_COLON, OPERATOR, STAR, ID, AMP}">
       <list first="{#, #, COLON_COLON, OPERATOR, STAR, ID, AMP}">
        <sequence first="{#, #, COLON_COLON, OPERATOR, STAR, ID, AMP}">
         <action first="{#, #, COLON_COLON, OPERATOR, STAR, ID, AMP}">
          <nonterminal first="{#, #, COLON_COLON, OPERATOR, STAR, ID, AMP}" ruleName="InitDeclarator"/>
         </action>
         <kleene first="{#, COMMA}">
          <sequence first="{COMMA}">
           <token first="{COMMA}" name="COMMA"/>
           <action first="{#, #, COLON_COLON, OPERATOR, STAR, ID, AMP}">
            <nonterminal first="{#, #, COLON_COLON, OPERATOR, STAR, ID, AMP}" ruleName="InitDeclarator"/>
           </action>
          </sequence>
         </kleene>
        </sequence>
       </list>
      </group>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, #, COLON_COLON, OPERATOR, STAR, ID, AMP}" name="InitDeclarator">
   <action first="{#, #, COLON_COLON, OPERATOR, STAR, ID, AMP}">
    <group first="{#, #, COLON_COLON, OPERATOR, STAR, ID, AMP}">
     <sequence first="{#, #, COLON_COLON, OPERATOR, STAR, ID, AMP}">
      <nonterminal first="{#, #, COLON_COLON, OPERATOR, STAR, ID, AMP}" ruleName="Declarator"/>
      <optional first="{#, ASSIGN, LPAREN}">
       <nonterminal first="{ASSIGN, LPAREN}" ruleName="Initializer"/>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, #, COLON_COLON, OPERATOR, STAR, ID, AMP}" name="Declarator">
   <action first="{#, #, COLON_COLON, OPERATOR, STAR, ID, AMP}">
    <group first="{#, #, COLON_COLON, OPERATOR, STAR, ID, AMP}">
     <switch first="{#, #, COLON_COLON, OPERATOR, STAR, ID, AMP}">
      <case first="{#, #, COLON_COLON, OPERATOR, ID}">
       <action first="{#, #, COLON_COLON, OPERATOR, ID}">
        <nonterminal first="{#, #, COLON_COLON, OPERATOR, ID}" ruleName="DirectDeclarator"/>
       </action>
      </case>
      <case first="{STAR, AMP}">
       <sequence first="{STAR, AMP}">
        <action first="{STAR, AMP}">
         <nonterminal first="{STAR, AMP}" ruleName="PtrOperator"/>
        </action>
        <action first="{#, #, COLON_COLON, OPERATOR, STAR, ID, AMP}">
         <nonterminal first="{#, #, COLON_COLON, OPERATOR, STAR, ID, AMP}" ruleName="Declarator"/>
        </action>
       </sequence>
      </case>
     </switch>
    </group>
   </action>
  </rule>
  <rule first="{#, #, COLON_COLON, OPERATOR, ID}" name="DirectDeclarator">
   <action first="{#, #, COLON_COLON, OPERATOR, ID}">
    <group first="{#, #, COLON_COLON, OPERATOR, ID}">
     <sequence first="{#, #, COLON_COLON, OPERATOR, ID}">
      <action first="{#, #, COLON_COLON, OPERATOR, ID}">
       <nonterminal first="{#, #, COLON_COLON, OPERATOR, ID}" ruleName="DeclaratorId"/>
      </action>
      <kleene first="{#, LBRACKET, LPAREN}">
       <group first="{LBRACKET, LPAREN}">
        <switch first="{LBRACKET, LPAREN}">
         <case first="{LBRACKET}">
          <choice first="{LBRACKET}">
           <sequence first="{LBRACKET}">
            <sequence first="{LBRACKET}">
             <token first="{LBRACKET}" name="LBRACKET"/>
             <nonterminal first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}" ruleName="ConstantExpression"/>
            </sequence>
            <action first="{RBRACKET}">
             <token first="{RBRACKET}" name="RBRACKET"/>
            </action>
           </sequence>
           <sequence first="{LBRACKET}">
            <token first="{LBRACKET}" name="LBRACKET"/>
            <action first="{RBRACKET}">
             <token first="{RBRACKET}" name="RBRACKET"/>
            </action>
           </sequence>
          </choice>
         </case>
         <case first="{LPAREN}">
          <sequence first="{LPAREN}">
           <sequence first="{LPAREN}">
            <token first="{LPAREN}" name="LPAREN"/>
            <nonterminal first="{#, #, COLON_COLON, OPERATOR, STAR, ID, AMP}" ruleName="Declarator"/>
           </sequence>
           <action first="{RPAREN}">
            <token first="{RPAREN}" name="RPAREN"/>
           </action>
          </sequence>
         </case>
        </switch>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, #, COLON_COLON, OPERATOR, ID}" name="DeclaratorId">
   <choice first="{#, #, COLON_COLON, OPERATOR, ID}">
    <action first="{#, #, COLON_COLON, OPERATOR, ID}">
     <nonterminal first="{#, #, COLON_COLON, OPERATOR, ID}" ruleName="IdExpression"/>
    </action>
    <action first="{#, COLON_COLON, ID}">
     <nonterminal first="{#, COLON_COLON, ID}" ruleName="TypeName"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, COLON_COLON, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T, ID}" name="TypeId">
   <sequence first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, COLON_COLON, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T, ID}">
    <action first="{#}">
     <empty first="{#}"/>
    </action>
    <action first="{#, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, COLON_COLON, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T, ID}">
     <group first="{#, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, COLON_COLON, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T, ID}">
      <sequence first="{#, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, COLON_COLON, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T, ID}">
       <group first="{#, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, COLON_COLON, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T, ID}">
        <switch first="{#, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, COLON_COLON, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T, ID}">
         <case first="{CHAR32T, WCHART, BOOL, FLOAT, SIGNED, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T}">
          <nonterminal first="{CHAR32T, WCHART, BOOL, FLOAT, SIGNED, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T}" ruleName="TypeSpecifierSeq"/>
         </case>
         <case first="{#, COLON_COLON, ID}">
          <action first="{#, COLON_COLON, ID}">
           <nonterminal first="{#, COLON_COLON, ID}" ruleName="TypeName"/>
          </action>
         </case>
        </switch>
       </group>
       <optional first="{#, STAR, AMP, LBRACKET, LPAREN}">
        <group first="{STAR, AMP, LBRACKET, LPAREN}">
         <action first="{STAR, AMP, LBRACKET, LPAREN}">
          <nonterminal first="{STAR, AMP, LBRACKET, LPAREN}" ruleName="AbstractDeclarator"/>
         </action>
        </group>
       </optional>
      </sequence>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, COLON_COLON, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T, ID}" name="Type">
   <sequence first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, COLON_COLON, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T, ID}">
    <action first="{#}">
     <empty first="{#}"/>
    </action>
    <action first="{#, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, COLON_COLON, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T, ID}">
     <group first="{#, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, COLON_COLON, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T, ID}">
      <switch first="{#, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, COLON_COLON, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T, ID}">
       <case first="{CHAR32T, WCHART, BOOL, FLOAT, SIGNED, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T}">
        <positive first="{CHAR32T, WCHART, BOOL, FLOAT, SIGNED, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T}">
         <group first="{CHAR32T, WCHART, BOOL, FLOAT, SIGNED, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T}">
          <action first="{CHAR32T, WCHART, BOOL, FLOAT, SIGNED, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T}">
           <nonterminal first="{CHAR32T, WCHART, BOOL, FLOAT, SIGNED, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T}" ruleName="TypeSpecifier"/>
          </action>
         </group>
        </positive>
       </case>
       <case first="{#, COLON_COLON, ID}">
        <action first="{#, COLON_COLON, ID}">
         <nonterminal first="{#, COLON_COLON, ID}" ruleName="TypeName"/>
        </action>
       </case>
      </switch>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{CHAR32T, WCHART, BOOL, FLOAT, SIGNED, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T}" name="TypeSpecifierSeq">
   <positive first="{CHAR32T, WCHART, BOOL, FLOAT, SIGNED, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T}">
    <group first="{CHAR32T, WCHART, BOOL, FLOAT, SIGNED, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T}">
     <action first="{CHAR32T, WCHART, BOOL, FLOAT, SIGNED, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T}">
      <nonterminal first="{CHAR32T, WCHART, BOOL, FLOAT, SIGNED, VOID, CHAR16T, INT, UNSIGNED, DOUBLE, VOLATILE, CONST, LONG, SHORT, CHAR, CHAR8T}" ruleName="TypeSpecifier"/>
     </action>
    </group>
   </positive>
  </rule>
  <rule first="{STAR, AMP, LBRACKET, LPAREN}" name="AbstractDeclarator">
   <action first="{STAR, AMP, LBRACKET, LPAREN}">
    <group first="{STAR, AMP, LBRACKET, LPAREN}">
     <switch first="{STAR, AMP, LBRACKET, LPAREN}">
      <case first="{STAR, AMP}">
       <sequence first="{STAR, AMP}">
        <action first="{STAR, AMP}">
         <nonterminal first="{STAR, AMP}" ruleName="PtrOperator"/>
        </action>
        <optional first="{#, STAR, AMP, LBRACKET, LPAREN}">
         <group first="{STAR, AMP, LBRACKET, LPAREN}">
          <action first="{STAR, AMP, LBRACKET, LPAREN}">
           <nonterminal first="{STAR, AMP, LBRACKET, LPAREN}" ruleName="AbstractDeclarator"/>
          </action>
         </group>
        </optional>
       </sequence>
      </case>
      <case first="{LBRACKET, LPAREN}">
       <action first="{LBRACKET, LPAREN}">
        <nonterminal first="{LBRACKET, LPAREN}" ruleName="DirectAbstractDeclarator"/>
       </action>
      </case>
     </switch>
    </group>
   </action>
  </rule>
  <rule first="{LBRACKET, LPAREN}" name="DirectAbstractDeclarator">
   <action first="{LBRACKET, LPAREN}">
    <group first="{LBRACKET, LPAREN}">
     <positive first="{LBRACKET, LPAREN}">
      <group first="{LBRACKET, LPAREN}">
       <switch first="{LBRACKET, LPAREN}">
        <case first="{LBRACKET}">
         <choice first="{LBRACKET}">
          <sequence first="{LBRACKET}">
           <sequence first="{LBRACKET}">
            <token first="{LBRACKET}" name="LBRACKET"/>
            <nonterminal first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}" ruleName="ConstantExpression"/>
           </sequence>
           <action first="{RBRACKET}">
            <token first="{RBRACKET}" name="RBRACKET"/>
           </action>
          </sequence>
          <sequence first="{LBRACKET}">
           <token first="{LBRACKET}" name="LBRACKET"/>
           <action first="{RBRACKET}">
            <token first="{RBRACKET}" name="RBRACKET"/>
           </action>
          </sequence>
         </choice>
        </case>
        <case first="{LPAREN}">
         <sequence first="{LPAREN}">
          <sequence first="{LPAREN}">
           <token first="{LPAREN}" name="LPAREN"/>
           <nonterminal first="{STAR, AMP, LBRACKET, LPAREN}" ruleName="AbstractDeclarator"/>
          </sequence>
          <action first="{RPAREN}">
           <token first="{RPAREN}" name="RPAREN"/>
          </action>
         </sequence>
        </case>
       </switch>
      </group>
     </positive>
    </group>
   </action>
  </rule>
  <rule first="{STAR, AMP}" name="PtrOperator">
   <action first="{STAR, AMP}">
    <group first="{STAR, AMP}">
     <switch first="{STAR, AMP}">
      <case first="{STAR}">
       <sequence first="{STAR}">
        <action first="{STAR}">
         <token first="{STAR}" name="STAR"/>
        </action>
        <optional first="{#, VOLATILE, CONST}">
         <group first="{VOLATILE, CONST}">
          <action first="{VOLATILE, CONST}">
           <nonterminal first="{VOLATILE, CONST}" ruleName="CVQualifierSeq"/>
          </action>
         </group>
        </optional>
       </sequence>
      </case>
      <case first="{AMP}">
       <action first="{AMP}">
        <token first="{AMP}" name="AMP"/>
       </action>
      </case>
     </switch>
    </group>
   </action>
  </rule>
  <rule first="{VOLATILE, CONST}" name="CVQualifierSeq">
   <action first="{VOLATILE, CONST}">
    <group first="{VOLATILE, CONST}">
     <positive first="{VOLATILE, CONST}">
      <group first="{VOLATILE, CONST}">
       <action first="{VOLATILE, CONST}">
        <nonterminal first="{VOLATILE, CONST}" ruleName="CVQualifier"/>
       </action>
      </group>
     </positive>
    </group>
   </action>
  </rule>
  <rule first="{ASSIGN, LPAREN}" name="Initializer">
   <action first="{ASSIGN, LPAREN}">
    <group first="{ASSIGN, LPAREN}">
     <switch first="{ASSIGN, LPAREN}">
      <case first="{ASSIGN}">
       <sequence first="{ASSIGN}">
        <token first="{ASSIGN}" name="ASSIGN"/>
        <action first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, LBRACE, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, FLOATING_LITERAL, NULLPTR}">
         <nonterminal first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, LBRACE, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, FLOATING_LITERAL, NULLPTR}" ruleName="InitializerClause"/>
        </action>
       </sequence>
      </case>
      <case first="{LPAREN}">
       <sequence first="{LPAREN}">
        <sequence first="{LPAREN}">
         <action first="{LPAREN}">
          <token first="{LPAREN}" name="LPAREN"/>
         </action>
         <nonterminal first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, COMMA, FLOATING_LITERAL, NULLPTR}" ruleName="ExpressionList"/>
        </sequence>
        <token first="{RPAREN}" name="RPAREN"/>
       </sequence>
      </case>
     </switch>
    </group>
   </action>
  </rule>
  <rule first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, LBRACE, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, FLOATING_LITERAL, NULLPTR}" name="InitializerClause">
   <action first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, LBRACE, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, FLOATING_LITERAL, NULLPTR}">
    <group first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, LBRACE, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, FLOATING_LITERAL, NULLPTR}">
     <choice first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, LBRACE, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, FLOATING_LITERAL, NULLPTR}">
      <switch first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, LBRACE, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, FLOATING_LITERAL, NULLPTR}">
       <case first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, FLOATING_LITERAL, NULLPTR}">
        <action first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, FLOATING_LITERAL, NULLPTR}">
         <nonterminal first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, FLOATING_LITERAL, NULLPTR}" ruleName="AssignmentExpression"/>
        </action>
       </case>
       <case first="{LBRACE}">
        <sequence first="{LBRACE}">
         <sequence first="{LBRACE}">
          <action first="{LBRACE}">
           <token first="{LBRACE}" name="LBRACE"/>
          </action>
          <nonterminal first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, LBRACE, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, FLOATING_LITERAL, NULLPTR}" ruleName="InitializerList"/>
         </sequence>
         <token first="{RBRACE}" name="RBRACE"/>
        </sequence>
       </case>
      </switch>
      <sequence first="{LBRACE}">
       <token first="{LBRACE}" name="LBRACE"/>
       <action first="{RBRACE}">
        <token first="{RBRACE}" name="RBRACE"/>
       </action>
      </sequence>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, LBRACE, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, FLOATING_LITERAL, NULLPTR}" name="InitializerList">
   <list first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, LBRACE, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, FLOATING_LITERAL, NULLPTR}">
    <sequence first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, LBRACE, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, FLOATING_LITERAL, NULLPTR}">
     <action first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, LBRACE, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, FLOATING_LITERAL, NULLPTR}">
      <nonterminal first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, LBRACE, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, FLOATING_LITERAL, NULLPTR}" ruleName="InitializerClause"/>
     </action>
     <kleene first="{#, COMMA}">
      <sequence first="{COMMA}">
       <token first="{COMMA}" name="COMMA"/>
       <action first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, LBRACE, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, FLOATING_LITERAL, NULLPTR}">
        <nonterminal first="{#, #, CHAR32T, WCHART, BOOL, FLOAT, SIGNED, SIZEOF, COLON_COLON, DIV_ASSIGN, DIV, AMP_AMP, OPERATOR, DYNAMIC_CAST, STATIC_CAST, NEQ, VOID, REINTERPRET_CAST, LEQ, ASSIGN, SHIFT_RIGHT, EQ, REM, MINUS_ASSIGN, ARROW_STAR, DISJUNCTION, REM_ASSIGN, SHIFT_LEFT_ASSIGN, CHAR16T, INT, UNSIGNED, MUL_ASSIGN, OR_ASSIGN, DOUBLE, VOLATILE, DOT_STAR, PLUS, PLUS_ASSIGN, CONST, LONG, MINUS_MINUS, SHORT, MINUS, STAR, AND_ASSIGN, GEQ, XOR_ASSIGN, PLUS_PLUS, CHAR, SHIFT_RIGHT_ASSIGN, CHAR8T, SHIFT_LEFT, PIPE, EXCLAMATION, DELETE, STRING_LITERAL, TYPEID, LBRACE, ID, INTEGER_LITERAL, LANGLE, ARROW, CHAR_LITERAL, DOT, NEW, RANGLE, TRUE, QUEST, THIS, AMP, TILDE, CONST_CAST, LBRACKET, LPAREN, FALSE, CARET, FLOATING_LITERAL, NULLPTR}" ruleName="InitializerClause"/>
       </action>
      </sequence>
     </kleene>
    </sequence>
   </list>
  </rule>
 </grammar>
</parserFile>
