<parserFile>
 <grammar name="DeclaratorParser">
  <rule first="{#, STAR, COLON_COLON, ASSIGN, OPERATOR, ID, LPAREN, LBRACKET, LANGLE, COMMA, AMP}" name="InitDeclaratorList">
   <action first="{#, STAR, COLON_COLON, ASSIGN, OPERATOR, ID, LPAREN, LBRACKET, LANGLE, COMMA, AMP}">
    <group first="{#, STAR, COLON_COLON, ASSIGN, OPERATOR, ID, LPAREN, LBRACKET, LANGLE, COMMA, AMP}">
     <sequence first="{#, STAR, COLON_COLON, ASSIGN, OPERATOR, ID, LPAREN, LBRACKET, LANGLE, COMMA, AMP}">
      <action first="{#}">
       <empty first="{#}"/>
      </action>
      <group first="{#, STAR, COLON_COLON, ASSIGN, OPERATOR, ID, LPAREN, LBRACKET, LANGLE, COMMA, AMP}">
       <list first="{#, STAR, COLON_COLON, ASSIGN, OPERATOR, ID, LPAREN, LBRACKET, LANGLE, COMMA, AMP}">
        <sequence first="{#, STAR, COLON_COLON, ASSIGN, OPERATOR, ID, LPAREN, LBRACKET, LANGLE, COMMA, AMP}">
         <action first="{#, STAR, COLON_COLON, ASSIGN, OPERATOR, ID, LPAREN, LBRACKET, LANGLE, AMP}">
          <nonterminal first="{#, STAR, COLON_COLON, ASSIGN, OPERATOR, ID, LPAREN, LBRACKET, LANGLE, AMP}" ruleName="InitDeclarator"/>
         </action>
         <kleene first="{#, COMMA}">
          <sequence first="{COMMA}">
           <token first="{COMMA}" name="COMMA"/>
           <action first="{#, STAR, COLON_COLON, ASSIGN, OPERATOR, ID, LPAREN, LBRACKET, LANGLE, AMP}">
            <nonterminal first="{#, STAR, COLON_COLON, ASSIGN, OPERATOR, ID, LPAREN, LBRACKET, LANGLE, AMP}" ruleName="InitDeclarator"/>
           </action>
          </sequence>
         </kleene>
        </sequence>
       </list>
      </group>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, STAR, COLON_COLON, ASSIGN, OPERATOR, ID, LPAREN, LBRACKET, LANGLE, AMP}" name="InitDeclarator">
   <action first="{#, STAR, COLON_COLON, ASSIGN, OPERATOR, ID, LPAREN, LBRACKET, LANGLE, AMP}">
    <group first="{#, STAR, COLON_COLON, ASSIGN, OPERATOR, ID, LPAREN, LBRACKET, LANGLE, AMP}">
     <sequence first="{#, STAR, COLON_COLON, ASSIGN, OPERATOR, ID, LPAREN, LBRACKET, LANGLE, AMP}">
      <nonterminal first="{#, STAR, COLON_COLON, OPERATOR, ID, LPAREN, LBRACKET, LANGLE, AMP}" ruleName="Declarator"/>
      <optional first="{#, ASSIGN, LPAREN}">
       <nonterminal first="{ASSIGN, LPAREN}" ruleName="Initializer"/>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, STAR, COLON_COLON, OPERATOR, ID, LPAREN, LBRACKET, LANGLE, AMP}" name="Declarator">
   <action first="{#, STAR, COLON_COLON, OPERATOR, ID, LPAREN, LBRACKET, LANGLE, AMP}">
    <group first="{#, STAR, COLON_COLON, OPERATOR, ID, LPAREN, LBRACKET, LANGLE, AMP}">
     <choice first="{#, STAR, COLON_COLON, OPERATOR, ID, LPAREN, LBRACKET, LANGLE, AMP}">
      <action first="{#, COLON_COLON, OPERATOR, ID, LPAREN, LBRACKET, LANGLE}">
       <nonterminal first="{#, COLON_COLON, OPERATOR, ID, LPAREN, LBRACKET, LANGLE}" ruleName="DirectDeclarator"/>
      </action>
      <sequence first="{STAR, AMP}">
       <action first="{STAR, AMP}">
        <nonterminal first="{STAR, AMP}" ruleName="PtrOperator"/>
       </action>
       <action first="{#, STAR, COLON_COLON, OPERATOR, ID, LPAREN, LBRACKET, LANGLE, AMP}">
        <nonterminal first="{#, STAR, COLON_COLON, OPERATOR, ID, LPAREN, LBRACKET, LANGLE, AMP}" ruleName="Declarator"/>
       </action>
      </sequence>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{#, COLON_COLON, OPERATOR, ID, LPAREN, LBRACKET, LANGLE}" name="DirectDeclarator">
   <action first="{#, COLON_COLON, OPERATOR, ID, LPAREN, LBRACKET, LANGLE}">
    <group first="{#, COLON_COLON, OPERATOR, ID, LPAREN, LBRACKET, LANGLE}">
     <sequence first="{#, COLON_COLON, OPERATOR, ID, LPAREN, LBRACKET, LANGLE}">
      <action first="{#, COLON_COLON, OPERATOR, ID, LANGLE}">
       <nonterminal first="{#, COLON_COLON, OPERATOR, ID, LANGLE}" ruleName="DeclaratorId"/>
      </action>
      <kleene first="{#, LPAREN, LBRACKET}">
       <group first="{LPAREN, LBRACKET}">
        <switch first="{LPAREN, LBRACKET}">
         <case first="{LBRACKET}">
          <choice first="{LBRACKET}">
           <sequence first="{LBRACKET}">
            <sequence first="{LBRACKET}">
             <token first="{LBRACKET}" name="LBRACKET"/>
             <nonterminal first="{#, DISJUNCTION, AMP_AMP, DOT_STAR, ARROW_STAR, EQ, NEQ, LEQ, GEQ, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, REM, PLUS_PLUS, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, SIZEOF, OPERATOR, DYNAMIC_CAST, STATIC_CAST, REINTERPRET_CAST, CONST_CAST, TYPEID, THIS, NEW, DELETE, TRUE, FALSE, NULLPTR, ID, INTEGER_LITERAL, FLOATING_LITERAL, CHAR_LITERAL, STRING_LITERAL, DOT, LPAREN, LBRACKET, LANGLE, RANGLE, COMMA, ARROW, QUEST, AMP, EXCLAMATION, TILDE, CARET, PIPE}" ruleName="ConstantExpression"/>
            </sequence>
            <action first="{RBRACKET}">
             <token first="{RBRACKET}" name="RBRACKET"/>
            </action>
           </sequence>
           <sequence first="{LBRACKET}">
            <token first="{LBRACKET}" name="LBRACKET"/>
            <action first="{RBRACKET}">
             <token first="{RBRACKET}" name="RBRACKET"/>
            </action>
           </sequence>
          </choice>
         </case>
         <case first="{LPAREN}">
          <sequence first="{LPAREN}">
           <sequence first="{LPAREN}">
            <token first="{LPAREN}" name="LPAREN"/>
            <nonterminal first="{#, STAR, COLON_COLON, OPERATOR, ID, LPAREN, LBRACKET, LANGLE, AMP}" ruleName="Declarator"/>
           </sequence>
           <action first="{RPAREN}">
            <token first="{RPAREN}" name="RPAREN"/>
           </action>
          </sequence>
         </case>
        </switch>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, COLON_COLON, OPERATOR, ID, LANGLE}" name="DeclaratorId">
   <choice first="{#, COLON_COLON, OPERATOR, ID, LANGLE}">
    <action first="{#, COLON_COLON, OPERATOR, ID, LANGLE}">
     <nonterminal first="{#, COLON_COLON, OPERATOR, ID, LANGLE}" ruleName="IdExpression"/>
    </action>
    <action first="{#, COLON_COLON, ID, LANGLE}">
     <nonterminal first="{#, COLON_COLON, ID, LANGLE}" ruleName="TypeName"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, STAR, COLON_COLON, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, ID, LPAREN, LBRACKET, LANGLE, AMP}" name="TypeId">
   <sequence first="{#, STAR, COLON_COLON, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, ID, LPAREN, LBRACKET, LANGLE, AMP}">
    <action first="{#}">
     <empty first="{#}"/>
    </action>
    <action first="{#, STAR, COLON_COLON, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, ID, LPAREN, LBRACKET, LANGLE, AMP}">
     <group first="{#, STAR, COLON_COLON, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, ID, LPAREN, LBRACKET, LANGLE, AMP}">
      <sequence first="{#, STAR, COLON_COLON, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, ID, LPAREN, LBRACKET, LANGLE, AMP}">
       <group first="{#, COLON_COLON, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, ID, LANGLE}">
        <choice first="{#, COLON_COLON, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, ID, LANGLE}">
         <nonterminal first="{CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE}" ruleName="TypeSpecifierSeq"/>
         <action first="{#, COLON_COLON, ID, LANGLE}">
          <nonterminal first="{#, COLON_COLON, ID, LANGLE}" ruleName="TypeName"/>
         </action>
        </choice>
       </group>
       <optional first="{#, STAR, LPAREN, LBRACKET, AMP}">
        <group first="{STAR, LPAREN, LBRACKET, AMP}">
         <action first="{STAR, LPAREN, LBRACKET, AMP}">
          <nonterminal first="{STAR, LPAREN, LBRACKET, AMP}" ruleName="AbstractDeclarator"/>
         </action>
        </group>
       </optional>
      </sequence>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{#, COLON_COLON, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, ID, LANGLE}" name="Type">
   <sequence first="{#, COLON_COLON, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, ID, LANGLE}">
    <action first="{#}">
     <empty first="{#}"/>
    </action>
    <action first="{#, COLON_COLON, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, ID, LANGLE}">
     <group first="{#, COLON_COLON, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, ID, LANGLE}">
      <choice first="{#, COLON_COLON, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, ID, LANGLE}">
       <positive first="{CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE}">
        <group first="{CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE}">
         <action first="{CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE}">
          <nonterminal first="{CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE}" ruleName="TypeSpecifier"/>
         </action>
        </group>
       </positive>
       <action first="{#, COLON_COLON, ID, LANGLE}">
        <nonterminal first="{#, COLON_COLON, ID, LANGLE}" ruleName="TypeName"/>
       </action>
      </choice>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE}" name="TypeSpecifierSeq">
   <positive first="{CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE}">
    <group first="{CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE}">
     <action first="{CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE}">
      <nonterminal first="{CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE}" ruleName="TypeSpecifier"/>
     </action>
    </group>
   </positive>
  </rule>
  <rule first="{STAR, LPAREN, LBRACKET, AMP}" name="AbstractDeclarator">
   <action first="{STAR, LPAREN, LBRACKET, AMP}">
    <group first="{STAR, LPAREN, LBRACKET, AMP}">
     <switch first="{STAR, LPAREN, LBRACKET, AMP}">
      <case first="{STAR, AMP}">
       <sequence first="{STAR, AMP}">
        <action first="{STAR, AMP}">
         <nonterminal first="{STAR, AMP}" ruleName="PtrOperator"/>
        </action>
        <optional first="{#, STAR, LPAREN, LBRACKET, AMP}">
         <group first="{STAR, LPAREN, LBRACKET, AMP}">
          <action first="{STAR, LPAREN, LBRACKET, AMP}">
           <nonterminal first="{STAR, LPAREN, LBRACKET, AMP}" ruleName="AbstractDeclarator"/>
          </action>
         </group>
        </optional>
       </sequence>
      </case>
      <case first="{LPAREN, LBRACKET}">
       <action first="{LPAREN, LBRACKET}">
        <nonterminal first="{LPAREN, LBRACKET}" ruleName="DirectAbstractDeclarator"/>
       </action>
      </case>
     </switch>
    </group>
   </action>
  </rule>
  <rule first="{LPAREN, LBRACKET}" name="DirectAbstractDeclarator">
   <action first="{LPAREN, LBRACKET}">
    <group first="{LPAREN, LBRACKET}">
     <positive first="{LPAREN, LBRACKET}">
      <group first="{LPAREN, LBRACKET}">
       <switch first="{LPAREN, LBRACKET}">
        <case first="{LBRACKET}">
         <choice first="{LBRACKET}">
          <sequence first="{LBRACKET}">
           <sequence first="{LBRACKET}">
            <token first="{LBRACKET}" name="LBRACKET"/>
            <nonterminal first="{#, DISJUNCTION, AMP_AMP, DOT_STAR, ARROW_STAR, EQ, NEQ, LEQ, GEQ, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, REM, PLUS_PLUS, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, SIZEOF, OPERATOR, DYNAMIC_CAST, STATIC_CAST, REINTERPRET_CAST, CONST_CAST, TYPEID, THIS, NEW, DELETE, TRUE, FALSE, NULLPTR, ID, INTEGER_LITERAL, FLOATING_LITERAL, CHAR_LITERAL, STRING_LITERAL, DOT, LPAREN, LBRACKET, LANGLE, RANGLE, COMMA, ARROW, QUEST, AMP, EXCLAMATION, TILDE, CARET, PIPE}" ruleName="ConstantExpression"/>
           </sequence>
           <action first="{RBRACKET}">
            <token first="{RBRACKET}" name="RBRACKET"/>
           </action>
          </sequence>
          <sequence first="{LBRACKET}">
           <token first="{LBRACKET}" name="LBRACKET"/>
           <action first="{RBRACKET}">
            <token first="{RBRACKET}" name="RBRACKET"/>
           </action>
          </sequence>
         </choice>
        </case>
        <case first="{LPAREN}">
         <sequence first="{LPAREN}">
          <sequence first="{LPAREN}">
           <token first="{LPAREN}" name="LPAREN"/>
           <nonterminal first="{STAR, LPAREN, LBRACKET, AMP}" ruleName="AbstractDeclarator"/>
          </sequence>
          <action first="{RPAREN}">
           <token first="{RPAREN}" name="RPAREN"/>
          </action>
         </sequence>
        </case>
       </switch>
      </group>
     </positive>
    </group>
   </action>
  </rule>
  <rule first="{STAR, AMP}" name="PtrOperator">
   <action first="{STAR, AMP}">
    <group first="{STAR, AMP}">
     <switch first="{STAR, AMP}">
      <case first="{STAR}">
       <sequence first="{STAR}">
        <action first="{STAR}">
         <token first="{STAR}" name="STAR"/>
        </action>
        <optional first="{#, CONST, VOLATILE}">
         <group first="{CONST, VOLATILE}">
          <action first="{CONST, VOLATILE}">
           <nonterminal first="{CONST, VOLATILE}" ruleName="CVQualifierSeq"/>
          </action>
         </group>
        </optional>
       </sequence>
      </case>
      <case first="{AMP}">
       <action first="{AMP}">
        <token first="{AMP}" name="AMP"/>
       </action>
      </case>
     </switch>
    </group>
   </action>
  </rule>
  <rule first="{CONST, VOLATILE}" name="CVQualifierSeq">
   <action first="{CONST, VOLATILE}">
    <group first="{CONST, VOLATILE}">
     <positive first="{CONST, VOLATILE}">
      <group first="{CONST, VOLATILE}">
       <action first="{CONST, VOLATILE}">
        <nonterminal first="{CONST, VOLATILE}" ruleName="CVQualifier"/>
       </action>
      </group>
     </positive>
    </group>
   </action>
  </rule>
  <rule first="{ASSIGN, LPAREN}" name="Initializer">
   <action first="{ASSIGN, LPAREN}">
    <group first="{ASSIGN, LPAREN}">
     <switch first="{ASSIGN, LPAREN}">
      <case first="{ASSIGN}">
       <sequence first="{ASSIGN}">
        <token first="{ASSIGN}" name="ASSIGN"/>
        <action first="{#, DISJUNCTION, AMP_AMP, DOT_STAR, ARROW_STAR, EQ, NEQ, LEQ, GEQ, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, REM, PLUS_PLUS, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, SIZEOF, OPERATOR, DYNAMIC_CAST, STATIC_CAST, REINTERPRET_CAST, CONST_CAST, TYPEID, THIS, NEW, DELETE, TRUE, FALSE, NULLPTR, ID, INTEGER_LITERAL, FLOATING_LITERAL, CHAR_LITERAL, STRING_LITERAL, DOT, LPAREN, LBRACE, LBRACKET, LANGLE, RANGLE, ARROW, QUEST, AMP, EXCLAMATION, TILDE, CARET, PIPE}">
         <nonterminal first="{#, DISJUNCTION, AMP_AMP, DOT_STAR, ARROW_STAR, EQ, NEQ, LEQ, GEQ, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, REM, PLUS_PLUS, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, SIZEOF, OPERATOR, DYNAMIC_CAST, STATIC_CAST, REINTERPRET_CAST, CONST_CAST, TYPEID, THIS, NEW, DELETE, TRUE, FALSE, NULLPTR, ID, INTEGER_LITERAL, FLOATING_LITERAL, CHAR_LITERAL, STRING_LITERAL, DOT, LPAREN, LBRACE, LBRACKET, LANGLE, RANGLE, ARROW, QUEST, AMP, EXCLAMATION, TILDE, CARET, PIPE}" ruleName="InitializerClause"/>
        </action>
       </sequence>
      </case>
      <case first="{LPAREN}">
       <sequence first="{LPAREN}">
        <sequence first="{LPAREN}">
         <action first="{LPAREN}">
          <token first="{LPAREN}" name="LPAREN"/>
         </action>
         <nonterminal first="{#, DISJUNCTION, AMP_AMP, DOT_STAR, ARROW_STAR, EQ, NEQ, LEQ, GEQ, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, REM, PLUS_PLUS, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, SIZEOF, OPERATOR, DYNAMIC_CAST, STATIC_CAST, REINTERPRET_CAST, CONST_CAST, TYPEID, THIS, NEW, DELETE, TRUE, FALSE, NULLPTR, ID, INTEGER_LITERAL, FLOATING_LITERAL, CHAR_LITERAL, STRING_LITERAL, DOT, LPAREN, LBRACKET, LANGLE, RANGLE, COMMA, ARROW, QUEST, AMP, EXCLAMATION, TILDE, CARET, PIPE}" ruleName="ExpressionList"/>
        </sequence>
        <token first="{RPAREN}" name="RPAREN"/>
       </sequence>
      </case>
     </switch>
    </group>
   </action>
  </rule>
  <rule first="{#, DISJUNCTION, AMP_AMP, DOT_STAR, ARROW_STAR, EQ, NEQ, LEQ, GEQ, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, REM, PLUS_PLUS, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, SIZEOF, OPERATOR, DYNAMIC_CAST, STATIC_CAST, REINTERPRET_CAST, CONST_CAST, TYPEID, THIS, NEW, DELETE, TRUE, FALSE, NULLPTR, ID, INTEGER_LITERAL, FLOATING_LITERAL, CHAR_LITERAL, STRING_LITERAL, DOT, LPAREN, LBRACE, LBRACKET, LANGLE, RANGLE, ARROW, QUEST, AMP, EXCLAMATION, TILDE, CARET, PIPE}" name="InitializerClause">
   <action first="{#, DISJUNCTION, AMP_AMP, DOT_STAR, ARROW_STAR, EQ, NEQ, LEQ, GEQ, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, REM, PLUS_PLUS, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, SIZEOF, OPERATOR, DYNAMIC_CAST, STATIC_CAST, REINTERPRET_CAST, CONST_CAST, TYPEID, THIS, NEW, DELETE, TRUE, FALSE, NULLPTR, ID, INTEGER_LITERAL, FLOATING_LITERAL, CHAR_LITERAL, STRING_LITERAL, DOT, LPAREN, LBRACE, LBRACKET, LANGLE, RANGLE, ARROW, QUEST, AMP, EXCLAMATION, TILDE, CARET, PIPE}">
    <group first="{#, DISJUNCTION, AMP_AMP, DOT_STAR, ARROW_STAR, EQ, NEQ, LEQ, GEQ, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, REM, PLUS_PLUS, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, SIZEOF, OPERATOR, DYNAMIC_CAST, STATIC_CAST, REINTERPRET_CAST, CONST_CAST, TYPEID, THIS, NEW, DELETE, TRUE, FALSE, NULLPTR, ID, INTEGER_LITERAL, FLOATING_LITERAL, CHAR_LITERAL, STRING_LITERAL, DOT, LPAREN, LBRACE, LBRACKET, LANGLE, RANGLE, ARROW, QUEST, AMP, EXCLAMATION, TILDE, CARET, PIPE}">
     <choice first="{#, DISJUNCTION, AMP_AMP, DOT_STAR, ARROW_STAR, EQ, NEQ, LEQ, GEQ, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, REM, PLUS_PLUS, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, SIZEOF, OPERATOR, DYNAMIC_CAST, STATIC_CAST, REINTERPRET_CAST, CONST_CAST, TYPEID, THIS, NEW, DELETE, TRUE, FALSE, NULLPTR, ID, INTEGER_LITERAL, FLOATING_LITERAL, CHAR_LITERAL, STRING_LITERAL, DOT, LPAREN, LBRACE, LBRACKET, LANGLE, RANGLE, ARROW, QUEST, AMP, EXCLAMATION, TILDE, CARET, PIPE}">
      <choice first="{#, DISJUNCTION, AMP_AMP, DOT_STAR, ARROW_STAR, EQ, NEQ, LEQ, GEQ, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, REM, PLUS_PLUS, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, SIZEOF, OPERATOR, DYNAMIC_CAST, STATIC_CAST, REINTERPRET_CAST, CONST_CAST, TYPEID, THIS, NEW, DELETE, TRUE, FALSE, NULLPTR, ID, INTEGER_LITERAL, FLOATING_LITERAL, CHAR_LITERAL, STRING_LITERAL, DOT, LPAREN, LBRACE, LBRACKET, LANGLE, RANGLE, ARROW, QUEST, AMP, EXCLAMATION, TILDE, CARET, PIPE}">
       <action first="{#, DISJUNCTION, AMP_AMP, DOT_STAR, ARROW_STAR, EQ, NEQ, LEQ, GEQ, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, REM, PLUS_PLUS, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, SIZEOF, OPERATOR, DYNAMIC_CAST, STATIC_CAST, REINTERPRET_CAST, CONST_CAST, TYPEID, THIS, NEW, DELETE, TRUE, FALSE, NULLPTR, ID, INTEGER_LITERAL, FLOATING_LITERAL, CHAR_LITERAL, STRING_LITERAL, DOT, LPAREN, LBRACKET, LANGLE, RANGLE, ARROW, QUEST, AMP, EXCLAMATION, TILDE, CARET, PIPE}">
        <nonterminal first="{#, DISJUNCTION, AMP_AMP, DOT_STAR, ARROW_STAR, EQ, NEQ, LEQ, GEQ, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, REM, PLUS_PLUS, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, SIZEOF, OPERATOR, DYNAMIC_CAST, STATIC_CAST, REINTERPRET_CAST, CONST_CAST, TYPEID, THIS, NEW, DELETE, TRUE, FALSE, NULLPTR, ID, INTEGER_LITERAL, FLOATING_LITERAL, CHAR_LITERAL, STRING_LITERAL, DOT, LPAREN, LBRACKET, LANGLE, RANGLE, ARROW, QUEST, AMP, EXCLAMATION, TILDE, CARET, PIPE}" ruleName="AssignmentExpression"/>
       </action>
       <sequence first="{LBRACE}">
        <sequence first="{LBRACE}">
         <action first="{LBRACE}">
          <token first="{LBRACE}" name="LBRACE"/>
         </action>
         <nonterminal first="{#, DISJUNCTION, AMP_AMP, DOT_STAR, ARROW_STAR, EQ, NEQ, LEQ, GEQ, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, REM, PLUS_PLUS, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, SIZEOF, OPERATOR, DYNAMIC_CAST, STATIC_CAST, REINTERPRET_CAST, CONST_CAST, TYPEID, THIS, NEW, DELETE, TRUE, FALSE, NULLPTR, ID, INTEGER_LITERAL, FLOATING_LITERAL, CHAR_LITERAL, STRING_LITERAL, DOT, LPAREN, LBRACE, LBRACKET, LANGLE, RANGLE, COMMA, ARROW, QUEST, AMP, EXCLAMATION, TILDE, CARET, PIPE}" ruleName="InitializerList"/>
        </sequence>
        <token first="{RBRACE}" name="RBRACE"/>
       </sequence>
      </choice>
      <sequence first="{LBRACE}">
       <token first="{LBRACE}" name="LBRACE"/>
       <action first="{RBRACE}">
        <token first="{RBRACE}" name="RBRACE"/>
       </action>
      </sequence>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{#, DISJUNCTION, AMP_AMP, DOT_STAR, ARROW_STAR, EQ, NEQ, LEQ, GEQ, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, REM, PLUS_PLUS, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, SIZEOF, OPERATOR, DYNAMIC_CAST, STATIC_CAST, REINTERPRET_CAST, CONST_CAST, TYPEID, THIS, NEW, DELETE, TRUE, FALSE, NULLPTR, ID, INTEGER_LITERAL, FLOATING_LITERAL, CHAR_LITERAL, STRING_LITERAL, DOT, LPAREN, LBRACE, LBRACKET, LANGLE, RANGLE, COMMA, ARROW, QUEST, AMP, EXCLAMATION, TILDE, CARET, PIPE}" name="InitializerList">
   <list first="{#, DISJUNCTION, AMP_AMP, DOT_STAR, ARROW_STAR, EQ, NEQ, LEQ, GEQ, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, REM, PLUS_PLUS, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, SIZEOF, OPERATOR, DYNAMIC_CAST, STATIC_CAST, REINTERPRET_CAST, CONST_CAST, TYPEID, THIS, NEW, DELETE, TRUE, FALSE, NULLPTR, ID, INTEGER_LITERAL, FLOATING_LITERAL, CHAR_LITERAL, STRING_LITERAL, DOT, LPAREN, LBRACE, LBRACKET, LANGLE, RANGLE, COMMA, ARROW, QUEST, AMP, EXCLAMATION, TILDE, CARET, PIPE}">
    <sequence first="{#, DISJUNCTION, AMP_AMP, DOT_STAR, ARROW_STAR, EQ, NEQ, LEQ, GEQ, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, REM, PLUS_PLUS, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, SIZEOF, OPERATOR, DYNAMIC_CAST, STATIC_CAST, REINTERPRET_CAST, CONST_CAST, TYPEID, THIS, NEW, DELETE, TRUE, FALSE, NULLPTR, ID, INTEGER_LITERAL, FLOATING_LITERAL, CHAR_LITERAL, STRING_LITERAL, DOT, LPAREN, LBRACE, LBRACKET, LANGLE, RANGLE, COMMA, ARROW, QUEST, AMP, EXCLAMATION, TILDE, CARET, PIPE}">
     <action first="{#, DISJUNCTION, AMP_AMP, DOT_STAR, ARROW_STAR, EQ, NEQ, LEQ, GEQ, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, REM, PLUS_PLUS, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, SIZEOF, OPERATOR, DYNAMIC_CAST, STATIC_CAST, REINTERPRET_CAST, CONST_CAST, TYPEID, THIS, NEW, DELETE, TRUE, FALSE, NULLPTR, ID, INTEGER_LITERAL, FLOATING_LITERAL, CHAR_LITERAL, STRING_LITERAL, DOT, LPAREN, LBRACE, LBRACKET, LANGLE, RANGLE, ARROW, QUEST, AMP, EXCLAMATION, TILDE, CARET, PIPE}">
      <nonterminal first="{#, DISJUNCTION, AMP_AMP, DOT_STAR, ARROW_STAR, EQ, NEQ, LEQ, GEQ, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, REM, PLUS_PLUS, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, SIZEOF, OPERATOR, DYNAMIC_CAST, STATIC_CAST, REINTERPRET_CAST, CONST_CAST, TYPEID, THIS, NEW, DELETE, TRUE, FALSE, NULLPTR, ID, INTEGER_LITERAL, FLOATING_LITERAL, CHAR_LITERAL, STRING_LITERAL, DOT, LPAREN, LBRACE, LBRACKET, LANGLE, RANGLE, ARROW, QUEST, AMP, EXCLAMATION, TILDE, CARET, PIPE}" ruleName="InitializerClause"/>
     </action>
     <kleene first="{#, COMMA}">
      <sequence first="{COMMA}">
       <token first="{COMMA}" name="COMMA"/>
       <action first="{#, DISJUNCTION, AMP_AMP, DOT_STAR, ARROW_STAR, EQ, NEQ, LEQ, GEQ, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, REM, PLUS_PLUS, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, SIZEOF, OPERATOR, DYNAMIC_CAST, STATIC_CAST, REINTERPRET_CAST, CONST_CAST, TYPEID, THIS, NEW, DELETE, TRUE, FALSE, NULLPTR, ID, INTEGER_LITERAL, FLOATING_LITERAL, CHAR_LITERAL, STRING_LITERAL, DOT, LPAREN, LBRACE, LBRACKET, LANGLE, RANGLE, ARROW, QUEST, AMP, EXCLAMATION, TILDE, CARET, PIPE}">
        <nonterminal first="{#, DISJUNCTION, AMP_AMP, DOT_STAR, ARROW_STAR, EQ, NEQ, LEQ, GEQ, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, REM, PLUS_PLUS, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, CHAR, CHAR8T, CHAR16T, CHAR32T, WCHART, BOOL, SHORT, INT, LONG, SIGNED, UNSIGNED, FLOAT, DOUBLE, VOID, CONST, VOLATILE, SIZEOF, OPERATOR, DYNAMIC_CAST, STATIC_CAST, REINTERPRET_CAST, CONST_CAST, TYPEID, THIS, NEW, DELETE, TRUE, FALSE, NULLPTR, ID, INTEGER_LITERAL, FLOATING_LITERAL, CHAR_LITERAL, STRING_LITERAL, DOT, LPAREN, LBRACE, LBRACKET, LANGLE, RANGLE, ARROW, QUEST, AMP, EXCLAMATION, TILDE, CARET, PIPE}" ruleName="InitializerClause"/>
       </action>
      </sequence>
     </kleene>
    </sequence>
   </list>
  </rule>
 </grammar>
</parserFile>
