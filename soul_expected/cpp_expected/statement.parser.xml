<parserFile>
 <grammar name="StatementParser">
  <rule first="{SEMICOLON, RANGLE, CASE, CHAR, THIS, DEFAULT, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, USING, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, IF, CHAR8T, DYNAMIC_CAST, FOR, WCHART, RETURN, GOTO, DOT, LPAREN, LANGLE, SIGNED, INT, NAMESPACE, ID, UNSIGNED, WHILE, LBRACE, FLOATING_LITERAL, LONG, CONTINUE, SWITCH, INTEGER_LITERAL, SHORT, DELETE, BREAK, STRING_LITERAL, DO, VOID, CHAR_LITERAL, LBRACKET, TYPEDEF, MUTABLE, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, AUTO, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, REGISTER, MINUS_MINUS, MINUS, GEQ, ASSIGN, STATIC, COLON_COLON, EXTERN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}" name="Statement">
   <choice first="{SEMICOLON, RANGLE, CASE, CHAR, THIS, DEFAULT, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, USING, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, IF, CHAR8T, DYNAMIC_CAST, FOR, WCHART, RETURN, GOTO, DOT, LPAREN, LANGLE, SIGNED, INT, NAMESPACE, ID, UNSIGNED, WHILE, LBRACE, FLOATING_LITERAL, LONG, CONTINUE, SWITCH, INTEGER_LITERAL, SHORT, DELETE, BREAK, STRING_LITERAL, DO, VOID, CHAR_LITERAL, LBRACKET, TYPEDEF, MUTABLE, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, AUTO, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, REGISTER, MINUS_MINUS, MINUS, GEQ, ASSIGN, STATIC, COLON_COLON, EXTERN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}">
    <choice first="{SEMICOLON, CASE, CHAR, DEFAULT, BOOL, FLOAT, CHAR16T, CONST, USING, DOUBLE, OPERATOR, CHAR32T, IF, CHAR8T, FOR, WCHART, RETURN, GOTO, SIGNED, INT, NAMESPACE, ID, UNSIGNED, WHILE, LBRACE, LONG, CONTINUE, SWITCH, SHORT, BREAK, DO, VOID, TYPEDEF, MUTABLE, VOLATILE, AUTO, REGISTER, STATIC, COLON_COLON, EXTERN, STAR, #, #, AMP, #, #}">
     <choice first="{SEMICOLON, CASE, DEFAULT, IF, FOR, RETURN, GOTO, ID, WHILE, LBRACE, CONTINUE, SWITCH, BREAK, DO}">
      <choice first="{SEMICOLON, CASE, DEFAULT, IF, FOR, ID, WHILE, LBRACE, SWITCH, DO}">
       <choice first="{SEMICOLON, CASE, DEFAULT, IF, ID, LBRACE, SWITCH}">
        <choice first="{SEMICOLON, CASE, DEFAULT, ID, LBRACE}">
         <choice first="{SEMICOLON, CASE, DEFAULT, ID}">
          <action first="{CASE, DEFAULT, ID}">
           <nonterminal first="{CASE, DEFAULT, ID}" ruleName="LabeledStatement"/>
          </action>
          <action first="{SEMICOLON}">
           <nonterminal first="{SEMICOLON}" ruleName="EmptyStatement"/>
          </action>
         </choice>
         <action first="{LBRACE}">
          <nonterminal first="{LBRACE}" ruleName="CompoundStatement"/>
         </action>
        </choice>
        <action first="{IF, SWITCH}">
         <nonterminal first="{IF, SWITCH}" ruleName="SelectionStatement"/>
        </action>
       </choice>
       <action first="{FOR, WHILE, DO}">
        <nonterminal first="{FOR, WHILE, DO}" ruleName="IterationStatement"/>
       </action>
      </choice>
      <action first="{RETURN, GOTO, CONTINUE, BREAK}">
       <nonterminal first="{RETURN, GOTO, CONTINUE, BREAK}" ruleName="JumpStatement"/>
      </action>
     </choice>
     <action first="{SEMICOLON, CHAR, BOOL, FLOAT, CHAR16T, CONST, USING, DOUBLE, OPERATOR, CHAR32T, CHAR8T, WCHART, SIGNED, INT, NAMESPACE, ID, UNSIGNED, LONG, SHORT, VOID, TYPEDEF, MUTABLE, VOLATILE, AUTO, REGISTER, STATIC, COLON_COLON, EXTERN, STAR, #, #, AMP, #, #}">
      <nonterminal first="{SEMICOLON, CHAR, BOOL, FLOAT, CHAR16T, CONST, USING, DOUBLE, OPERATOR, CHAR32T, CHAR8T, WCHART, SIGNED, INT, NAMESPACE, ID, UNSIGNED, LONG, SHORT, VOID, TYPEDEF, MUTABLE, VOLATILE, AUTO, REGISTER, STATIC, COLON_COLON, EXTERN, STAR, #, #, AMP, #, #}" ruleName="DeclarationStatement"/>
     </action>
    </choice>
    <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
     <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="ExpressionStatement"/>
    </action>
   </choice>
  </rule>
  <rule first="{CASE, DEFAULT, ID}" name="LabeledStatement">
   <choice first="{CASE, DEFAULT, ID}">
    <choice first="{CASE, ID}">
     <sequence first="{ID}">
      <sequence first="{ID}">
       <action first="{ID}">
        <token first="{ID}" name="ID"/>
       </action>
       <token first="{COLON}" name="COLON"/>
      </sequence>
      <action first="{SEMICOLON, RANGLE, CASE, CHAR, THIS, DEFAULT, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, USING, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, IF, CHAR8T, DYNAMIC_CAST, FOR, WCHART, RETURN, GOTO, DOT, LPAREN, LANGLE, SIGNED, INT, NAMESPACE, ID, UNSIGNED, WHILE, LBRACE, FLOATING_LITERAL, LONG, CONTINUE, SWITCH, INTEGER_LITERAL, SHORT, DELETE, BREAK, STRING_LITERAL, DO, VOID, CHAR_LITERAL, LBRACKET, TYPEDEF, MUTABLE, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, AUTO, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, REGISTER, MINUS_MINUS, MINUS, GEQ, ASSIGN, STATIC, COLON_COLON, EXTERN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}">
       <nonterminal first="{SEMICOLON, RANGLE, CASE, CHAR, THIS, DEFAULT, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, USING, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, IF, CHAR8T, DYNAMIC_CAST, FOR, WCHART, RETURN, GOTO, DOT, LPAREN, LANGLE, SIGNED, INT, NAMESPACE, ID, UNSIGNED, WHILE, LBRACE, FLOATING_LITERAL, LONG, CONTINUE, SWITCH, INTEGER_LITERAL, SHORT, DELETE, BREAK, STRING_LITERAL, DO, VOID, CHAR_LITERAL, LBRACKET, TYPEDEF, MUTABLE, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, AUTO, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, REGISTER, MINUS_MINUS, MINUS, GEQ, ASSIGN, STATIC, COLON_COLON, EXTERN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}" ruleName="Statement"/>
      </action>
     </sequence>
     <sequence first="{CASE}">
      <sequence first="{CASE}">
       <sequence first="{CASE}">
        <token first="{CASE}" name="CASE"/>
        <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="ConstantExpression"/>
       </sequence>
       <token first="{COLON}" name="COLON"/>
      </sequence>
      <action first="{SEMICOLON, RANGLE, CASE, CHAR, THIS, DEFAULT, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, USING, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, IF, CHAR8T, DYNAMIC_CAST, FOR, WCHART, RETURN, GOTO, DOT, LPAREN, LANGLE, SIGNED, INT, NAMESPACE, ID, UNSIGNED, WHILE, LBRACE, FLOATING_LITERAL, LONG, CONTINUE, SWITCH, INTEGER_LITERAL, SHORT, DELETE, BREAK, STRING_LITERAL, DO, VOID, CHAR_LITERAL, LBRACKET, TYPEDEF, MUTABLE, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, AUTO, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, REGISTER, MINUS_MINUS, MINUS, GEQ, ASSIGN, STATIC, COLON_COLON, EXTERN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}">
       <nonterminal first="{SEMICOLON, RANGLE, CASE, CHAR, THIS, DEFAULT, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, USING, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, IF, CHAR8T, DYNAMIC_CAST, FOR, WCHART, RETURN, GOTO, DOT, LPAREN, LANGLE, SIGNED, INT, NAMESPACE, ID, UNSIGNED, WHILE, LBRACE, FLOATING_LITERAL, LONG, CONTINUE, SWITCH, INTEGER_LITERAL, SHORT, DELETE, BREAK, STRING_LITERAL, DO, VOID, CHAR_LITERAL, LBRACKET, TYPEDEF, MUTABLE, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, AUTO, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, REGISTER, MINUS_MINUS, MINUS, GEQ, ASSIGN, STATIC, COLON_COLON, EXTERN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}" ruleName="Statement"/>
      </action>
     </sequence>
    </choice>
    <sequence first="{DEFAULT}">
     <sequence first="{DEFAULT}">
      <token first="{DEFAULT}" name="DEFAULT"/>
      <token first="{COLON}" name="COLON"/>
     </sequence>
     <action first="{SEMICOLON, RANGLE, CASE, CHAR, THIS, DEFAULT, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, USING, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, IF, CHAR8T, DYNAMIC_CAST, FOR, WCHART, RETURN, GOTO, DOT, LPAREN, LANGLE, SIGNED, INT, NAMESPACE, ID, UNSIGNED, WHILE, LBRACE, FLOATING_LITERAL, LONG, CONTINUE, SWITCH, INTEGER_LITERAL, SHORT, DELETE, BREAK, STRING_LITERAL, DO, VOID, CHAR_LITERAL, LBRACKET, TYPEDEF, MUTABLE, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, AUTO, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, REGISTER, MINUS_MINUS, MINUS, GEQ, ASSIGN, STATIC, COLON_COLON, EXTERN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}">
      <nonterminal first="{SEMICOLON, RANGLE, CASE, CHAR, THIS, DEFAULT, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, USING, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, IF, CHAR8T, DYNAMIC_CAST, FOR, WCHART, RETURN, GOTO, DOT, LPAREN, LANGLE, SIGNED, INT, NAMESPACE, ID, UNSIGNED, WHILE, LBRACE, FLOATING_LITERAL, LONG, CONTINUE, SWITCH, INTEGER_LITERAL, SHORT, DELETE, BREAK, STRING_LITERAL, DO, VOID, CHAR_LITERAL, LBRACKET, TYPEDEF, MUTABLE, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, AUTO, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, REGISTER, MINUS_MINUS, MINUS, GEQ, ASSIGN, STATIC, COLON_COLON, EXTERN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}" ruleName="Statement"/>
     </action>
    </sequence>
   </choice>
  </rule>
  <rule first="{SEMICOLON}" name="EmptyStatement">
   <action first="{SEMICOLON}">
    <token first="{SEMICOLON}" name="SEMICOLON"/>
   </action>
  </rule>
  <rule first="{LBRACE}" name="CompoundStatement">
   <action first="{LBRACE}">
    <group first="{LBRACE}">
     <sequence first="{LBRACE}">
      <sequence first="{LBRACE}">
       <action first="{LBRACE}">
        <token first="{LBRACE}" name="LBRACE"/>
       </action>
       <kleene first="{SEMICOLON, RANGLE, CASE, CHAR, THIS, DEFAULT, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, USING, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, IF, CHAR8T, DYNAMIC_CAST, FOR, WCHART, RETURN, GOTO, DOT, LPAREN, LANGLE, SIGNED, INT, NAMESPACE, ID, UNSIGNED, WHILE, LBRACE, FLOATING_LITERAL, LONG, CONTINUE, SWITCH, INTEGER_LITERAL, SHORT, DELETE, BREAK, STRING_LITERAL, DO, VOID, CHAR_LITERAL, LBRACKET, TYPEDEF, MUTABLE, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, AUTO, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, REGISTER, MINUS_MINUS, MINUS, GEQ, ASSIGN, STATIC, COLON_COLON, EXTERN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #, #}">
        <group first="{SEMICOLON, RANGLE, CASE, CHAR, THIS, DEFAULT, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, USING, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, IF, CHAR8T, DYNAMIC_CAST, FOR, WCHART, RETURN, GOTO, DOT, LPAREN, LANGLE, SIGNED, INT, NAMESPACE, ID, UNSIGNED, WHILE, LBRACE, FLOATING_LITERAL, LONG, CONTINUE, SWITCH, INTEGER_LITERAL, SHORT, DELETE, BREAK, STRING_LITERAL, DO, VOID, CHAR_LITERAL, LBRACKET, TYPEDEF, MUTABLE, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, AUTO, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, REGISTER, MINUS_MINUS, MINUS, GEQ, ASSIGN, STATIC, COLON_COLON, EXTERN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}">
         <action first="{SEMICOLON, RANGLE, CASE, CHAR, THIS, DEFAULT, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, USING, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, IF, CHAR8T, DYNAMIC_CAST, FOR, WCHART, RETURN, GOTO, DOT, LPAREN, LANGLE, SIGNED, INT, NAMESPACE, ID, UNSIGNED, WHILE, LBRACE, FLOATING_LITERAL, LONG, CONTINUE, SWITCH, INTEGER_LITERAL, SHORT, DELETE, BREAK, STRING_LITERAL, DO, VOID, CHAR_LITERAL, LBRACKET, TYPEDEF, MUTABLE, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, AUTO, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, REGISTER, MINUS_MINUS, MINUS, GEQ, ASSIGN, STATIC, COLON_COLON, EXTERN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}">
          <nonterminal first="{SEMICOLON, RANGLE, CASE, CHAR, THIS, DEFAULT, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, USING, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, IF, CHAR8T, DYNAMIC_CAST, FOR, WCHART, RETURN, GOTO, DOT, LPAREN, LANGLE, SIGNED, INT, NAMESPACE, ID, UNSIGNED, WHILE, LBRACE, FLOATING_LITERAL, LONG, CONTINUE, SWITCH, INTEGER_LITERAL, SHORT, DELETE, BREAK, STRING_LITERAL, DO, VOID, CHAR_LITERAL, LBRACKET, TYPEDEF, MUTABLE, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, AUTO, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, REGISTER, MINUS_MINUS, MINUS, GEQ, ASSIGN, STATIC, COLON_COLON, EXTERN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}" ruleName="Statement"/>
         </action>
        </group>
       </kleene>
      </sequence>
      <token first="{RBRACE}" name="RBRACE"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{IF, SWITCH}" name="SelectionStatement">
   <choice first="{IF, SWITCH}">
    <action first="{IF}">
     <nonterminal first="{IF}" ruleName="IfStatement"/>
    </action>
    <action first="{SWITCH}">
     <nonterminal first="{SWITCH}" ruleName="SwitchStatement"/>
    </action>
   </choice>
  </rule>
  <rule first="{IF}" name="IfStatement">
   <action first="{IF}">
    <group first="{IF}">
     <sequence first="{IF}">
      <sequence first="{IF}">
       <sequence first="{IF}">
        <sequence first="{IF}">
         <sequence first="{IF}">
          <token first="{IF}" name="IF"/>
          <token first="{LPAREN}" name="LPAREN"/>
         </sequence>
         <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}" ruleName="Condition"/>
        </sequence>
        <token first="{RPAREN}" name="RPAREN"/>
       </sequence>
       <nonterminal first="{SEMICOLON, RANGLE, CASE, CHAR, THIS, DEFAULT, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, USING, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, IF, CHAR8T, DYNAMIC_CAST, FOR, WCHART, RETURN, GOTO, DOT, LPAREN, LANGLE, SIGNED, INT, NAMESPACE, ID, UNSIGNED, WHILE, LBRACE, FLOATING_LITERAL, LONG, CONTINUE, SWITCH, INTEGER_LITERAL, SHORT, DELETE, BREAK, STRING_LITERAL, DO, VOID, CHAR_LITERAL, LBRACKET, TYPEDEF, MUTABLE, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, AUTO, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, REGISTER, MINUS_MINUS, MINUS, GEQ, ASSIGN, STATIC, COLON_COLON, EXTERN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}" ruleName="Statement"/>
      </sequence>
      <optional first="{ELSE, #}">
       <group first="{ELSE}">
        <sequence first="{ELSE}">
         <token first="{ELSE}" name="ELSE"/>
         <nonterminal first="{SEMICOLON, RANGLE, CASE, CHAR, THIS, DEFAULT, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, USING, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, IF, CHAR8T, DYNAMIC_CAST, FOR, WCHART, RETURN, GOTO, DOT, LPAREN, LANGLE, SIGNED, INT, NAMESPACE, ID, UNSIGNED, WHILE, LBRACE, FLOATING_LITERAL, LONG, CONTINUE, SWITCH, INTEGER_LITERAL, SHORT, DELETE, BREAK, STRING_LITERAL, DO, VOID, CHAR_LITERAL, LBRACKET, TYPEDEF, MUTABLE, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, AUTO, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, REGISTER, MINUS_MINUS, MINUS, GEQ, ASSIGN, STATIC, COLON_COLON, EXTERN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}" ruleName="Statement"/>
        </sequence>
       </group>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{SWITCH}" name="SwitchStatement">
   <action first="{SWITCH}">
    <group first="{SWITCH}">
     <sequence first="{SWITCH}">
      <sequence first="{SWITCH}">
       <sequence first="{SWITCH}">
        <sequence first="{SWITCH}">
         <token first="{SWITCH}" name="SWITCH"/>
         <token first="{LPAREN}" name="LPAREN"/>
        </sequence>
        <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}" ruleName="Condition"/>
       </sequence>
       <token first="{RPAREN}" name="RPAREN"/>
      </sequence>
      <nonterminal first="{SEMICOLON, RANGLE, CASE, CHAR, THIS, DEFAULT, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, USING, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, IF, CHAR8T, DYNAMIC_CAST, FOR, WCHART, RETURN, GOTO, DOT, LPAREN, LANGLE, SIGNED, INT, NAMESPACE, ID, UNSIGNED, WHILE, LBRACE, FLOATING_LITERAL, LONG, CONTINUE, SWITCH, INTEGER_LITERAL, SHORT, DELETE, BREAK, STRING_LITERAL, DO, VOID, CHAR_LITERAL, LBRACKET, TYPEDEF, MUTABLE, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, AUTO, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, REGISTER, MINUS_MINUS, MINUS, GEQ, ASSIGN, STATIC, COLON_COLON, EXTERN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}" ruleName="Statement"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{FOR, WHILE, DO}" name="IterationStatement">
   <choice first="{FOR, WHILE, DO}">
    <choice first="{FOR, WHILE, DO}">
     <choice first="{WHILE, DO}">
      <action first="{WHILE}">
       <nonterminal first="{WHILE}" ruleName="WhileStatement"/>
      </action>
      <action first="{DO}">
       <nonterminal first="{DO}" ruleName="DoStatement"/>
      </action>
     </choice>
     <action first="{FOR}">
      <nonterminal first="{FOR}" ruleName="RangeForStatement"/>
     </action>
    </choice>
    <action first="{FOR}">
     <nonterminal first="{FOR}" ruleName="ForStatement"/>
    </action>
   </choice>
  </rule>
  <rule first="{WHILE}" name="WhileStatement">
   <action first="{WHILE}">
    <group first="{WHILE}">
     <sequence first="{WHILE}">
      <sequence first="{WHILE}">
       <sequence first="{WHILE}">
        <sequence first="{WHILE}">
         <token first="{WHILE}" name="WHILE"/>
         <token first="{LPAREN}" name="LPAREN"/>
        </sequence>
        <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}" ruleName="Condition"/>
       </sequence>
       <token first="{RPAREN}" name="RPAREN"/>
      </sequence>
      <nonterminal first="{SEMICOLON, RANGLE, CASE, CHAR, THIS, DEFAULT, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, USING, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, IF, CHAR8T, DYNAMIC_CAST, FOR, WCHART, RETURN, GOTO, DOT, LPAREN, LANGLE, SIGNED, INT, NAMESPACE, ID, UNSIGNED, WHILE, LBRACE, FLOATING_LITERAL, LONG, CONTINUE, SWITCH, INTEGER_LITERAL, SHORT, DELETE, BREAK, STRING_LITERAL, DO, VOID, CHAR_LITERAL, LBRACKET, TYPEDEF, MUTABLE, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, AUTO, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, REGISTER, MINUS_MINUS, MINUS, GEQ, ASSIGN, STATIC, COLON_COLON, EXTERN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}" ruleName="Statement"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{DO}" name="DoStatement">
   <action first="{DO}">
    <group first="{DO}">
     <sequence first="{DO}">
      <sequence first="{DO}">
       <sequence first="{DO}">
        <sequence first="{DO}">
         <sequence first="{DO}">
          <sequence first="{DO}">
           <token first="{DO}" name="DO"/>
           <nonterminal first="{SEMICOLON, RANGLE, CASE, CHAR, THIS, DEFAULT, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, USING, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, IF, CHAR8T, DYNAMIC_CAST, FOR, WCHART, RETURN, GOTO, DOT, LPAREN, LANGLE, SIGNED, INT, NAMESPACE, ID, UNSIGNED, WHILE, LBRACE, FLOATING_LITERAL, LONG, CONTINUE, SWITCH, INTEGER_LITERAL, SHORT, DELETE, BREAK, STRING_LITERAL, DO, VOID, CHAR_LITERAL, LBRACKET, TYPEDEF, MUTABLE, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, AUTO, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, REGISTER, MINUS_MINUS, MINUS, GEQ, ASSIGN, STATIC, COLON_COLON, EXTERN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}" ruleName="Statement"/>
          </sequence>
          <token first="{WHILE}" name="WHILE"/>
         </sequence>
         <token first="{LPAREN}" name="LPAREN"/>
        </sequence>
        <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="Expression"/>
       </sequence>
       <token first="{RPAREN}" name="RPAREN"/>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{FOR}" name="RangeForStatement">
   <action first="{FOR}">
    <group first="{FOR}">
     <sequence first="{FOR}">
      <sequence first="{FOR}">
       <sequence first="{FOR}">
        <sequence first="{FOR}">
         <sequence first="{FOR}">
          <sequence first="{FOR}">
           <token first="{FOR}" name="FOR"/>
           <token first="{LPAREN}" name="LPAREN"/>
          </sequence>
          <nonterminal first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, OPERATOR, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, TYPEDEF, MUTABLE, VOLATILE, AUTO, REGISTER, STATIC, COLON_COLON, EXTERN, STAR, #, AMP, #, #}" ruleName="ForRangeDeclaration"/>
         </sequence>
         <token first="{COLON}" name="COLON"/>
        </sequence>
        <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="Expression"/>
       </sequence>
       <token first="{RPAREN}" name="RPAREN"/>
      </sequence>
      <nonterminal first="{SEMICOLON, RANGLE, CASE, CHAR, THIS, DEFAULT, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, USING, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, IF, CHAR8T, DYNAMIC_CAST, FOR, WCHART, RETURN, GOTO, DOT, LPAREN, LANGLE, SIGNED, INT, NAMESPACE, ID, UNSIGNED, WHILE, LBRACE, FLOATING_LITERAL, LONG, CONTINUE, SWITCH, INTEGER_LITERAL, SHORT, DELETE, BREAK, STRING_LITERAL, DO, VOID, CHAR_LITERAL, LBRACKET, TYPEDEF, MUTABLE, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, AUTO, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, REGISTER, MINUS_MINUS, MINUS, GEQ, ASSIGN, STATIC, COLON_COLON, EXTERN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}" ruleName="Statement"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, OPERATOR, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, TYPEDEF, MUTABLE, VOLATILE, AUTO, REGISTER, STATIC, COLON_COLON, EXTERN, STAR, #, AMP, #, #}" name="ForRangeDeclaration">
   <action first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, OPERATOR, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, TYPEDEF, MUTABLE, VOLATILE, AUTO, REGISTER, STATIC, COLON_COLON, EXTERN, STAR, #, AMP, #, #}">
    <group first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, OPERATOR, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, TYPEDEF, MUTABLE, VOLATILE, AUTO, REGISTER, STATIC, COLON_COLON, EXTERN, STAR, #, AMP, #, #}">
     <sequence first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, OPERATOR, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, TYPEDEF, MUTABLE, VOLATILE, AUTO, REGISTER, STATIC, COLON_COLON, EXTERN, STAR, #, AMP, #, #}">
      <sequence first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, TYPEDEF, MUTABLE, VOLATILE, AUTO, REGISTER, STATIC, COLON_COLON, EXTERN, #, #}">
       <action first="{#}">
        <empty first="{#}"/>
       </action>
       <nonterminal first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, TYPEDEF, MUTABLE, VOLATILE, AUTO, REGISTER, STATIC, COLON_COLON, EXTERN, #}" ruleName="DeclSpecifierSeq"/>
      </sequence>
      <action first="{OPERATOR, ID, COLON_COLON, STAR, #, AMP, #}">
       <nonterminal first="{OPERATOR, ID, COLON_COLON, STAR, #, AMP, #}" ruleName="Declarator"/>
      </action>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{FOR}" name="ForStatement">
   <sequence first="{FOR}">
    <sequence first="{FOR}">
     <sequence first="{FOR}">
      <sequence first="{FOR}">
       <sequence first="{FOR}">
        <sequence first="{FOR}">
         <sequence first="{FOR}">
          <token first="{FOR}" name="FOR"/>
          <token first="{LPAREN}" name="LPAREN"/>
         </sequence>
         <nonterminal first="{SEMICOLON, RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, TYPEDEF, MUTABLE, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, AUTO, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, REGISTER, MINUS_MINUS, MINUS, GEQ, ASSIGN, STATIC, COLON_COLON, EXTERN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}" ruleName="ForInitStatement"/>
        </sequence>
        <optional first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #, #}">
         <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}" ruleName="Condition"/>
        </optional>
       </sequence>
       <token first="{SEMICOLON}" name="SEMICOLON"/>
      </sequence>
      <optional first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}">
       <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="Expression"/>
      </optional>
     </sequence>
     <token first="{RPAREN}" name="RPAREN"/>
    </sequence>
    <action first="{SEMICOLON, RANGLE, CASE, CHAR, THIS, DEFAULT, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, USING, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, IF, CHAR8T, DYNAMIC_CAST, FOR, WCHART, RETURN, GOTO, DOT, LPAREN, LANGLE, SIGNED, INT, NAMESPACE, ID, UNSIGNED, WHILE, LBRACE, FLOATING_LITERAL, LONG, CONTINUE, SWITCH, INTEGER_LITERAL, SHORT, DELETE, BREAK, STRING_LITERAL, DO, VOID, CHAR_LITERAL, LBRACKET, TYPEDEF, MUTABLE, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, AUTO, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, REGISTER, MINUS_MINUS, MINUS, GEQ, ASSIGN, STATIC, COLON_COLON, EXTERN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}">
     <nonterminal first="{SEMICOLON, RANGLE, CASE, CHAR, THIS, DEFAULT, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, USING, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, IF, CHAR8T, DYNAMIC_CAST, FOR, WCHART, RETURN, GOTO, DOT, LPAREN, LANGLE, SIGNED, INT, NAMESPACE, ID, UNSIGNED, WHILE, LBRACE, FLOATING_LITERAL, LONG, CONTINUE, SWITCH, INTEGER_LITERAL, SHORT, DELETE, BREAK, STRING_LITERAL, DO, VOID, CHAR_LITERAL, LBRACKET, TYPEDEF, MUTABLE, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, AUTO, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, REGISTER, MINUS_MINUS, MINUS, GEQ, ASSIGN, STATIC, COLON_COLON, EXTERN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}" ruleName="Statement"/>
    </action>
   </sequence>
  </rule>
  <rule first="{SEMICOLON, RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, TYPEDEF, MUTABLE, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, AUTO, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, REGISTER, MINUS_MINUS, MINUS, GEQ, ASSIGN, STATIC, COLON_COLON, EXTERN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}" name="ForInitStatement">
   <choice first="{SEMICOLON, RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, TYPEDEF, MUTABLE, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, AUTO, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, REGISTER, MINUS_MINUS, MINUS, GEQ, ASSIGN, STATIC, COLON_COLON, EXTERN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}">
    <choice first="{SEMICOLON, RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
     <action first="{SEMICOLON}">
      <nonterminal first="{SEMICOLON}" ruleName="EmptyStatement"/>
     </action>
     <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
      <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="ExpressionStatement"/>
     </action>
    </choice>
    <action first="{SEMICOLON, CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, OPERATOR, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, TYPEDEF, MUTABLE, VOLATILE, AUTO, REGISTER, STATIC, COLON_COLON, EXTERN, STAR, #, #, AMP, #, #}">
     <nonterminal first="{SEMICOLON, CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, OPERATOR, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, TYPEDEF, MUTABLE, VOLATILE, AUTO, REGISTER, STATIC, COLON_COLON, EXTERN, STAR, #, #, AMP, #, #}" ruleName="SimpleDeclaration"/>
    </action>
   </choice>
  </rule>
  <rule first="{RETURN, GOTO, CONTINUE, BREAK}" name="JumpStatement">
   <choice first="{RETURN, GOTO, CONTINUE, BREAK}">
    <choice first="{RETURN, CONTINUE, BREAK}">
     <choice first="{CONTINUE, BREAK}">
      <action first="{BREAK}">
       <nonterminal first="{BREAK}" ruleName="BreakStatement"/>
      </action>
      <action first="{CONTINUE}">
       <nonterminal first="{CONTINUE}" ruleName="ContinueStatement"/>
      </action>
     </choice>
     <action first="{RETURN}">
      <nonterminal first="{RETURN}" ruleName="ReturnStatement"/>
     </action>
    </choice>
    <action first="{GOTO}">
     <nonterminal first="{GOTO}" ruleName="GotoStatement"/>
    </action>
   </choice>
  </rule>
  <rule first="{BREAK}" name="BreakStatement">
   <action first="{BREAK}">
    <group first="{BREAK}">
     <sequence first="{BREAK}">
      <token first="{BREAK}" name="BREAK"/>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{CONTINUE}" name="ContinueStatement">
   <action first="{CONTINUE}">
    <group first="{CONTINUE}">
     <sequence first="{CONTINUE}">
      <token first="{CONTINUE}" name="CONTINUE"/>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{RETURN}" name="ReturnStatement">
   <action first="{RETURN}">
    <group first="{RETURN}">
     <sequence first="{RETURN}">
      <sequence first="{RETURN}">
       <token first="{RETURN}" name="RETURN"/>
       <optional first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}">
        <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="Expression"/>
       </optional>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{GOTO}" name="GotoStatement">
   <action first="{GOTO}">
    <group first="{GOTO}">
     <sequence first="{GOTO}">
      <sequence first="{GOTO}">
       <token first="{GOTO}" name="GOTO"/>
       <action first="{ID}">
        <token first="{ID}" name="ID"/>
       </action>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{SEMICOLON, CHAR, BOOL, FLOAT, CHAR16T, CONST, USING, DOUBLE, OPERATOR, CHAR32T, CHAR8T, WCHART, SIGNED, INT, NAMESPACE, ID, UNSIGNED, LONG, SHORT, VOID, TYPEDEF, MUTABLE, VOLATILE, AUTO, REGISTER, STATIC, COLON_COLON, EXTERN, STAR, #, #, AMP, #, #}" name="DeclarationStatement">
   <action first="{SEMICOLON, CHAR, BOOL, FLOAT, CHAR16T, CONST, USING, DOUBLE, OPERATOR, CHAR32T, CHAR8T, WCHART, SIGNED, INT, NAMESPACE, ID, UNSIGNED, LONG, SHORT, VOID, TYPEDEF, MUTABLE, VOLATILE, AUTO, REGISTER, STATIC, COLON_COLON, EXTERN, STAR, #, #, AMP, #, #}">
    <group first="{SEMICOLON, CHAR, BOOL, FLOAT, CHAR16T, CONST, USING, DOUBLE, OPERATOR, CHAR32T, CHAR8T, WCHART, SIGNED, INT, NAMESPACE, ID, UNSIGNED, LONG, SHORT, VOID, TYPEDEF, MUTABLE, VOLATILE, AUTO, REGISTER, STATIC, COLON_COLON, EXTERN, STAR, #, #, AMP, #, #}">
     <nonterminal first="{SEMICOLON, CHAR, BOOL, FLOAT, CHAR16T, CONST, USING, DOUBLE, OPERATOR, CHAR32T, CHAR8T, WCHART, SIGNED, INT, NAMESPACE, ID, UNSIGNED, LONG, SHORT, VOID, TYPEDEF, MUTABLE, VOLATILE, AUTO, REGISTER, STATIC, COLON_COLON, EXTERN, STAR, #, #, AMP, #, #}" ruleName="BlockDeclaration"/>
    </group>
   </action>
  </rule>
  <rule first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}" name="Condition">
   <group first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}">
    <choice first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #, #}">
     <sequence first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #, #}">
      <sequence first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #, #}">
       <sequence first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #, #}">
        <nonterminal first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #, #}" ruleName="TypeId"/>
        <nonterminal first="{OPERATOR, ID, COLON_COLON, STAR, #, AMP, #}" ruleName="Declarator"/>
       </sequence>
       <token first="{ASSIGN}" name="ASSIGN"/>
      </sequence>
      <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
       <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="AssignmentExpression"/>
      </action>
     </sequence>
     <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
      <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="Expression"/>
     </action>
    </choice>
   </group>
  </rule>
  <rule first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" name="ExpressionStatement">
   <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
    <group first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
     <sequence first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
      <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="Expression"/>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
 </grammar>
</parserFile>
