<parserFile>
 <grammar name="ExpressionParser">
  <rule first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" name="Expression">
   <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
    <group first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
     <sequence first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
      <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
       <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="AssignmentExpression"/>
      </action>
      <kleene first="{#, COMMA}">
       <group first="{COMMA}">
        <sequence first="{COMMA}">
         <token first="{COMMA}" name="COMMA"/>
         <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
          <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="AssignmentExpression"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" name="ConstantExpression">
   <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
    <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="Expression"/>
   </action>
  </rule>
  <rule first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" name="AssignmentExpression">
   <choice first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
    <sequence first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
     <sequence first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}">
      <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="LogicalOrExpression"/>
      <nonterminal first="{MUL_ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, MINUS_ASSIGN, ASSIGN, REM_ASSIGN, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN}" ruleName="AssignmentOp"/>
     </sequence>
     <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
      <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="AssignmentExpression"/>
     </action>
    </sequence>
    <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
     <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="ConditionalExpression"/>
    </action>
   </choice>
  </rule>
  <rule first="{MUL_ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, MINUS_ASSIGN, ASSIGN, REM_ASSIGN, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN}" name="AssignmentOp">
   <choice first="{MUL_ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, MINUS_ASSIGN, ASSIGN, REM_ASSIGN, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN}">
    <choice first="{MUL_ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, MINUS_ASSIGN, ASSIGN, REM_ASSIGN, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN}">
     <choice first="{MUL_ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, MINUS_ASSIGN, ASSIGN, REM_ASSIGN, SHIFT_RIGHT_ASSIGN}">
      <choice first="{MUL_ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, MINUS_ASSIGN, ASSIGN, REM_ASSIGN, SHIFT_RIGHT_ASSIGN}">
       <choice first="{MUL_ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, MINUS_ASSIGN, ASSIGN, REM_ASSIGN}">
        <choice first="{MUL_ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, ASSIGN, REM_ASSIGN}">
         <choice first="{MUL_ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, ASSIGN, REM_ASSIGN}">
          <choice first="{MUL_ASSIGN, DIV_ASSIGN, ASSIGN, REM_ASSIGN}">
           <choice first="{MUL_ASSIGN, DIV_ASSIGN, ASSIGN}">
            <choice first="{MUL_ASSIGN, ASSIGN}">
             <action first="{ASSIGN}">
              <token first="{ASSIGN}" name="ASSIGN"/>
             </action>
             <action first="{MUL_ASSIGN}">
              <token first="{MUL_ASSIGN}" name="MUL_ASSIGN"/>
             </action>
            </choice>
            <action first="{DIV_ASSIGN}">
             <token first="{DIV_ASSIGN}" name="DIV_ASSIGN"/>
            </action>
           </choice>
           <action first="{REM_ASSIGN}">
            <token first="{REM_ASSIGN}" name="REM_ASSIGN"/>
           </action>
          </choice>
          <action first="{PLUS_ASSIGN}">
           <token first="{PLUS_ASSIGN}" name="PLUS_ASSIGN"/>
          </action>
         </choice>
         <action first="{MINUS_ASSIGN}">
          <token first="{MINUS_ASSIGN}" name="MINUS_ASSIGN"/>
         </action>
        </choice>
        <action first="{SHIFT_LEFT_ASSIGN}">
         <token first="{SHIFT_LEFT_ASSIGN}" name="SHIFT_LEFT_ASSIGN"/>
        </action>
       </choice>
       <action first="{SHIFT_RIGHT_ASSIGN}">
        <token first="{SHIFT_RIGHT_ASSIGN}" name="SHIFT_RIGHT_ASSIGN"/>
       </action>
      </choice>
      <action first="{AND_ASSIGN}">
       <token first="{AND_ASSIGN}" name="AND_ASSIGN"/>
      </action>
     </choice>
     <action first="{XOR_ASSIGN}">
      <token first="{XOR_ASSIGN}" name="XOR_ASSIGN"/>
     </action>
    </choice>
    <action first="{OR_ASSIGN}">
     <token first="{OR_ASSIGN}" name="OR_ASSIGN"/>
    </action>
   </choice>
  </rule>
  <rule first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" name="ConditionalExpression">
   <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
    <group first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
     <sequence first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
      <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}">
       <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="LogicalOrExpression"/>
      </action>
      <optional first="{#, QUEST}">
       <group first="{QUEST}">
        <sequence first="{QUEST}">
         <sequence first="{QUEST}">
          <sequence first="{QUEST}">
           <token first="{QUEST}" name="QUEST"/>
           <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="Expression"/>
          </sequence>
          <token first="{COLON}" name="COLON"/>
         </sequence>
         <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
          <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="AssignmentExpression"/>
         </action>
        </sequence>
       </group>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}" name="LogicalOrExpression">
   <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}">
    <group first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}">
     <sequence first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}">
      <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, AMP_AMP, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}">
       <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, AMP_AMP, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="LogicalAndExpression"/>
      </action>
      <kleene first="{DISJUNCTION, #}">
       <group first="{DISJUNCTION}">
        <sequence first="{DISJUNCTION}">
         <token first="{DISJUNCTION}" name="DISJUNCTION"/>
         <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, AMP_AMP, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}">
          <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, AMP_AMP, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="LogicalAndExpression"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, AMP_AMP, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}" name="LogicalAndExpression">
   <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, AMP_AMP, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}">
    <group first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, AMP_AMP, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}">
     <sequence first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, AMP_AMP, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}">
      <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}">
       <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="InclusiveOrExpression"/>
      </action>
      <kleene first="{AMP_AMP, #}">
       <group first="{AMP_AMP}">
        <sequence first="{AMP_AMP}">
         <token first="{AMP_AMP}" name="AMP_AMP"/>
         <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}">
          <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="InclusiveOrExpression"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}" name="InclusiveOrExpression">
   <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}">
    <group first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}">
     <sequence first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}">
      <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}">
       <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="ExclusiveOrExpression"/>
      </action>
      <kleene first="{#, PIPE}">
       <group first="{PIPE}">
        <sequence first="{PIPE}">
         <token first="{PIPE}" name="PIPE"/>
         <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}">
          <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="ExclusiveOrExpression"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}" name="ExclusiveOrExpression">
   <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}">
    <group first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}">
     <sequence first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, CARET, TILDE, EXCLAMATION, AMP, ARROW, #}">
      <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
       <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="AndExpression"/>
      </action>
      <kleene first="{#, CARET}">
       <group first="{CARET}">
        <sequence first="{CARET}">
         <token first="{CARET}" name="CARET"/>
         <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
          <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="AndExpression"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" name="AndExpression">
   <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
    <group first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
     <sequence first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
      <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
       <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="EqualityExpression"/>
      </action>
      <kleene first="{#, AMP}">
       <group first="{AMP}">
        <sequence first="{AMP}">
         <token first="{AMP}" name="AMP"/>
         <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
          <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="EqualityExpression"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" name="EqualityExpression">
   <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
    <group first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
     <sequence first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
      <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
       <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="RelationalExpression"/>
      </action>
      <kleene first="{NEQ, EQ, #}">
       <group first="{NEQ, EQ}">
        <sequence first="{NEQ, EQ}">
         <nonterminal first="{NEQ, EQ}" ruleName="EqOp"/>
         <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
          <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="RelationalExpression"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{NEQ, EQ}" name="EqOp">
   <choice first="{NEQ, EQ}">
    <action first="{EQ}">
     <token first="{EQ}" name="EQ"/>
    </action>
    <action first="{NEQ}">
     <token first="{NEQ}" name="NEQ"/>
    </action>
   </choice>
  </rule>
  <rule first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" name="RelationalExpression">
   <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
    <group first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
     <sequence first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
      <action first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
       <nonterminal first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="ShiftExpression"/>
      </action>
      <kleene first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
       <group first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
        <sequence first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, GEQ, COLON_COLON, LEQ, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
         <nonterminal first="{RANGLE, LANGLE, GEQ, LEQ, #}" ruleName="RelOp"/>
         <action first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
          <nonterminal first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="ShiftExpression"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{RANGLE, LANGLE, GEQ, LEQ, #}" name="RelOp">
   <choice first="{RANGLE, LANGLE, GEQ, LEQ, #}">
    <choice first="{RANGLE, LANGLE, LEQ, #}">
     <choice first="{RANGLE, LANGLE, #}">
      <action first="{LANGLE}">
       <token first="{LANGLE}" name="LANGLE"/>
      </action>
      <sequence first="{RANGLE, #}">
       <action first="{#}">
        <empty first="{#}"/>
       </action>
       <action first="{RANGLE}">
        <token first="{RANGLE}" name="RANGLE"/>
       </action>
      </sequence>
     </choice>
     <action first="{LEQ}">
      <token first="{LEQ}" name="LEQ"/>
     </action>
    </choice>
    <action first="{GEQ}">
     <token first="{GEQ}" name="GEQ"/>
    </action>
   </choice>
  </rule>
  <rule first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" name="ShiftExpression">
   <action first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
    <group first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
     <sequence first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, PLUS_PLUS, PLUS, REM, DIV, SHIFT_RIGHT, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
      <action first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, REM, DIV, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
       <nonterminal first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, REM, DIV, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="AdditiveExpression"/>
      </action>
      <kleene first="{SHIFT_LEFT, SHIFT_RIGHT, #}">
       <group first="{SHIFT_LEFT, SHIFT_RIGHT}">
        <sequence first="{SHIFT_LEFT, SHIFT_RIGHT}">
         <nonterminal first="{SHIFT_LEFT, SHIFT_RIGHT}" ruleName="ShiftOp"/>
         <action first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, REM, DIV, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
          <nonterminal first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, REM, DIV, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="AdditiveExpression"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{SHIFT_LEFT, SHIFT_RIGHT}" name="ShiftOp">
   <choice first="{SHIFT_LEFT, SHIFT_RIGHT}">
    <action first="{SHIFT_LEFT}">
     <token first="{SHIFT_LEFT}" name="SHIFT_LEFT"/>
    </action>
    <action first="{SHIFT_RIGHT}">
     <token first="{SHIFT_RIGHT}" name="SHIFT_RIGHT"/>
    </action>
   </choice>
  </rule>
  <rule first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, REM, DIV, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" name="AdditiveExpression">
   <action first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, REM, DIV, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
    <group first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, REM, DIV, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
     <sequence first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, REM, DIV, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
      <action first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, REM, DIV, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
       <nonterminal first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, REM, DIV, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="MultiplicativeExpression"/>
      </action>
      <kleene first="{PLUS, MINUS, #}">
       <group first="{PLUS, MINUS}">
        <sequence first="{PLUS, MINUS}">
         <nonterminal first="{PLUS, MINUS}" ruleName="AddOp"/>
         <action first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, REM, DIV, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
          <nonterminal first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, REM, DIV, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="MultiplicativeExpression"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{PLUS, MINUS}" name="AddOp">
   <choice first="{PLUS, MINUS}">
    <action first="{PLUS}">
     <token first="{PLUS}" name="PLUS"/>
    </action>
    <action first="{MINUS}">
     <token first="{MINUS}" name="MINUS"/>
    </action>
   </choice>
  </rule>
  <rule first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, REM, DIV, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" name="MultiplicativeExpression">
   <action first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, REM, DIV, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
    <group first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, REM, DIV, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
     <sequence first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, REM, DIV, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
      <action first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
       <nonterminal first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="PmExpression"/>
      </action>
      <kleene first="{REM, DIV, STAR, #}">
       <group first="{REM, DIV, STAR}">
        <sequence first="{REM, DIV, STAR}">
         <nonterminal first="{REM, DIV, STAR}" ruleName="MulOp"/>
         <action first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
          <nonterminal first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="PmExpression"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{REM, DIV, STAR}" name="MulOp">
   <choice first="{REM, DIV, STAR}">
    <choice first="{DIV, STAR}">
     <action first="{STAR}">
      <token first="{STAR}" name="STAR"/>
     </action>
     <action first="{DIV}">
      <token first="{DIV}" name="DIV"/>
     </action>
    </choice>
    <action first="{REM}">
     <token first="{REM}" name="REM"/>
    </action>
   </choice>
  </rule>
  <rule first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" name="PmExpression">
   <action first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
    <group first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
     <sequence first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, ARROW_STAR, DOT_STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
      <action first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
       <nonterminal first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="CastExpression"/>
      </action>
      <kleene first="{ARROW_STAR, DOT_STAR, #}">
       <group first="{ARROW_STAR, DOT_STAR}">
        <sequence first="{ARROW_STAR, DOT_STAR}">
         <nonterminal first="{ARROW_STAR, DOT_STAR}" ruleName="PmOp"/>
         <action first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
          <nonterminal first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="CastExpression"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{ARROW_STAR, DOT_STAR}" name="PmOp">
   <choice first="{ARROW_STAR, DOT_STAR}">
    <action first="{DOT_STAR}">
     <token first="{DOT_STAR}" name="DOT_STAR"/>
    </action>
    <action first="{ARROW_STAR}">
     <token first="{ARROW_STAR}" name="ARROW_STAR"/>
    </action>
   </choice>
  </rule>
  <rule first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" name="CastExpression">
   <action first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
    <group first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
     <choice first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
      <sequence first="{LPAREN}">
       <sequence first="{LPAREN}">
        <sequence first="{LPAREN}">
         <token first="{LPAREN}" name="LPAREN"/>
         <nonterminal first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #, #}" ruleName="TypeId"/>
        </sequence>
        <token first="{RPAREN}" name="RPAREN"/>
       </sequence>
       <action first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
        <nonterminal first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="CastExpression"/>
       </action>
      </sequence>
      <action first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
       <nonterminal first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="UnaryExpression"/>
      </action>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" name="UnaryExpression">
   <action first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
    <group first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
     <choice first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
      <choice first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
       <choice first="{THIS, SIZEOF, CONST_CAST, OPERATOR, REINTERPRET_CAST, TRUE, STATIC_CAST, DYNAMIC_CAST, DOT, LPAREN, ID, FLOATING_LITERAL, INTEGER_LITERAL, STRING_LITERAL, CHAR_LITERAL, LBRACKET, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
        <choice first="{THIS, SIZEOF, CONST_CAST, OPERATOR, REINTERPRET_CAST, TRUE, STATIC_CAST, DYNAMIC_CAST, DOT, LPAREN, ID, FLOATING_LITERAL, INTEGER_LITERAL, STRING_LITERAL, CHAR_LITERAL, LBRACKET, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
         <choice first="{THIS, CONST_CAST, OPERATOR, REINTERPRET_CAST, TRUE, STATIC_CAST, DYNAMIC_CAST, DOT, LPAREN, ID, FLOATING_LITERAL, INTEGER_LITERAL, STRING_LITERAL, CHAR_LITERAL, LBRACKET, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
          <choice first="{THIS, CONST_CAST, OPERATOR, REINTERPRET_CAST, TRUE, STATIC_CAST, DYNAMIC_CAST, DOT, LPAREN, ID, FLOATING_LITERAL, INTEGER_LITERAL, STRING_LITERAL, CHAR_LITERAL, LBRACKET, TYPEID, FALSE, NULLPTR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, #, ARROW, #}">
           <choice first="{THIS, CONST_CAST, OPERATOR, REINTERPRET_CAST, TRUE, STATIC_CAST, DYNAMIC_CAST, DOT, LPAREN, ID, FLOATING_LITERAL, INTEGER_LITERAL, STRING_LITERAL, CHAR_LITERAL, LBRACKET, TYPEID, FALSE, NULLPTR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, #, ARROW, #}">
            <choice first="{THIS, CONST_CAST, OPERATOR, REINTERPRET_CAST, TRUE, STATIC_CAST, DYNAMIC_CAST, DOT, LPAREN, ID, FLOATING_LITERAL, INTEGER_LITERAL, STRING_LITERAL, CHAR_LITERAL, LBRACKET, TYPEID, FALSE, NULLPTR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, #, ARROW, #}">
             <action first="{THIS, OPERATOR, TRUE, DOT, LPAREN, ID, FLOATING_LITERAL, INTEGER_LITERAL, STRING_LITERAL, CHAR_LITERAL, LBRACKET, FALSE, NULLPTR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, #, ARROW, #}">
              <nonterminal first="{THIS, OPERATOR, TRUE, DOT, LPAREN, ID, FLOATING_LITERAL, INTEGER_LITERAL, STRING_LITERAL, CHAR_LITERAL, LBRACKET, FALSE, NULLPTR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, #, ARROW, #}" ruleName="PostfixExpression"/>
             </action>
             <action first="{CONST_CAST, REINTERPRET_CAST, STATIC_CAST, DYNAMIC_CAST, TYPEID}">
              <nonterminal first="{CONST_CAST, REINTERPRET_CAST, STATIC_CAST, DYNAMIC_CAST, TYPEID}" ruleName="PostCastExpression"/>
             </action>
            </choice>
            <sequence first="{PLUS_PLUS}">
             <token first="{PLUS_PLUS}" name="PLUS_PLUS"/>
             <action first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
              <nonterminal first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="UnaryExpression"/>
             </action>
            </sequence>
           </choice>
           <sequence first="{MINUS_MINUS}">
            <token first="{MINUS_MINUS}" name="MINUS_MINUS"/>
            <action first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
             <nonterminal first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="UnaryExpression"/>
            </action>
           </sequence>
          </choice>
          <sequence first="{PLUS, MINUS, STAR, TILDE, EXCLAMATION, AMP}">
           <nonterminal first="{PLUS, MINUS, STAR, TILDE, EXCLAMATION, AMP}" ruleName="UnaryOperator"/>
           <action first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
            <nonterminal first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="CastExpression"/>
           </action>
          </sequence>
         </choice>
         <sequence first="{SIZEOF}">
          <sequence first="{SIZEOF}">
           <sequence first="{SIZEOF}">
            <token first="{SIZEOF}" name="SIZEOF"/>
            <token first="{LPAREN}" name="LPAREN"/>
           </sequence>
           <nonterminal first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #, #}" ruleName="TypeId"/>
          </sequence>
          <action first="{RPAREN}">
           <token first="{RPAREN}" name="RPAREN"/>
          </action>
         </sequence>
        </choice>
        <sequence first="{SIZEOF}">
         <token first="{SIZEOF}" name="SIZEOF"/>
         <action first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
          <nonterminal first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="UnaryExpression"/>
         </action>
        </sequence>
       </choice>
       <action first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, NEW, DOUBLE, CHAR32T, CHAR8T, WCHART, LPAREN, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #, #}">
        <nonterminal first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, NEW, DOUBLE, CHAR32T, CHAR8T, WCHART, LPAREN, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #, #}" ruleName="NewExpression"/>
       </action>
      </choice>
      <action first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
       <nonterminal first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="DeleteExpression"/>
      </action>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{PLUS, MINUS, STAR, TILDE, EXCLAMATION, AMP}" name="UnaryOperator">
   <choice first="{PLUS, MINUS, STAR, TILDE, EXCLAMATION, AMP}">
    <choice first="{PLUS, MINUS, STAR, EXCLAMATION, AMP}">
     <choice first="{PLUS, MINUS, STAR, AMP}">
      <choice first="{PLUS, STAR, AMP}">
       <choice first="{STAR, AMP}">
        <action first="{STAR}">
         <token first="{STAR}" name="STAR"/>
        </action>
        <action first="{AMP}">
         <token first="{AMP}" name="AMP"/>
        </action>
       </choice>
       <action first="{PLUS}">
        <token first="{PLUS}" name="PLUS"/>
       </action>
      </choice>
      <action first="{MINUS}">
       <token first="{MINUS}" name="MINUS"/>
      </action>
     </choice>
     <action first="{EXCLAMATION}">
      <token first="{EXCLAMATION}" name="EXCLAMATION"/>
     </action>
    </choice>
    <action first="{TILDE}">
     <token first="{TILDE}" name="TILDE"/>
    </action>
   </choice>
  </rule>
  <rule first="{THIS, OPERATOR, TRUE, DOT, LPAREN, ID, FLOATING_LITERAL, INTEGER_LITERAL, STRING_LITERAL, CHAR_LITERAL, LBRACKET, FALSE, NULLPTR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, #, ARROW, #}" name="PostfixExpression">
   <action first="{THIS, OPERATOR, TRUE, DOT, LPAREN, ID, FLOATING_LITERAL, INTEGER_LITERAL, STRING_LITERAL, CHAR_LITERAL, LBRACKET, FALSE, NULLPTR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, #, ARROW, #}">
    <group first="{THIS, OPERATOR, TRUE, DOT, LPAREN, ID, FLOATING_LITERAL, INTEGER_LITERAL, STRING_LITERAL, CHAR_LITERAL, LBRACKET, FALSE, NULLPTR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, #, ARROW, #}">
     <sequence first="{THIS, OPERATOR, TRUE, DOT, LPAREN, ID, FLOATING_LITERAL, INTEGER_LITERAL, STRING_LITERAL, CHAR_LITERAL, LBRACKET, FALSE, NULLPTR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, #, ARROW, #}">
      <action first="{THIS, OPERATOR, TRUE, LPAREN, ID, FLOATING_LITERAL, INTEGER_LITERAL, STRING_LITERAL, CHAR_LITERAL, FALSE, NULLPTR, COLON_COLON, #, #}">
       <nonterminal first="{THIS, OPERATOR, TRUE, LPAREN, ID, FLOATING_LITERAL, INTEGER_LITERAL, STRING_LITERAL, CHAR_LITERAL, FALSE, NULLPTR, COLON_COLON, #, #}" ruleName="PrimaryExpression"/>
      </action>
      <kleene first="{DOT, LPAREN, LBRACKET, PLUS_PLUS, MINUS_MINUS, #, ARROW}">
       <group first="{DOT, LPAREN, LBRACKET, PLUS_PLUS, MINUS_MINUS, ARROW}">
        <choice first="{DOT, LPAREN, LBRACKET, PLUS_PLUS, MINUS_MINUS, ARROW}">
         <choice first="{DOT, LPAREN, LBRACKET, PLUS_PLUS, ARROW}">
          <choice first="{DOT, LPAREN, LBRACKET, ARROW}">
           <choice first="{DOT, LPAREN, LBRACKET}">
            <choice first="{LPAREN, LBRACKET}">
             <sequence first="{LBRACKET}">
              <sequence first="{LBRACKET}">
               <token first="{LBRACKET}" name="LBRACKET"/>
               <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="Expression"/>
              </sequence>
              <action first="{RBRACKET}">
               <token first="{RBRACKET}" name="RBRACKET"/>
              </action>
             </sequence>
             <sequence first="{LPAREN}">
              <sequence first="{LPAREN}">
               <action first="{LPAREN}">
                <token first="{LPAREN}" name="LPAREN"/>
               </action>
               <optional first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
                <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="ExpressionList"/>
               </optional>
              </sequence>
              <token first="{RPAREN}" name="RPAREN"/>
             </sequence>
            </choice>
            <sequence first="{DOT}">
             <token first="{DOT}" name="DOT"/>
             <action first="{OPERATOR, ID, COLON_COLON, #, #}">
              <nonterminal first="{OPERATOR, ID, COLON_COLON, #, #}" ruleName="IdExpression"/>
             </action>
            </sequence>
           </choice>
           <sequence first="{ARROW}">
            <token first="{ARROW}" name="ARROW"/>
            <action first="{OPERATOR, ID, COLON_COLON, #, #}">
             <nonterminal first="{OPERATOR, ID, COLON_COLON, #, #}" ruleName="IdExpression"/>
            </action>
           </sequence>
          </choice>
          <action first="{PLUS_PLUS}">
           <token first="{PLUS_PLUS}" name="PLUS_PLUS"/>
          </action>
         </choice>
         <action first="{MINUS_MINUS}">
          <token first="{MINUS_MINUS}" name="MINUS_MINUS"/>
         </action>
        </choice>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{CONST_CAST, REINTERPRET_CAST, STATIC_CAST, DYNAMIC_CAST, TYPEID}" name="PostCastExpression">
   <group first="{CONST_CAST, REINTERPRET_CAST, STATIC_CAST, DYNAMIC_CAST, TYPEID}">
    <choice first="{CONST_CAST, REINTERPRET_CAST, STATIC_CAST, DYNAMIC_CAST, TYPEID}">
     <sequence first="{CONST_CAST, REINTERPRET_CAST, STATIC_CAST, DYNAMIC_CAST}">
      <sequence first="{CONST_CAST, REINTERPRET_CAST, STATIC_CAST, DYNAMIC_CAST}">
       <sequence first="{CONST_CAST, REINTERPRET_CAST, STATIC_CAST, DYNAMIC_CAST}">
        <sequence first="{CONST_CAST, REINTERPRET_CAST, STATIC_CAST, DYNAMIC_CAST}">
         <sequence first="{CONST_CAST, REINTERPRET_CAST, STATIC_CAST, DYNAMIC_CAST}">
          <sequence first="{CONST_CAST, REINTERPRET_CAST, STATIC_CAST, DYNAMIC_CAST}">
           <group first="{CONST_CAST, REINTERPRET_CAST, STATIC_CAST, DYNAMIC_CAST}">
            <choice first="{CONST_CAST, REINTERPRET_CAST, STATIC_CAST, DYNAMIC_CAST}">
             <choice first="{REINTERPRET_CAST, STATIC_CAST, DYNAMIC_CAST}">
              <choice first="{STATIC_CAST, DYNAMIC_CAST}">
               <action first="{STATIC_CAST}">
                <token first="{STATIC_CAST}" name="STATIC_CAST"/>
               </action>
               <action first="{DYNAMIC_CAST}">
                <token first="{DYNAMIC_CAST}" name="DYNAMIC_CAST"/>
               </action>
              </choice>
              <action first="{REINTERPRET_CAST}">
               <token first="{REINTERPRET_CAST}" name="REINTERPRET_CAST"/>
              </action>
             </choice>
             <action first="{CONST_CAST}">
              <token first="{CONST_CAST}" name="CONST_CAST"/>
             </action>
            </choice>
           </group>
           <token first="{LANGLE}" name="LANGLE"/>
          </sequence>
          <nonterminal first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #, #}" ruleName="TypeId"/>
         </sequence>
         <token first="{RANGLE}" name="RANGLE"/>
        </sequence>
        <token first="{LPAREN}" name="LPAREN"/>
       </sequence>
       <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="Expression"/>
      </sequence>
      <action first="{RPAREN}">
       <token first="{RPAREN}" name="RPAREN"/>
      </action>
     </sequence>
     <sequence first="{TYPEID}">
      <sequence first="{TYPEID}">
       <sequence first="{TYPEID}">
        <token first="{TYPEID}" name="TYPEID"/>
        <token first="{LPAREN}" name="LPAREN"/>
       </sequence>
       <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="Expression"/>
      </sequence>
      <action first="{RPAREN}">
       <token first="{RPAREN}" name="RPAREN"/>
      </action>
     </sequence>
    </choice>
   </group>
  </rule>
  <rule first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" name="ExpressionList">
   <list first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
    <sequence first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
     <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
      <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="AssignmentExpression"/>
     </action>
     <kleene first="{#, COMMA}">
      <sequence first="{COMMA}">
       <token first="{COMMA}" name="COMMA"/>
       <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
        <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="AssignmentExpression"/>
       </action>
      </sequence>
     </kleene>
    </sequence>
   </list>
  </rule>
  <rule first="{THIS, OPERATOR, TRUE, LPAREN, ID, FLOATING_LITERAL, INTEGER_LITERAL, STRING_LITERAL, CHAR_LITERAL, FALSE, NULLPTR, COLON_COLON, #, #}" name="PrimaryExpression">
   <choice first="{THIS, OPERATOR, TRUE, LPAREN, ID, FLOATING_LITERAL, INTEGER_LITERAL, STRING_LITERAL, CHAR_LITERAL, FALSE, NULLPTR, COLON_COLON, #, #}">
    <choice first="{THIS, TRUE, LPAREN, FLOATING_LITERAL, INTEGER_LITERAL, STRING_LITERAL, CHAR_LITERAL, FALSE, NULLPTR}">
     <choice first="{THIS, TRUE, FLOATING_LITERAL, INTEGER_LITERAL, STRING_LITERAL, CHAR_LITERAL, FALSE, NULLPTR}">
      <action first="{TRUE, FLOATING_LITERAL, INTEGER_LITERAL, STRING_LITERAL, CHAR_LITERAL, FALSE, NULLPTR}">
       <nonterminal first="{TRUE, FLOATING_LITERAL, INTEGER_LITERAL, STRING_LITERAL, CHAR_LITERAL, FALSE, NULLPTR}" ruleName="Literal"/>
      </action>
      <action first="{THIS}">
       <token first="{THIS}" name="THIS"/>
      </action>
     </choice>
     <sequence first="{LPAREN}">
      <sequence first="{LPAREN}">
       <token first="{LPAREN}" name="LPAREN"/>
       <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="Expression"/>
      </sequence>
      <action first="{RPAREN}">
       <token first="{RPAREN}" name="RPAREN"/>
      </action>
     </sequence>
    </choice>
    <action first="{OPERATOR, ID, COLON_COLON, #, #}">
     <nonterminal first="{OPERATOR, ID, COLON_COLON, #, #}" ruleName="IdExpression"/>
    </action>
   </choice>
  </rule>
  <rule first="{OPERATOR, ID, COLON_COLON, #, #}" name="IdExpression">
   <group first="{OPERATOR, ID, COLON_COLON, #, #}">
    <choice first="{OPERATOR, ID, COLON_COLON, #, #}">
     <choice first="{OPERATOR, ID, COLON_COLON, #, #}">
      <choice first="{ID, COLON_COLON, #}">
       <action first="{ID, COLON_COLON, #}">
        <nonterminal first="{ID, COLON_COLON, #}" ruleName="TypeName"/>
       </action>
       <sequence first="{ID, COLON_COLON, #}">
        <sequence first="{ID, COLON_COLON, #}">
         <action first="{ID, COLON_COLON, #}">
          <nonterminal first="{ID, COLON_COLON, #}" ruleName="QualifiedCppId"/>
         </action>
         <token first="{COLON_COLON}" name="COLON_COLON"/>
        </sequence>
        <action first="{OPERATOR}">
         <nonterminal first="{OPERATOR}" ruleName="OperatorFunctionId"/>
        </action>
       </sequence>
      </choice>
      <sequence first="{OPERATOR, COLON_COLON, #}">
       <sequence first="{COLON_COLON, #}">
        <action first="{#}">
         <empty first="{#}"/>
        </action>
        <optional first="{COLON_COLON, #}">
         <group first="{COLON_COLON}">
          <action first="{COLON_COLON}">
           <token first="{COLON_COLON}" name="COLON_COLON"/>
          </action>
         </group>
        </optional>
       </sequence>
       <action first="{OPERATOR}">
        <nonterminal first="{OPERATOR}" ruleName="OperatorFunctionId"/>
       </action>
      </sequence>
     </choice>
     <action first="{ID, COLON_COLON, #}">
      <nonterminal first="{ID, COLON_COLON, #}" ruleName="QualifiedCppId"/>
     </action>
    </choice>
   </group>
  </rule>
  <rule first="{CHAR, BOOL, FLOAT, CHAR16T, DOUBLE, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, COLON_COLON, #}" name="TypeSpecifierOrTypeName">
   <choice first="{CHAR, BOOL, FLOAT, CHAR16T, DOUBLE, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, COLON_COLON, #}">
    <action first="{CHAR, BOOL, FLOAT, CHAR16T, DOUBLE, CHAR32T, CHAR8T, WCHART, SIGNED, INT, UNSIGNED, LONG, SHORT, VOID}">
     <nonterminal first="{CHAR, BOOL, FLOAT, CHAR16T, DOUBLE, CHAR32T, CHAR8T, WCHART, SIGNED, INT, UNSIGNED, LONG, SHORT, VOID}" ruleName="SimpleTypeSpecifier"/>
    </action>
    <action first="{ID, COLON_COLON, #}">
     <nonterminal first="{ID, COLON_COLON, #}" ruleName="TypeName"/>
    </action>
   </choice>
  </rule>
  <rule first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, NEW, DOUBLE, CHAR32T, CHAR8T, WCHART, LPAREN, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #, #}" name="NewExpression">
   <action first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, NEW, DOUBLE, CHAR32T, CHAR8T, WCHART, LPAREN, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #, #}">
    <group first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, NEW, DOUBLE, CHAR32T, CHAR8T, WCHART, LPAREN, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #, #}">
     <sequence first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, NEW, DOUBLE, CHAR32T, CHAR8T, WCHART, LPAREN, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #, #}">
      <sequence first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, NEW, DOUBLE, CHAR32T, CHAR8T, WCHART, LPAREN, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #, #}">
       <sequence first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, NEW, DOUBLE, CHAR32T, CHAR8T, WCHART, LPAREN, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #, #}">
        <sequence first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, NEW, DOUBLE, CHAR32T, CHAR8T, WCHART, LPAREN, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #, #}">
         <sequence first="{NEW, LPAREN, COLON_COLON, #}">
          <sequence first="{NEW, LPAREN, COLON_COLON, #}">
           <sequence first="{NEW, COLON_COLON, #}">
            <sequence first="{NEW, COLON_COLON, #}">
             <optional first="{COLON_COLON, #}">
              <group first="{COLON_COLON}">
               <action first="{COLON_COLON}">
                <token first="{COLON_COLON}" name="COLON_COLON"/>
               </action>
              </group>
             </optional>
             <action first="{NEW}">
              <token first="{NEW}" name="NEW"/>
             </action>
            </sequence>
            <action first="{#}">
             <empty first="{#}"/>
            </action>
           </sequence>
           <optional first="{LPAREN, #}">
            <nonterminal first="{LPAREN}" ruleName="NewPlacement"/>
           </optional>
          </sequence>
          <action first="{#}">
           <empty first="{#}"/>
          </action>
         </sequence>
         <group first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, CHAR32T, CHAR8T, WCHART, LPAREN, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #, #}">
          <choice first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, CHAR32T, CHAR8T, WCHART, LPAREN, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #, #}">
           <action first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #, #}">
            <nonterminal first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #, #}" ruleName="NewTypeId"/>
           </action>
           <sequence first="{LPAREN}">
            <sequence first="{LPAREN}">
             <token first="{LPAREN}" name="LPAREN"/>
             <nonterminal first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #, #}" ruleName="TypeId"/>
            </sequence>
            <action first="{RPAREN}">
             <token first="{RPAREN}" name="RPAREN"/>
            </action>
           </sequence>
          </choice>
         </group>
        </sequence>
        <action first="{#}">
         <empty first="{#}"/>
        </action>
       </sequence>
       <optional first="{LPAREN, #}">
        <nonterminal first="{LPAREN}" ruleName="NewInitializer"/>
       </optional>
      </sequence>
      <action first="{#}">
       <empty first="{#}"/>
      </action>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{LPAREN}" name="NewPlacement">
   <sequence first="{LPAREN}">
    <sequence first="{LPAREN}">
     <token first="{LPAREN}" name="LPAREN"/>
     <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="ExpressionList"/>
    </sequence>
    <token first="{RPAREN}" name="RPAREN"/>
   </sequence>
  </rule>
  <rule first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #, #}" name="NewTypeId">
   <sequence first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #, #}">
    <action first="{#}">
     <empty first="{#}"/>
    </action>
    <action first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #}">
     <group first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #}">
      <sequence first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #}">
       <group first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #}">
        <choice first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, CHAR32T, CHAR8T, WCHART, SIGNED, INT, ID, UNSIGNED, LONG, SHORT, VOID, VOLATILE, COLON_COLON, #}">
         <nonterminal first="{CHAR, BOOL, FLOAT, CHAR16T, CONST, DOUBLE, CHAR32T, CHAR8T, WCHART, SIGNED, INT, UNSIGNED, LONG, SHORT, VOID, VOLATILE}" ruleName="TypeSpecifierSeq"/>
         <action first="{ID, COLON_COLON, #}">
          <nonterminal first="{ID, COLON_COLON, #}" ruleName="TypeName"/>
         </action>
        </choice>
       </group>
       <optional first="{LBRACKET, STAR, #, AMP}">
        <group first="{LBRACKET, STAR, AMP}">
         <action first="{LBRACKET, STAR, AMP}">
          <nonterminal first="{LBRACKET, STAR, AMP}" ruleName="NewDeclarator"/>
         </action>
        </group>
       </optional>
      </sequence>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{LBRACKET, STAR, AMP}" name="NewDeclarator">
   <action first="{LBRACKET, STAR, AMP}">
    <group first="{LBRACKET, STAR, AMP}">
     <choice first="{LBRACKET, STAR, AMP}">
      <sequence first="{STAR, AMP}">
       <action first="{STAR, AMP}">
        <nonterminal first="{STAR, AMP}" ruleName="PtrOperator"/>
       </action>
       <optional first="{LBRACKET, STAR, #, AMP}">
        <group first="{LBRACKET, STAR, AMP}">
         <action first="{LBRACKET, STAR, AMP}">
          <nonterminal first="{LBRACKET, STAR, AMP}" ruleName="NewDeclarator"/>
         </action>
        </group>
       </optional>
      </sequence>
      <action first="{LBRACKET}">
       <nonterminal first="{LBRACKET}" ruleName="DirectNewDeclarator"/>
      </action>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{LPAREN}" name="NewInitializer">
   <sequence first="{LPAREN}">
    <sequence first="{LPAREN}">
     <token first="{LPAREN}" name="LPAREN"/>
     <optional first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
      <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="ExpressionList"/>
     </optional>
    </sequence>
    <token first="{RPAREN}" name="RPAREN"/>
   </sequence>
  </rule>
  <rule first="{LBRACKET}" name="DirectNewDeclarator">
   <action first="{LBRACKET}">
    <group first="{LBRACKET}">
     <sequence first="{LBRACKET}">
      <sequence first="{LBRACKET}">
       <sequence first="{LBRACKET}">
        <action first="{LBRACKET}">
         <token first="{LBRACKET}" name="LBRACKET"/>
        </action>
        <action first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}">
         <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="Expression"/>
        </action>
       </sequence>
       <action first="{RBRACKET}">
        <token first="{RBRACKET}" name="RBRACKET"/>
       </action>
      </sequence>
      <kleene first="{LBRACKET, #}">
       <group first="{LBRACKET}">
        <sequence first="{LBRACKET}">
         <sequence first="{LBRACKET}">
          <token first="{LBRACKET}" name="LBRACKET"/>
          <nonterminal first="{RANGLE, CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, LANGLE, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, COLON_COLON, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, DOT_STAR, #, PIPE, COMMA, CARET, TILDE, EXCLAMATION, QUEST, AMP, ARROW, #}" ruleName="ConstantExpression"/>
         </sequence>
         <action first="{RBRACKET}">
          <token first="{RBRACKET}" name="RBRACKET"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" name="DeleteExpression">
   <action first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
    <group first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
     <sequence first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}">
      <sequence first="{DELETE, LBRACKET, COLON_COLON, #}">
       <sequence first="{DELETE, COLON_COLON, #}">
        <optional first="{COLON_COLON, #}">
         <group first="{COLON_COLON}">
          <action first="{COLON_COLON}">
           <token first="{COLON_COLON}" name="COLON_COLON"/>
          </action>
         </group>
        </optional>
        <token first="{DELETE}" name="DELETE"/>
       </sequence>
       <optional first="{LBRACKET, #}">
        <group first="{LBRACKET}">
         <sequence first="{LBRACKET}">
          <token first="{LBRACKET}" name="LBRACKET"/>
          <action first="{RBRACKET}">
           <token first="{RBRACKET}" name="RBRACKET"/>
          </action>
         </sequence>
        </group>
       </optional>
      </sequence>
      <nonterminal first="{CHAR, THIS, BOOL, SIZEOF, FLOAT, CHAR16T, CONST, NEW, CONST_CAST, DOUBLE, OPERATOR, CHAR32T, REINTERPRET_CAST, TRUE, STATIC_CAST, CHAR8T, DYNAMIC_CAST, WCHART, DOT, LPAREN, SIGNED, INT, ID, UNSIGNED, FLOATING_LITERAL, LONG, INTEGER_LITERAL, SHORT, DELETE, STRING_LITERAL, VOID, CHAR_LITERAL, LBRACKET, VOLATILE, TYPEID, FALSE, NULLPTR, PLUS_PLUS, PLUS, MINUS_MINUS, MINUS, COLON_COLON, STAR, #, TILDE, EXCLAMATION, AMP, ARROW, #}" ruleName="CastExpression"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{OPERATOR}" name="OperatorFunctionId">
   <action first="{OPERATOR}">
    <group first="{OPERATOR}">
     <sequence first="{OPERATOR}">
      <action first="{OPERATOR}">
       <token first="{OPERATOR}" name="OPERATOR"/>
      </action>
      <action first="{RANGLE, NEW, LPAREN, LANGLE, DELETE, LBRACKET, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, PIPE, COMMA, CARET, TILDE, EXCLAMATION, AMP, ARROW}">
       <nonterminal first="{RANGLE, NEW, LPAREN, LANGLE, DELETE, LBRACKET, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, PIPE, COMMA, CARET, TILDE, EXCLAMATION, AMP, ARROW}" ruleName="Operator"/>
      </action>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{RANGLE, NEW, LPAREN, LANGLE, DELETE, LBRACKET, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, PIPE, COMMA, CARET, TILDE, EXCLAMATION, AMP, ARROW}" name="Operator">
   <group first="{RANGLE, NEW, LPAREN, LANGLE, DELETE, LBRACKET, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, PIPE, COMMA, CARET, TILDE, EXCLAMATION, AMP, ARROW}">
    <choice first="{RANGLE, NEW, LPAREN, LANGLE, DELETE, LBRACKET, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, PIPE, COMMA, CARET, TILDE, EXCLAMATION, AMP, ARROW}">
     <choice first="{RANGLE, NEW, LPAREN, LANGLE, DELETE, LBRACKET, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, PIPE, COMMA, CARET, TILDE, EXCLAMATION, AMP, ARROW}">
      <choice first="{RANGLE, NEW, LPAREN, LANGLE, DELETE, LBRACKET, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, PIPE, COMMA, CARET, TILDE, EXCLAMATION, AMP, ARROW}">
       <choice first="{RANGLE, NEW, LPAREN, LANGLE, LBRACKET, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, PIPE, COMMA, CARET, TILDE, EXCLAMATION, AMP, ARROW}">
        <choice first="{RANGLE, LPAREN, LANGLE, LBRACKET, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, PIPE, COMMA, CARET, TILDE, EXCLAMATION, AMP, ARROW}">
         <choice first="{RANGLE, LPAREN, LANGLE, LBRACKET, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, MINUS, GEQ, ASSIGN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, PIPE, COMMA, CARET, TILDE, EXCLAMATION, AMP, ARROW}">
          <choice first="{RANGLE, LPAREN, LANGLE, LBRACKET, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, GEQ, ASSIGN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, STAR, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, PIPE, COMMA, CARET, TILDE, EXCLAMATION, AMP, ARROW}">
           <choice first="{RANGLE, LPAREN, LANGLE, LBRACKET, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, NEQ, EQ, REM, DIV_ASSIGN, DIV, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, GEQ, ASSIGN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, PIPE, COMMA, CARET, TILDE, EXCLAMATION, AMP, ARROW}">
            <choice first="{RANGLE, LPAREN, LANGLE, LBRACKET, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, NEQ, EQ, REM, DIV_ASSIGN, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, GEQ, ASSIGN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, PIPE, COMMA, CARET, TILDE, EXCLAMATION, AMP, ARROW}">
             <choice first="{RANGLE, LPAREN, LANGLE, LBRACKET, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, NEQ, EQ, DIV_ASSIGN, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, GEQ, ASSIGN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, PIPE, COMMA, CARET, TILDE, EXCLAMATION, AMP, ARROW}">
              <choice first="{RANGLE, LPAREN, LANGLE, LBRACKET, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, NEQ, EQ, DIV_ASSIGN, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, GEQ, ASSIGN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, COMMA, CARET, TILDE, EXCLAMATION, AMP, ARROW}">
               <choice first="{RANGLE, LPAREN, LANGLE, LBRACKET, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, NEQ, EQ, DIV_ASSIGN, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, GEQ, ASSIGN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, COMMA, TILDE, EXCLAMATION, AMP, ARROW}">
                <choice first="{RANGLE, LPAREN, LANGLE, LBRACKET, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, NEQ, EQ, DIV_ASSIGN, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, GEQ, ASSIGN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, COMMA, TILDE, EXCLAMATION, ARROW}">
                 <choice first="{RANGLE, LPAREN, LANGLE, LBRACKET, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, NEQ, EQ, DIV_ASSIGN, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, GEQ, ASSIGN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, COMMA, EXCLAMATION, ARROW}">
                  <choice first="{RANGLE, LPAREN, LANGLE, LBRACKET, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, NEQ, EQ, DIV_ASSIGN, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, GEQ, ASSIGN, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, COMMA, ARROW}">
                   <choice first="{RANGLE, LPAREN, LANGLE, LBRACKET, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, NEQ, EQ, DIV_ASSIGN, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, GEQ, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, COMMA, ARROW}">
                    <choice first="{LPAREN, LANGLE, LBRACKET, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, NEQ, EQ, DIV_ASSIGN, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, GEQ, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, COMMA, ARROW}">
                     <choice first="{LPAREN, LBRACKET, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, NEQ, EQ, DIV_ASSIGN, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, GEQ, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, COMMA, ARROW}">
                      <choice first="{LPAREN, LBRACKET, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, NEQ, EQ, DIV_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_ASSIGN, MINUS_MINUS, GEQ, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, COMMA, ARROW}">
                       <choice first="{LPAREN, LBRACKET, SHIFT_LEFT, MUL_ASSIGN, PLUS_PLUS, NEQ, EQ, DIV_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_MINUS, GEQ, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, COMMA, ARROW}">
                        <choice first="{LPAREN, LBRACKET, SHIFT_LEFT, PLUS_PLUS, NEQ, EQ, DIV_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_MINUS, GEQ, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, COMMA, ARROW}">
                         <choice first="{LPAREN, LBRACKET, SHIFT_LEFT, PLUS_PLUS, NEQ, EQ, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_MINUS, GEQ, REM_ASSIGN, XOR_ASSIGN, DISJUNCTION, LEQ, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, COMMA, ARROW}">
                          <choice first="{LPAREN, LBRACKET, SHIFT_LEFT, PLUS_PLUS, NEQ, EQ, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_MINUS, GEQ, XOR_ASSIGN, DISJUNCTION, LEQ, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, COMMA, ARROW}">
                           <choice first="{LPAREN, LBRACKET, SHIFT_LEFT, PLUS_PLUS, NEQ, EQ, SHIFT_LEFT_ASSIGN, AND_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_MINUS, GEQ, DISJUNCTION, LEQ, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, COMMA, ARROW}">
                            <choice first="{LPAREN, LBRACKET, SHIFT_LEFT, PLUS_PLUS, NEQ, EQ, SHIFT_LEFT_ASSIGN, OR_ASSIGN, SHIFT_RIGHT, MINUS_MINUS, GEQ, DISJUNCTION, LEQ, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, COMMA, ARROW}">
                             <choice first="{LPAREN, LBRACKET, SHIFT_LEFT, PLUS_PLUS, NEQ, EQ, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, MINUS_MINUS, GEQ, DISJUNCTION, LEQ, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, COMMA, ARROW}">
                              <choice first="{LPAREN, LBRACKET, SHIFT_LEFT, PLUS_PLUS, NEQ, EQ, SHIFT_LEFT_ASSIGN, MINUS_MINUS, GEQ, DISJUNCTION, LEQ, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, COMMA, ARROW}">
                               <choice first="{LPAREN, LBRACKET, PLUS_PLUS, NEQ, EQ, SHIFT_LEFT_ASSIGN, MINUS_MINUS, GEQ, DISJUNCTION, LEQ, ARROW_STAR, AMP_AMP, SHIFT_RIGHT_ASSIGN, COMMA, ARROW}">
                                <choice first="{LPAREN, LBRACKET, PLUS_PLUS, NEQ, EQ, SHIFT_LEFT_ASSIGN, MINUS_MINUS, GEQ, DISJUNCTION, LEQ, ARROW_STAR, AMP_AMP, COMMA, ARROW}">
                                 <choice first="{LPAREN, LBRACKET, PLUS_PLUS, NEQ, EQ, MINUS_MINUS, GEQ, DISJUNCTION, LEQ, ARROW_STAR, AMP_AMP, COMMA, ARROW}">
                                  <choice first="{LPAREN, LBRACKET, PLUS_PLUS, NEQ, MINUS_MINUS, GEQ, DISJUNCTION, LEQ, ARROW_STAR, AMP_AMP, COMMA, ARROW}">
                                   <choice first="{LPAREN, LBRACKET, PLUS_PLUS, MINUS_MINUS, GEQ, DISJUNCTION, LEQ, ARROW_STAR, AMP_AMP, COMMA, ARROW}">
                                    <choice first="{LPAREN, LBRACKET, PLUS_PLUS, MINUS_MINUS, DISJUNCTION, LEQ, ARROW_STAR, AMP_AMP, COMMA, ARROW}">
                                     <choice first="{LPAREN, LBRACKET, PLUS_PLUS, MINUS_MINUS, DISJUNCTION, ARROW_STAR, AMP_AMP, COMMA, ARROW}">
                                      <choice first="{LPAREN, LBRACKET, PLUS_PLUS, MINUS_MINUS, DISJUNCTION, ARROW_STAR, COMMA, ARROW}">
                                       <choice first="{LPAREN, LBRACKET, PLUS_PLUS, MINUS_MINUS, ARROW_STAR, COMMA, ARROW}">
                                        <choice first="{LPAREN, LBRACKET, MINUS_MINUS, ARROW_STAR, COMMA, ARROW}">
                                         <choice first="{LPAREN, LBRACKET, ARROW_STAR, COMMA, ARROW}">
                                          <choice first="{LPAREN, LBRACKET, ARROW_STAR, ARROW}">
                                           <choice first="{LPAREN, LBRACKET, ARROW_STAR}">
                                            <choice first="{LPAREN, LBRACKET}">
                                             <sequence first="{LBRACKET}">
                                              <token first="{LBRACKET}" name="LBRACKET"/>
                                              <action first="{RBRACKET}">
                                               <token first="{RBRACKET}" name="RBRACKET"/>
                                              </action>
                                             </sequence>
                                             <sequence first="{LPAREN}">
                                              <token first="{LPAREN}" name="LPAREN"/>
                                              <action first="{RPAREN}">
                                               <token first="{RPAREN}" name="RPAREN"/>
                                              </action>
                                             </sequence>
                                            </choice>
                                            <action first="{ARROW_STAR}">
                                             <token first="{ARROW_STAR}" name="ARROW_STAR"/>
                                            </action>
                                           </choice>
                                           <action first="{ARROW}">
                                            <token first="{ARROW}" name="ARROW"/>
                                           </action>
                                          </choice>
                                          <action first="{COMMA}">
                                           <token first="{COMMA}" name="COMMA"/>
                                          </action>
                                         </choice>
                                         <action first="{MINUS_MINUS}">
                                          <token first="{MINUS_MINUS}" name="MINUS_MINUS"/>
                                         </action>
                                        </choice>
                                        <action first="{PLUS_PLUS}">
                                         <token first="{PLUS_PLUS}" name="PLUS_PLUS"/>
                                        </action>
                                       </choice>
                                       <action first="{DISJUNCTION}">
                                        <token first="{DISJUNCTION}" name="DISJUNCTION"/>
                                       </action>
                                      </choice>
                                      <action first="{AMP_AMP}">
                                       <token first="{AMP_AMP}" name="AMP_AMP"/>
                                      </action>
                                     </choice>
                                     <action first="{LEQ}">
                                      <token first="{LEQ}" name="LEQ"/>
                                     </action>
                                    </choice>
                                    <action first="{GEQ}">
                                     <token first="{GEQ}" name="GEQ"/>
                                    </action>
                                   </choice>
                                   <action first="{NEQ}">
                                    <token first="{NEQ}" name="NEQ"/>
                                   </action>
                                  </choice>
                                  <action first="{EQ}">
                                   <token first="{EQ}" name="EQ"/>
                                  </action>
                                 </choice>
                                 <action first="{SHIFT_LEFT_ASSIGN}">
                                  <token first="{SHIFT_LEFT_ASSIGN}" name="SHIFT_LEFT_ASSIGN"/>
                                 </action>
                                </choice>
                                <action first="{SHIFT_RIGHT_ASSIGN}">
                                 <token first="{SHIFT_RIGHT_ASSIGN}" name="SHIFT_RIGHT_ASSIGN"/>
                                </action>
                               </choice>
                               <action first="{SHIFT_LEFT}">
                                <token first="{SHIFT_LEFT}" name="SHIFT_LEFT"/>
                               </action>
                              </choice>
                              <action first="{SHIFT_RIGHT}">
                               <token first="{SHIFT_RIGHT}" name="SHIFT_RIGHT"/>
                              </action>
                             </choice>
                             <action first="{OR_ASSIGN}">
                              <token first="{OR_ASSIGN}" name="OR_ASSIGN"/>
                             </action>
                            </choice>
                            <action first="{AND_ASSIGN}">
                             <token first="{AND_ASSIGN}" name="AND_ASSIGN"/>
                            </action>
                           </choice>
                           <action first="{XOR_ASSIGN}">
                            <token first="{XOR_ASSIGN}" name="XOR_ASSIGN"/>
                           </action>
                          </choice>
                          <action first="{REM_ASSIGN}">
                           <token first="{REM_ASSIGN}" name="REM_ASSIGN"/>
                          </action>
                         </choice>
                         <action first="{DIV_ASSIGN}">
                          <token first="{DIV_ASSIGN}" name="DIV_ASSIGN"/>
                         </action>
                        </choice>
                        <action first="{MUL_ASSIGN}">
                         <token first="{MUL_ASSIGN}" name="MUL_ASSIGN"/>
                        </action>
                       </choice>
                       <action first="{MINUS_ASSIGN}">
                        <token first="{MINUS_ASSIGN}" name="MINUS_ASSIGN"/>
                       </action>
                      </choice>
                      <action first="{PLUS_ASSIGN}">
                       <token first="{PLUS_ASSIGN}" name="PLUS_ASSIGN"/>
                      </action>
                     </choice>
                     <action first="{LANGLE}">
                      <token first="{LANGLE}" name="LANGLE"/>
                     </action>
                    </choice>
                    <action first="{RANGLE}">
                     <token first="{RANGLE}" name="RANGLE"/>
                    </action>
                   </choice>
                   <action first="{ASSIGN}">
                    <token first="{ASSIGN}" name="ASSIGN"/>
                   </action>
                  </choice>
                  <action first="{EXCLAMATION}">
                   <token first="{EXCLAMATION}" name="EXCLAMATION"/>
                  </action>
                 </choice>
                 <action first="{TILDE}">
                  <token first="{TILDE}" name="TILDE"/>
                 </action>
                </choice>
                <action first="{AMP}">
                 <token first="{AMP}" name="AMP"/>
                </action>
               </choice>
               <action first="{CARET}">
                <token first="{CARET}" name="CARET"/>
               </action>
              </choice>
              <action first="{PIPE}">
               <token first="{PIPE}" name="PIPE"/>
              </action>
             </choice>
             <action first="{REM}">
              <token first="{REM}" name="REM"/>
             </action>
            </choice>
            <action first="{DIV}">
             <token first="{DIV}" name="DIV"/>
            </action>
           </choice>
           <action first="{STAR}">
            <token first="{STAR}" name="STAR"/>
           </action>
          </choice>
          <action first="{MINUS}">
           <token first="{MINUS}" name="MINUS"/>
          </action>
         </choice>
         <action first="{PLUS}">
          <token first="{PLUS}" name="PLUS"/>
         </action>
        </choice>
        <sequence first="{NEW}">
         <sequence first="{NEW}">
          <token first="{NEW}" name="NEW"/>
          <token first="{LBRACKET}" name="LBRACKET"/>
         </sequence>
         <action first="{RBRACKET}">
          <token first="{RBRACKET}" name="RBRACKET"/>
         </action>
        </sequence>
       </choice>
       <sequence first="{DELETE}">
        <sequence first="{DELETE}">
         <token first="{DELETE}" name="DELETE"/>
         <token first="{LBRACKET}" name="LBRACKET"/>
        </sequence>
        <action first="{RBRACKET}">
         <token first="{RBRACKET}" name="RBRACKET"/>
        </action>
       </sequence>
      </choice>
      <action first="{NEW}">
       <token first="{NEW}" name="NEW"/>
      </action>
     </choice>
     <action first="{DELETE}">
      <token first="{DELETE}" name="DELETE"/>
     </action>
    </choice>
   </group>
  </rule>
 </grammar>
</parserFile>
