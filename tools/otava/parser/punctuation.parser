// =================================
// Copyright (c) 2025 Seppo Laakko
// Distributed under the MIT license
// =================================

export module otava.parser.punctuation;

[implementation]import otava.ast;
[implementation]import otava.token;
[implementation]import otava.lexer;

parser PunctuationParser
{
    lexer otava::lexer::OtavaLexer<char32_t>;

    Semicolon : otava::ast::Node*
        ::= SEMICOLON{ return new otava::ast::SemicolonNode(lexer.GetSourcePos(pos)); }
        ;

    Comma : otava::ast::Node*
        ::= COMMA{ return new otava::ast::CommaNode(lexer.GetSourcePos(pos)); }
        ;
    
    Quest : otava::ast::Node*
        ::= QUEST{ return new otava::ast::QuestNode(lexer.GetSourcePos(pos)); }
        ;
    
    Colon : otava::ast::Node*
        ::= COLON{ return new otava::ast::ColonNode(lexer.GetSourcePos(pos)); }
        ;

    ColonColon : otava::ast::Node*
        ::= COLON_COLON{ return new otava::ast::ColonColonNode(lexer.GetSourcePos(pos)); }
        ;
    
    Ellipsis : otava::ast::Node*
        ::= ELLIPSIS{ return new otava::ast::EllipsisNode(lexer.GetSourcePos(pos)); }
        ;
    
    LParen : otava::ast::Node*
        ::= LPAREN{ return new otava::ast::LParenNode(lexer.GetSourcePos(pos)); }
        ;
    
    RParen : otava::ast::Node*
        ::= RPAREN{ return new otava::ast::RParenNode(lexer.GetSourcePos(pos)); }
        ;
    
    LBracket : otava::ast::Node*
        ::= LBRACKET{ return new otava::ast::LBracketNode(lexer.GetSourcePos(pos)); }
        ;

    RBracket : otava::ast::Node*
        ::= RBRACKET{ return new otava::ast::RBracketNode(lexer.GetSourcePos(pos)); }
        ;

    LBrace : otava::ast::Node*
        ::= LBRACE{ return new otava::ast::LBraceNode(lexer.GetSourcePos(pos)); }
        ;

    RBrace : otava::ast::Node*
        ::= RBRACE{ return new otava::ast::RBraceNode(lexer.GetSourcePos(pos)); }
        ;

    Assign : otava::ast::Node*
        ::= ASSIGN{ return new otava::ast::AssignNode(lexer.GetSourcePos(pos)); }
        ;
}
