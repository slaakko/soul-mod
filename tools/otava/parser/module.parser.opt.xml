<parserFile>
 <grammar name="ModuleParser">
  <rule first="{#, ALIGNAS, COLON, ID, LBRACKET, SEMICOLON}" name="ModuleDeclaration">
   <action first="{#, ALIGNAS, COLON, ID, LBRACKET, SEMICOLON}">
    <group first="{#, ALIGNAS, COLON, ID, LBRACKET, SEMICOLON}">
     <sequence first="{#, ALIGNAS, COLON, ID, LBRACKET, SEMICOLON}">
      <sequence first="{#, ALIGNAS, COLON, ID, LBRACKET}">
       <sequence first="{#, COLON, ID}">
        <sequence first="{#, ID}">
         <sequence first="{#, ID}">
          <optional first="{#, ID}">
           <group first="{ID}">
            <action first="{ID}">
             <nonterminal first="{ID}" ruleName="ExportKeyword"/>
            </action>
           </group>
          </optional>
          <action first="{ID}">
           <nonterminal first="{ID}" ruleName="ModuleKeyword"/>
          </action>
         </sequence>
         <nonterminal first="{ID}" ruleName="ModuleName"/>
        </sequence>
        <optional first="{#, COLON}">
         <nonterminal first="{COLON}" ruleName="ModulePartition"/>
        </optional>
       </sequence>
       <optional first="{#, ALIGNAS, LBRACKET}">
        <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
       </optional>
      </sequence>
      <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{ID}" name="ModuleName">
   <action first="{ID}">
    <group first="{ID}">
     <sequence first="{ID}">
      <action first="{ID}">
       <token first="{ID}" name="ID"/>
      </action>
      <kleene first="{#, DOT}">
       <group first="{DOT}">
        <sequence first="{DOT}">
         <token first="{DOT}" name="DOT"/>
         <action first="{ID}">
          <token first="{ID}" name="ID"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{ID}" name="ExportDeclaration">
   <group first="{ID}">
    <sequence first="{ID}">
     <action first="{ID}">
      <nonterminal first="{ID}" ruleName="ExportKeyword"/>
     </action>
     <action first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACE, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
      <group first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACE, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
       <choice first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACE, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
        <switch first="{ID, LBRACE}">
         <case first="{LBRACE}">
          <action first="{LBRACE}">
           <group first="{LBRACE}">
            <sequence first="{LBRACE}">
             <sequence first="{LBRACE}">
              <action first="{LBRACE}">
               <token first="{LBRACE}" name="LBRACE"/>
              </action>
              <optional first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACE, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
               <nonterminal first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACE, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}" ruleName="DeclarationSeq"/>
              </optional>
             </sequence>
             <action first="{RBRACE}">
              <token first="{RBRACE}" name="RBRACE"/>
             </action>
            </sequence>
           </group>
          </action>
         </case>
         <case first="{ID}">
          <action first="{ID}">
           <nonterminal first="{ID}" ruleName="ImportDeclaration"/>
          </action>
         </case>
        </switch>
        <action first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACE, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
         <nonterminal first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACE, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}" ruleName="Declaration"/>
        </action>
       </choice>
      </group>
     </action>
    </sequence>
   </group>
  </rule>
  <rule first="{ID}" name="ImportDeclaration">
   <action first="{ID}">
    <group first="{ID}">
     <sequence first="{ID}">
      <sequence first="{ID}">
       <sequence first="{ID}">
        <action first="{ID}">
         <nonterminal first="{ID}" ruleName="ImportKeyword"/>
        </action>
        <group first="{ANGLE_HEADER_NAME, COLON, ID, QUOTE_HEADER_NAME}">
         <switch first="{ANGLE_HEADER_NAME, COLON, ID, QUOTE_HEADER_NAME}">
          <case first="{ID}">
           <action first="{ID}">
            <nonterminal first="{ID}" ruleName="ModuleName"/>
           </action>
          </case>
          <case first="{COLON}">
           <action first="{COLON}">
            <nonterminal first="{COLON}" ruleName="ModulePartition"/>
           </action>
          </case>
          <case first="{ANGLE_HEADER_NAME, QUOTE_HEADER_NAME}">
           <action first="{ANGLE_HEADER_NAME, QUOTE_HEADER_NAME}">
            <nonterminal first="{ANGLE_HEADER_NAME, QUOTE_HEADER_NAME}" ruleName="HeaderName"/>
           </action>
          </case>
         </switch>
        </group>
       </sequence>
       <optional first="{#, ALIGNAS, LBRACKET}">
        <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
       </optional>
      </sequence>
      <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{COLON}" name="ModulePartition">
   <action first="{COLON}">
    <group first="{COLON}">
     <sequence first="{COLON}">
      <action first="{COLON}">
       <nonterminal first="{COLON}" ruleName="Colon"/>
      </action>
      <nonterminal first="{ID}" ruleName="ModuleName"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{ID}" name="ExportKeyword">
   <action first="{ID}">
    <group first="{ID}">
     <action first="{ID}">
      <nonterminal first="{ID}" ruleName="Identifier"/>
     </action>
    </group>
   </action>
  </rule>
  <rule first="{ID}" name="ImportKeyword">
   <action first="{ID}">
    <group first="{ID}">
     <action first="{ID}">
      <nonterminal first="{ID}" ruleName="Identifier"/>
     </action>
    </group>
   </action>
  </rule>
  <rule first="{ID}" name="ModuleKeyword">
   <action first="{ID}">
    <group first="{ID}">
     <action first="{ID}">
      <nonterminal first="{ID}" ruleName="Identifier"/>
     </action>
    </group>
   </action>
  </rule>
  <rule first="{ID}" name="GlobalModuleFragment">
   <action first="{ID}">
    <group first="{ID}">
     <sequence first="{ID}">
      <sequence first="{ID}">
       <action first="{ID}">
        <nonterminal first="{ID}" ruleName="ModuleKeyword"/>
       </action>
       <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
      </sequence>
      <optional first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACE, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
       <nonterminal first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACE, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}" ruleName="DeclarationSeq"/>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{ID}" name="PrivateModuleFragment">
   <action first="{ID}">
    <group first="{ID}">
     <sequence first="{ID}">
      <sequence first="{ID}">
       <sequence first="{ID}">
        <sequence first="{ID}">
         <action first="{ID}">
          <nonterminal first="{ID}" ruleName="ModuleKeyword"/>
         </action>
         <nonterminal first="{COLON}" ruleName="Colon"/>
        </sequence>
        <nonterminal first="{PRIVATE}" ruleName="Private"/>
       </sequence>
       <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
      </sequence>
      <optional first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACE, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
       <nonterminal first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACE, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}" ruleName="DeclarationSeq"/>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{ANGLE_HEADER_NAME, QUOTE_HEADER_NAME}" name="HeaderName">
   <switch first="{ANGLE_HEADER_NAME, QUOTE_HEADER_NAME}">
    <case first="{ANGLE_HEADER_NAME}">
     <action first="{ANGLE_HEADER_NAME}">
      <token first="{ANGLE_HEADER_NAME}" name="ANGLE_HEADER_NAME"/>
     </action>
    </case>
    <case first="{QUOTE_HEADER_NAME}">
     <action first="{QUOTE_HEADER_NAME}">
      <token first="{QUOTE_HEADER_NAME}" name="QUOTE_HEADER_NAME"/>
     </action>
    </case>
   </switch>
  </rule>
 </grammar>
</parserFile>
