<parserFile>
 <grammar name="FunctionParser">
  <rule first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, LBRACE, ARROW, ELLIPSIS}" name="FunctionDefinition">
   <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, LBRACE, ARROW, ELLIPSIS}">
    <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
     <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
      <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE, LBRACKET}">
       <optional first="{#, ALIGNAS, LBRACKET}">
        <group first="{ALIGNAS, LBRACKET}">
         <action first="{ALIGNAS, LBRACKET}">
          <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
         </action>
        </group>
       </optional>
       <action first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE, LBRACKET}">
        <nonterminal first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE, LBRACKET}" ruleName="DeclSpecifierSeq"/>
       </action>
      </sequence>
      <action first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
       <nonterminal first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}" ruleName="DeclaratorPushClassScope"/>
      </action>
     </sequence>
     <action first="{#, REQUIRES, ID}">
      <group first="{#, REQUIRES, ID}">
       <choice first="{#, REQUIRES, ID}">
        <switch first="{REQUIRES, ID}">
         <case first="{ID}">
          <action first="{ID}">
           <nonterminal first="{ID}" ruleName="VirtSpecifierSeq"/>
          </action>
         </case>
         <case first="{REQUIRES}">
          <action first="{REQUIRES}">
           <nonterminal first="{REQUIRES}" ruleName="RequiresClause"/>
          </action>
         </case>
        </switch>
        <empty first="{#}"/>
       </choice>
      </group>
     </action>
    </sequence>
    <action first="{#, ALIGNAS, DECLTYPE, TEMPLATE, ID, COLON_COLON, COMMA, ASSIGN, COLON, LPAREN, LBRACKET, LBRACE, ELLIPSIS}">
     <nonterminal first="{#, ALIGNAS, DECLTYPE, TEMPLATE, ID, COLON_COLON, COMMA, ASSIGN, COLON, LPAREN, LBRACKET, LBRACE, ELLIPSIS}" ruleName="FunctionBody"/>
    </action>
   </sequence>
  </rule>
  <rule first="{#, ALIGNAS, CONST, DECLTYPE, OPERATOR, REQUIRES, TEMPLATE, VOLATILE, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, LBRACE, ARROW, ELLIPSIS}" name="NoDeclSpecFunctionDefinition">
   <sequence first="{#, ALIGNAS, CONST, DECLTYPE, OPERATOR, REQUIRES, TEMPLATE, VOLATILE, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, LBRACE, ARROW, ELLIPSIS}">
    <sequence first="{#, ALIGNAS, CONST, OPERATOR, REQUIRES, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
     <sequence first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
      <optional first="{#, ALIGNAS, LBRACKET}">
       <group first="{ALIGNAS, LBRACKET}">
        <action first="{ALIGNAS, LBRACKET}">
         <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
        </action>
       </group>
      </optional>
      <action first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
       <nonterminal first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}" ruleName="DeclaratorPushClassScope"/>
      </action>
     </sequence>
     <action first="{#, REQUIRES, ID}">
      <group first="{#, REQUIRES, ID}">
       <choice first="{#, REQUIRES, ID}">
        <switch first="{REQUIRES, ID}">
         <case first="{ID}">
          <action first="{ID}">
           <nonterminal first="{ID}" ruleName="VirtSpecifierSeq"/>
          </action>
         </case>
         <case first="{REQUIRES}">
          <action first="{REQUIRES}">
           <nonterminal first="{REQUIRES}" ruleName="RequiresClause"/>
          </action>
         </case>
        </switch>
        <empty first="{#}"/>
       </choice>
      </group>
     </action>
    </sequence>
    <action first="{#, ALIGNAS, DECLTYPE, TEMPLATE, ID, COLON_COLON, COMMA, ASSIGN, COLON, LPAREN, LBRACKET, LBRACE, ELLIPSIS}">
     <nonterminal first="{#, ALIGNAS, DECLTYPE, TEMPLATE, ID, COLON_COLON, COMMA, ASSIGN, COLON, LPAREN, LBRACKET, LBRACE, ELLIPSIS}" ruleName="FunctionBody"/>
    </action>
   </sequence>
  </rule>
  <rule first="{#, ALIGNAS, DECLTYPE, TEMPLATE, ID, COLON_COLON, COMMA, ASSIGN, COLON, LPAREN, LBRACKET, LBRACE, ELLIPSIS}" name="FunctionBody">
   <choice first="{#, ALIGNAS, DECLTYPE, TEMPLATE, ID, COLON_COLON, COMMA, ASSIGN, COLON, LPAREN, LBRACKET, LBRACE, ELLIPSIS}">
    <choice first="{#, ALIGNAS, DECLTYPE, TEMPLATE, ID, COLON_COLON, COMMA, ASSIGN, COLON, LPAREN, LBRACKET, LBRACE, ELLIPSIS}">
     <sequence first="{ASSIGN}">
      <action first="{ASSIGN}">
       <nonterminal first="{ASSIGN}" ruleName="Assign"/>
      </action>
      <group first="{DEFAULT, DELETE}">
       <switch first="{DEFAULT, DELETE}">
        <case first="{DEFAULT}">
         <sequence first="{DEFAULT}">
          <nonterminal first="{DEFAULT}" ruleName="Default"/>
          <action first="{SEMICOLON}">
           <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
          </action>
         </sequence>
        </case>
        <case first="{DELETE}">
         <sequence first="{DELETE}">
          <nonterminal first="{DELETE}" ruleName="Delete"/>
          <action first="{SEMICOLON}">
           <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
          </action>
         </sequence>
        </case>
       </switch>
      </group>
     </sequence>
     <sequence first="{#, ALIGNAS, DECLTYPE, TEMPLATE, ID, COLON_COLON, COMMA, COLON, LPAREN, LBRACKET, LBRACE, ELLIPSIS}">
      <action first="{#, DECLTYPE, TEMPLATE, ID, COLON_COLON, COMMA, COLON, LPAREN, LBRACE, ELLIPSIS}">
       <nonterminal first="{#, DECLTYPE, TEMPLATE, ID, COLON_COLON, COMMA, COLON, LPAREN, LBRACE, ELLIPSIS}" ruleName="CtorInitializer"/>
      </action>
      <action first="{#, ALIGNAS, LBRACKET, LBRACE}">
       <nonterminal first="{#, ALIGNAS, LBRACKET, LBRACE}" ruleName="CompoundStatement"/>
      </action>
     </sequence>
    </choice>
    <action first="{#, ALIGNAS, LBRACKET, LBRACE}">
     <nonterminal first="{#, ALIGNAS, LBRACKET, LBRACE}" ruleName="CompoundStatement"/>
    </action>
   </choice>
  </rule>
  <rule first="{DEFAULT}" name="Default">
   <action first="{DEFAULT}">
    <token first="{DEFAULT}" name="DEFAULT"/>
   </action>
  </rule>
  <rule first="{DELETE}" name="Delete">
   <action first="{DELETE}">
    <token first="{DELETE}" name="DELETE"/>
   </action>
  </rule>
  <rule first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}" name="ParameterDeclarationClause">
   <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
    <action first="{#}">
     <empty first="{#}"/>
    </action>
    <action first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
     <group first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
      <choice first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
       <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
        <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
         <nonterminal first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}" ruleName="ParameterDeclarationList"/>
         <nonterminal first="{COMMA}" ruleName="Comma"/>
        </sequence>
        <action first="{ELLIPSIS}">
         <nonterminal first="{ELLIPSIS}" ruleName="Ellipsis"/>
        </action>
       </sequence>
       <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
        <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
         <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
          <action first="{#}">
           <empty first="{#}"/>
          </action>
          <optional first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
           <nonterminal first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}" ruleName="ParameterDeclarationList"/>
          </optional>
         </sequence>
         <optional first="{#, ELLIPSIS}">
          <group first="{ELLIPSIS}">
           <action first="{ELLIPSIS}">
            <nonterminal first="{ELLIPSIS}" ruleName="Ellipsis"/>
           </action>
          </group>
         </optional>
        </sequence>
        <optional first="{#, COMMA}">
         <group first="{COMMA}">
          <sequence first="{COMMA}">
           <nonterminal first="{COMMA}" ruleName="Comma"/>
           <action first="{ELLIPSIS}">
            <nonterminal first="{ELLIPSIS}" ruleName="Ellipsis"/>
           </action>
          </sequence>
         </group>
        </optional>
       </sequence>
      </choice>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}" name="ParameterDeclarationList">
   <group first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
    <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
     <action first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
      <nonterminal first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}" ruleName="ParameterDeclaration"/>
     </action>
     <kleene first="{#, COMMA}">
      <group first="{COMMA}">
       <sequence first="{COMMA}">
        <nonterminal first="{COMMA}" ruleName="Comma"/>
        <action first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
         <nonterminal first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}" ruleName="ParameterDeclaration"/>
        </action>
       </sequence>
      </group>
     </kleene>
    </sequence>
   </group>
  </rule>
  <rule first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}" name="ParameterDeclaration">
   <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
    <action first="{#}">
     <empty first="{#}"/>
    </action>
    <action first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
     <group first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
      <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
       <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
        <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE, LBRACKET}">
         <optional first="{#, ALIGNAS, LBRACKET}">
          <group first="{ALIGNAS, LBRACKET}">
           <action first="{ALIGNAS, LBRACKET}">
            <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
           </action>
          </group>
         </optional>
         <action first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE, LBRACKET}">
          <nonterminal first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE, LBRACKET}" ruleName="DeclSpecifierSeq"/>
         </action>
        </sequence>
        <optional first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
         <group first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
          <choice first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
           <action first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
            <nonterminal first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}" ruleName="Declarator"/>
           </action>
           <action first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, LBRACKET, ARROW, ELLIPSIS}">
            <nonterminal first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, LBRACKET, ARROW, ELLIPSIS}" ruleName="AbstractDeclarator"/>
           </action>
          </choice>
         </group>
        </optional>
       </sequence>
       <optional first="{#, ASSIGN}">
        <group first="{ASSIGN}">
         <sequence first="{ASSIGN}">
          <action first="{ASSIGN}">
           <nonterminal first="{ASSIGN}" ruleName="Assign"/>
          </action>
          <action first="{#, ALIGNOF, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DOUBLE, DYNAMIC_CAST, FALSE, FLOAT, INT, LONG, NEW, NOEXCEPT, NULLPTR, OPERATOR, REINTERPRET_CAST, REQUIRES, SHORT, SIGNED, SIZEOF, STATIC_CAST, TEMPLATE, THIS, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, FLOATING_LITERAL, INTEGER_LITERAL, CHARACTER_LITERAL, STRING_LITERAL, BEGIN_RAW_STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, ADD_ASSIGN, SUB_ASSIGN, SHIFT_RIGHT_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, QUEST, OR_OR, AMP_AMP, OR, XOR, AMP, EQ, NEQ, LEQ, GEQ, SPACE_SHIP, LANGLE, RANGLE, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, MOD, DOT_STAR, ARROW_STAR, LPAREN, RPAREN, PLUS_PLUS, MINUS_MINUS, EXCLAMATION, TILDE, LBRACKET, LBRACE, DOT, ARROW, ELLIPSIS}">
           <nonterminal first="{#, ALIGNOF, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DOUBLE, DYNAMIC_CAST, FALSE, FLOAT, INT, LONG, NEW, NOEXCEPT, NULLPTR, OPERATOR, REINTERPRET_CAST, REQUIRES, SHORT, SIGNED, SIZEOF, STATIC_CAST, TEMPLATE, THIS, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, FLOATING_LITERAL, INTEGER_LITERAL, CHARACTER_LITERAL, STRING_LITERAL, BEGIN_RAW_STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, ADD_ASSIGN, SUB_ASSIGN, SHIFT_RIGHT_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, QUEST, OR_OR, AMP_AMP, OR, XOR, AMP, EQ, NEQ, LEQ, GEQ, SPACE_SHIP, LANGLE, RANGLE, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, MOD, DOT_STAR, ARROW_STAR, LPAREN, RPAREN, PLUS_PLUS, MINUS_MINUS, EXCLAMATION, TILDE, LBRACKET, LBRACE, DOT, ARROW, ELLIPSIS}" ruleName="InitializerClause"/>
          </action>
         </sequence>
        </group>
       </optional>
      </sequence>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{OPERATOR}" name="OperatorFunctionId">
   <action first="{OPERATOR}">
    <group first="{OPERATOR}">
     <sequence first="{OPERATOR}">
      <action first="{OPERATOR}">
       <nonterminal first="{OPERATOR}" ruleName="OperatorKw"/>
      </action>
      <nonterminal first="{CO_AWAIT, DELETE, NEW, COMMA, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, ADD_ASSIGN, SUB_ASSIGN, SHIFT_RIGHT_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, OR_OR, AMP_AMP, OR, XOR, AMP, EQ, NEQ, LEQ, GEQ, SPACE_SHIP, LANGLE, RANGLE, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, MOD, ARROW_STAR, LPAREN, PLUS_PLUS, MINUS_MINUS, EXCLAMATION, TILDE, LBRACKET, ARROW}" ruleName="Operator"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{OPERATOR}" name="ConversionFunctionId">
   <action first="{OPERATOR}">
    <group first="{OPERATOR}">
     <sequence first="{OPERATOR}">
      <action first="{OPERATOR}">
       <nonterminal first="{OPERATOR}" ruleName="OperatorKw"/>
      </action>
      <nonterminal first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, INT, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, AMP_AMP, AMP, LANGLE, STAR, LBRACKET}" ruleName="ConversionTypeId"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{TILDE}" name="DestructorId">
   <sequence first="{TILDE}">
    <action first="{TILDE}">
     <token first="{TILDE}" name="TILDE"/>
    </action>
    <action first="{#, DECLTYPE, ID}">
     <group first="{#, DECLTYPE, ID}">
      <choice first="{#, DECLTYPE, ID}">
       <action first="{#, ID}">
        <nonterminal first="{#, ID}" ruleName="TypeName"/>
       </action>
       <action first="{DECLTYPE}">
        <nonterminal first="{DECLTYPE}" ruleName="DeclTypeSpecifier"/>
       </action>
      </choice>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, INT, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, AMP_AMP, AMP, LANGLE, STAR, LBRACKET}" name="ConversionTypeId">
   <action first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, INT, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, AMP_AMP, AMP, LANGLE, STAR, LBRACKET}">
    <group first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, INT, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, AMP_AMP, AMP, LANGLE, STAR, LBRACKET}">
     <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, INT, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, AMP_AMP, AMP, LANGLE, STAR, LBRACKET}">
      <action first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, INT, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE, LBRACKET}">
       <nonterminal first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, INT, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE, LBRACKET}" ruleName="TypeSpecifierSeq"/>
      </action>
      <optional first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}">
       <nonterminal first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}" ruleName="ConversionDeclarator"/>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}" name="ConversionDeclarator">
   <action first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}">
    <group first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}">
     <sequence first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}">
      <action first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}">
       <nonterminal first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}" ruleName="PtrOperator"/>
      </action>
      <optional first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}">
       <nonterminal first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}" ruleName="ConversionDeclarator"/>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{OPERATOR}" name="OperatorKw">
   <action first="{OPERATOR}">
    <token first="{OPERATOR}" name="OPERATOR"/>
   </action>
  </rule>
  <rule first="{CO_AWAIT, DELETE, NEW, COMMA, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, ADD_ASSIGN, SUB_ASSIGN, SHIFT_RIGHT_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, OR_OR, AMP_AMP, OR, XOR, AMP, EQ, NEQ, LEQ, GEQ, SPACE_SHIP, LANGLE, RANGLE, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, MOD, ARROW_STAR, LPAREN, PLUS_PLUS, MINUS_MINUS, EXCLAMATION, TILDE, LBRACKET, ARROW}" name="Operator">
   <group first="{CO_AWAIT, DELETE, NEW, COMMA, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, ADD_ASSIGN, SUB_ASSIGN, SHIFT_RIGHT_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, OR_OR, AMP_AMP, OR, XOR, AMP, EQ, NEQ, LEQ, GEQ, SPACE_SHIP, LANGLE, RANGLE, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, MOD, ARROW_STAR, LPAREN, PLUS_PLUS, MINUS_MINUS, EXCLAMATION, TILDE, LBRACKET, ARROW}">
    <switch first="{CO_AWAIT, DELETE, NEW, COMMA, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, ADD_ASSIGN, SUB_ASSIGN, SHIFT_RIGHT_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, OR_OR, AMP_AMP, OR, XOR, AMP, EQ, NEQ, LEQ, GEQ, SPACE_SHIP, LANGLE, RANGLE, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, MOD, ARROW_STAR, LPAREN, PLUS_PLUS, MINUS_MINUS, EXCLAMATION, TILDE, LBRACKET, ARROW}">
     <case first="{DELETE, NEW}">
      <choice first="{DELETE, NEW}">
       <switch first="{DELETE, NEW}">
        <case first="{NEW}">
         <choice first="{NEW}">
          <sequence first="{NEW}">
           <sequence first="{NEW}">
            <action first="{NEW}">
             <token first="{NEW}" name="NEW"/>
            </action>
            <action first="{LBRACKET}">
             <token first="{LBRACKET}" name="LBRACKET"/>
            </action>
           </sequence>
           <action first="{RBRACKET}">
            <token first="{RBRACKET}" name="RBRACKET"/>
           </action>
          </sequence>
          <action first="{NEW}">
           <token first="{NEW}" name="NEW"/>
          </action>
         </choice>
        </case>
        <case first="{DELETE}">
         <sequence first="{DELETE}">
          <sequence first="{DELETE}">
           <action first="{DELETE}">
            <token first="{DELETE}" name="DELETE"/>
           </action>
           <action first="{LBRACKET}">
            <token first="{LBRACKET}" name="LBRACKET"/>
           </action>
          </sequence>
          <action first="{RBRACKET}">
           <token first="{RBRACKET}" name="RBRACKET"/>
          </action>
         </sequence>
        </case>
       </switch>
       <action first="{DELETE}">
        <token first="{DELETE}" name="DELETE"/>
       </action>
      </choice>
     </case>
     <case first="{CO_AWAIT}">
      <action first="{CO_AWAIT}">
       <token first="{CO_AWAIT}" name="CO_AWAIT"/>
      </action>
     </case>
     <case first="{LPAREN}">
      <sequence first="{LPAREN}">
       <action first="{LPAREN}">
        <token first="{LPAREN}" name="LPAREN"/>
       </action>
       <action first="{RPAREN}">
        <token first="{RPAREN}" name="RPAREN"/>
       </action>
      </sequence>
     </case>
     <case first="{LBRACKET}">
      <sequence first="{LBRACKET}">
       <action first="{LBRACKET}">
        <token first="{LBRACKET}" name="LBRACKET"/>
       </action>
       <action first="{RBRACKET}">
        <token first="{RBRACKET}" name="RBRACKET"/>
       </action>
      </sequence>
     </case>
     <case first="{ARROW}">
      <action first="{ARROW}">
       <token first="{ARROW}" name="ARROW"/>
      </action>
     </case>
     <case first="{ARROW_STAR}">
      <action first="{ARROW_STAR}">
       <token first="{ARROW_STAR}" name="ARROW_STAR"/>
      </action>
     </case>
     <case first="{TILDE}">
      <action first="{TILDE}">
       <token first="{TILDE}" name="TILDE"/>
      </action>
     </case>
     <case first="{EXCLAMATION}">
      <action first="{EXCLAMATION}">
       <token first="{EXCLAMATION}" name="EXCLAMATION"/>
      </action>
     </case>
     <case first="{PLUS}">
      <action first="{PLUS}">
       <token first="{PLUS}" name="PLUS"/>
      </action>
     </case>
     <case first="{MINUS}">
      <action first="{MINUS}">
       <token first="{MINUS}" name="MINUS"/>
      </action>
     </case>
     <case first="{STAR}">
      <action first="{STAR}">
       <token first="{STAR}" name="STAR"/>
      </action>
     </case>
     <case first="{DIV}">
      <action first="{DIV}">
       <token first="{DIV}" name="DIV"/>
      </action>
     </case>
     <case first="{MOD}">
      <action first="{MOD}">
       <token first="{MOD}" name="MOD"/>
      </action>
     </case>
     <case first="{XOR}">
      <action first="{XOR}">
       <token first="{XOR}" name="XOR"/>
      </action>
     </case>
     <case first="{AMP}">
      <action first="{AMP}">
       <token first="{AMP}" name="AMP"/>
      </action>
     </case>
     <case first="{OR}">
      <action first="{OR}">
       <token first="{OR}" name="OR"/>
      </action>
     </case>
     <case first="{ASSIGN}">
      <action first="{ASSIGN}">
       <token first="{ASSIGN}" name="ASSIGN"/>
      </action>
     </case>
     <case first="{ADD_ASSIGN}">
      <action first="{ADD_ASSIGN}">
       <token first="{ADD_ASSIGN}" name="ADD_ASSIGN"/>
      </action>
     </case>
     <case first="{SUB_ASSIGN}">
      <action first="{SUB_ASSIGN}">
       <token first="{SUB_ASSIGN}" name="SUB_ASSIGN"/>
      </action>
     </case>
     <case first="{MUL_ASSIGN}">
      <action first="{MUL_ASSIGN}">
       <token first="{MUL_ASSIGN}" name="MUL_ASSIGN"/>
      </action>
     </case>
     <case first="{DIV_ASSIGN}">
      <action first="{DIV_ASSIGN}">
       <token first="{DIV_ASSIGN}" name="DIV_ASSIGN"/>
      </action>
     </case>
     <case first="{REM_ASSIGN}">
      <action first="{REM_ASSIGN}">
       <token first="{REM_ASSIGN}" name="REM_ASSIGN"/>
      </action>
     </case>
     <case first="{XOR_ASSIGN}">
      <action first="{XOR_ASSIGN}">
       <token first="{XOR_ASSIGN}" name="XOR_ASSIGN"/>
      </action>
     </case>
     <case first="{AND_ASSIGN}">
      <action first="{AND_ASSIGN}">
       <token first="{AND_ASSIGN}" name="AND_ASSIGN"/>
      </action>
     </case>
     <case first="{OR_ASSIGN}">
      <action first="{OR_ASSIGN}">
       <token first="{OR_ASSIGN}" name="OR_ASSIGN"/>
      </action>
     </case>
     <case first="{SHIFT_LEFT_ASSIGN}">
      <action first="{SHIFT_LEFT_ASSIGN}">
       <token first="{SHIFT_LEFT_ASSIGN}" name="SHIFT_LEFT_ASSIGN"/>
      </action>
     </case>
     <case first="{SHIFT_RIGHT_ASSIGN}">
      <action first="{SHIFT_RIGHT_ASSIGN}">
       <token first="{SHIFT_RIGHT_ASSIGN}" name="SHIFT_RIGHT_ASSIGN"/>
      </action>
     </case>
     <case first="{EQ}">
      <action first="{EQ}">
       <token first="{EQ}" name="EQ"/>
      </action>
     </case>
     <case first="{NEQ}">
      <action first="{NEQ}">
       <token first="{NEQ}" name="NEQ"/>
      </action>
     </case>
     <case first="{LEQ}">
      <action first="{LEQ}">
       <token first="{LEQ}" name="LEQ"/>
      </action>
     </case>
     <case first="{GEQ}">
      <action first="{GEQ}">
       <token first="{GEQ}" name="GEQ"/>
      </action>
     </case>
     <case first="{SPACE_SHIP}">
      <action first="{SPACE_SHIP}">
       <token first="{SPACE_SHIP}" name="SPACE_SHIP"/>
      </action>
     </case>
     <case first="{LANGLE}">
      <action first="{LANGLE}">
       <token first="{LANGLE}" name="LANGLE"/>
      </action>
     </case>
     <case first="{RANGLE}">
      <action first="{RANGLE}">
       <token first="{RANGLE}" name="RANGLE"/>
      </action>
     </case>
     <case first="{AMP_AMP}">
      <action first="{AMP_AMP}">
       <token first="{AMP_AMP}" name="AMP_AMP"/>
      </action>
     </case>
     <case first="{OR_OR}">
      <action first="{OR_OR}">
       <token first="{OR_OR}" name="OR_OR"/>
      </action>
     </case>
     <case first="{SHIFT_LEFT}">
      <action first="{SHIFT_LEFT}">
       <token first="{SHIFT_LEFT}" name="SHIFT_LEFT"/>
      </action>
     </case>
     <case first="{SHIFT_RIGHT}">
      <action first="{SHIFT_RIGHT}">
       <token first="{SHIFT_RIGHT}" name="SHIFT_RIGHT"/>
      </action>
     </case>
     <case first="{PLUS_PLUS}">
      <action first="{PLUS_PLUS}">
       <token first="{PLUS_PLUS}" name="PLUS_PLUS"/>
      </action>
     </case>
     <case first="{MINUS_MINUS}">
      <action first="{MINUS_MINUS}">
       <token first="{MINUS_MINUS}" name="MINUS_MINUS"/>
      </action>
     </case>
     <case first="{COMMA}">
      <action first="{COMMA}">
       <token first="{COMMA}" name="COMMA"/>
      </action>
     </case>
    </switch>
   </group>
  </rule>
  <rule first="{NOEXCEPT}" name="Noexcept">
   <action first="{NOEXCEPT}">
    <token first="{NOEXCEPT}" name="NOEXCEPT"/>
   </action>
  </rule>
 </grammar>
</parserFile>
