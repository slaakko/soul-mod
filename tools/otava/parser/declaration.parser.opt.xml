<parserFile>
 <grammar name="DeclarationParser">
  <rule first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}" name="DeclarationSeq">
   <action first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
    <group first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
     <sequence first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
      <action first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
       <nonterminal first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}" ruleName="Declaration"/>
      </action>
      <kleene first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
       <group first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
        <action first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
         <nonterminal first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}" ruleName="Declaration"/>
        </action>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}" name="NamespaceDeclarationSeq">
   <action first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
    <group first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
     <sequence first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
      <action first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
       <nonterminal first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}" ruleName="Declaration"/>
      </action>
      <kleene first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
       <group first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
        <choice first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
         <choice first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
          <action first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
           <nonterminal first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}" ruleName="Declaration"/>
          </action>
          <action first="{RBRACE}">
           <nonterminal first="{RBRACE}" ruleName="RBraceNext"/>
          </action>
         </choice>
         <action first="{#}">
          <empty first="{#}"/>
         </action>
        </choice>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{RBRACE}" name="RBraceNext">
   <lookahead first="{RBRACE}">
    <group first="{RBRACE}">
     <token first="{RBRACE}" name="RBRACE"/>
    </group>
   </lookahead>
  </rule>
  <rule first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}" name="Declaration">
   <choice first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
    <choice first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
     <choice first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
      <choice first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
       <choice first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
        <choice first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
         <choice first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
          <choice first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, ARROW, SEMICOLON, ELLIPSIS}">
           <choice first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, ARROW, SEMICOLON, ELLIPSIS}">
            <choice first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, ARROW, SEMICOLON, ELLIPSIS}">
             <choice first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, ARROW, SEMICOLON, ELLIPSIS}">
              <choice first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, ARROW, SEMICOLON, ELLIPSIS}">
               <choice first="{ID}">
                <action first="{ID}">
                 <nonterminal first="{ID}" ruleName="ImportDeclaration"/>
                </action>
                <action first="{ID}">
                 <nonterminal first="{ID}" ruleName="ExportDeclaration"/>
                </action>
               </choice>
               <action first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, ARROW, SEMICOLON, ELLIPSIS}">
                <nonterminal first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, ARROW, SEMICOLON, ELLIPSIS}" ruleName="BlockDeclaration"/>
               </action>
              </choice>
              <action first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, SEMICOLON, ELLIPSIS}">
               <nonterminal first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, SEMICOLON, ELLIPSIS}" ruleName="NoDeclSpecFunctionDeclaration"/>
              </action>
             </choice>
             <action first="{#, ALIGNAS, CONST, DECLTYPE, OPERATOR, REQUIRES, TEMPLATE, VOLATILE, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, LBRACE, ARROW, ELLIPSIS}">
              <nonterminal first="{#, ALIGNAS, CONST, DECLTYPE, OPERATOR, REQUIRES, TEMPLATE, VOLATILE, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, LBRACE, ARROW, ELLIPSIS}" ruleName="NoDeclSpecFunctionDefinition"/>
             </action>
            </choice>
            <action first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, LBRACE, ARROW, ELLIPSIS}">
             <nonterminal first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, LBRACE, ARROW, ELLIPSIS}" ruleName="FunctionDefinition"/>
            </action>
           </choice>
           <action first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, ARROW, SEMICOLON, ELLIPSIS}">
            <nonterminal first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, ARROW, SEMICOLON, ELLIPSIS}" ruleName="DeductionGuide"/>
           </action>
          </choice>
          <action first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
           <nonterminal first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}" ruleName="ExplicitInstantiation"/>
          </action>
         </choice>
         <action first="{TEMPLATE}">
          <nonterminal first="{TEMPLATE}" ruleName="ExplicitSpecialization"/>
         </action>
        </choice>
        <action first="{TEMPLATE}">
         <nonterminal first="{TEMPLATE}" ruleName="TemplateDeclaration"/>
        </action>
       </choice>
       <action first="{EXTERN}">
        <nonterminal first="{EXTERN}" ruleName="LinkageSpecification"/>
       </action>
      </choice>
      <action first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
       <nonterminal first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}" ruleName="NamespaceDefinition"/>
      </action>
     </choice>
     <action first="{SEMICOLON}">
      <nonterminal first="{SEMICOLON}" ruleName="EmptyDeclaration"/>
     </action>
    </choice>
    <action first="{ALIGNAS, LBRACKET}">
     <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeDeclaration"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, ARROW, SEMICOLON, ELLIPSIS}" name="BlockDeclaration">
   <choice first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, ARROW, SEMICOLON, ELLIPSIS}">
    <choice first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, ARROW, SEMICOLON, ELLIPSIS}">
     <choice first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, ARROW, SEMICOLON, ELLIPSIS}">
      <choice first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, ARROW, SEMICOLON, ELLIPSIS}">
       <choice first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, ARROW, SEMICOLON, ELLIPSIS}">
        <choice first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, ARROW, SEMICOLON, ELLIPSIS}">
         <choice first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, ARROW, SEMICOLON, ELLIPSIS}">
          <choice first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, ARROW, SEMICOLON, ELLIPSIS}">
           <action first="{ENUM}">
            <nonterminal first="{ENUM}" ruleName="OpaqueEnumDeclaration"/>
           </action>
           <action first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, ARROW, SEMICOLON, ELLIPSIS}">
            <nonterminal first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, ARROW, SEMICOLON, ELLIPSIS}" ruleName="SimpleDeclaration"/>
           </action>
          </choice>
          <action first="{#, ALIGNAS, ASM, STRING_LITERAL, LPAREN, RPAREN, LBRACKET, SEMICOLON}">
           <nonterminal first="{#, ALIGNAS, ASM, STRING_LITERAL, LPAREN, RPAREN, LBRACKET, SEMICOLON}" ruleName="AsmDeclaration"/>
          </action>
         </choice>
         <action first="{NAMESPACE}">
          <nonterminal first="{NAMESPACE}" ruleName="NamespaceAliasDefinition"/>
         </action>
        </choice>
        <action first="{USING}">
         <nonterminal first="{USING}" ruleName="UsingDeclaration"/>
        </action>
       </choice>
       <action first="{USING}">
        <nonterminal first="{USING}" ruleName="UsingEnumDeclaration"/>
       </action>
      </choice>
      <action first="{#, ALIGNAS, NAMESPACE, TEMPLATE, USING, ID, COLON_COLON, LBRACKET, SEMICOLON}">
       <nonterminal first="{#, ALIGNAS, NAMESPACE, TEMPLATE, USING, ID, COLON_COLON, LBRACKET, SEMICOLON}" ruleName="UsingDirective"/>
      </action>
     </choice>
     <action first="{STATIC_ASSERT}">
      <nonterminal first="{STATIC_ASSERT}" ruleName="StaticAssertDeclaration"/>
     </action>
    </choice>
    <action first="{USING}">
     <nonterminal first="{USING}" ruleName="AliasDeclaration"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, SEMICOLON, ELLIPSIS}" name="NoDeclSpecFunctionDeclaration">
   <action first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, SEMICOLON, ELLIPSIS}">
    <group first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, SEMICOLON, ELLIPSIS}">
     <sequence first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, SEMICOLON, ELLIPSIS}">
      <sequence first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
       <sequence first="{#, ALIGNAS, LBRACKET}">
        <nonterminal first="{#}" ruleName="NoDeclSpecFunctionDeclarationGuard"/>
        <optional first="{#, ALIGNAS, LBRACKET}">
         <group first="{ALIGNAS, LBRACKET}">
          <action first="{ALIGNAS, LBRACKET}">
           <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
          </action>
         </group>
        </optional>
       </sequence>
       <action first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
        <nonterminal first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}" ruleName="Declarator"/>
       </action>
      </sequence>
      <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{SEMICOLON}" name="EmptyDeclaration">
   <action first="{SEMICOLON}">
    <token first="{SEMICOLON}" name="SEMICOLON"/>
   </action>
  </rule>
  <rule first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, ARROW, SEMICOLON, ELLIPSIS}" name="SimpleDeclaration">
   <group first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, ARROW, SEMICOLON, ELLIPSIS}">
    <choice first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, ARROW, SEMICOLON, ELLIPSIS}">
     <action first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, LBRACE, ARROW, SEMICOLON, ELLIPSIS}">
      <group first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, LBRACE, ARROW, SEMICOLON, ELLIPSIS}">
       <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, LBRACE, ARROW, SEMICOLON, ELLIPSIS}">
        <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, LBRACE, ARROW, ELLIPSIS}">
         <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE, LBRACKET}">
          <optional first="{#, ALIGNAS, LBRACKET}">
           <group first="{ALIGNAS, LBRACKET}">
            <action first="{ALIGNAS, LBRACKET}">
             <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
            </action>
           </group>
          </optional>
          <action first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE, LBRACKET}">
           <nonterminal first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE, LBRACKET}" ruleName="DeclSpecifierSeq"/>
          </action>
         </sequence>
         <optional first="{#, ALIGNAS, CONST, OPERATOR, REQUIRES, TEMPLATE, VOLATILE, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, LBRACE, ARROW, ELLIPSIS}">
          <nonterminal first="{#, ALIGNAS, CONST, OPERATOR, REQUIRES, TEMPLATE, VOLATILE, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, LBRACE, ARROW, ELLIPSIS}" ruleName="InitDeclaratorList"/>
         </optional>
        </sequence>
        <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
       </sequence>
      </group>
     </action>
     <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, ASSIGN, AMP_AMP, AMP, LANGLE, LPAREN, LBRACKET, RBRACKET, LBRACE, SEMICOLON}">
      <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, ASSIGN, AMP_AMP, AMP, LANGLE, LPAREN, LBRACKET, RBRACKET, LBRACE}">
       <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, AMP_AMP, AMP, LANGLE, LBRACKET, RBRACKET}">
        <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, AMP_AMP, AMP, LANGLE, LBRACKET}">
         <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, AMP_AMP, AMP, LANGLE, LBRACKET}">
          <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, AMP_AMP, AMP, LANGLE, LBRACKET}">
           <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE, LBRACKET}">
            <optional first="{#, ALIGNAS, LBRACKET}">
             <group first="{ALIGNAS, LBRACKET}">
              <action first="{ALIGNAS, LBRACKET}">
               <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
              </action>
             </group>
            </optional>
            <action first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE, LBRACKET}">
             <nonterminal first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE, LBRACKET}" ruleName="DeclSpecifierSeq"/>
            </action>
           </sequence>
           <optional first="{#, AMP_AMP, AMP}">
            <nonterminal first="{AMP_AMP, AMP}" ruleName="RefQualifier"/>
           </optional>
          </sequence>
          <action first="{LBRACKET}">
           <token first="{LBRACKET}" name="LBRACKET"/>
          </action>
         </sequence>
         <nonterminal first="{ID}" ruleName="IdentifierList"/>
        </sequence>
        <action first="{RBRACKET}">
         <token first="{RBRACKET}" name="RBRACKET"/>
        </action>
       </sequence>
       <nonterminal first="{ASSIGN, LPAREN, LBRACE}" ruleName="Initializer"/>
      </sequence>
      <action first="{SEMICOLON}">
       <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
      </action>
     </sequence>
    </choice>
   </group>
  </rule>
  <rule first="{#, ALIGNAS, ASM, STRING_LITERAL, LPAREN, RPAREN, LBRACKET, SEMICOLON}" name="AsmDeclaration">
   <action first="{#, ALIGNAS, ASM, STRING_LITERAL, LPAREN, RPAREN, LBRACKET, SEMICOLON}">
    <group first="{#, ALIGNAS, ASM, STRING_LITERAL, LPAREN, RPAREN, LBRACKET, SEMICOLON}">
     <sequence first="{#, ALIGNAS, ASM, STRING_LITERAL, LPAREN, RPAREN, LBRACKET, SEMICOLON}">
      <sequence first="{#, ALIGNAS, ASM, STRING_LITERAL, LPAREN, RPAREN, LBRACKET}">
       <sequence first="{#, ALIGNAS, ASM, STRING_LITERAL, LPAREN, LBRACKET}">
        <sequence first="{#, ALIGNAS, ASM, LPAREN, LBRACKET}">
         <sequence first="{#, ALIGNAS, ASM, LBRACKET}">
          <optional first="{#, ALIGNAS, LBRACKET}">
           <group first="{ALIGNAS, LBRACKET}">
            <action first="{ALIGNAS, LBRACKET}">
             <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
            </action>
           </group>
          </optional>
          <action first="{ASM}">
           <nonterminal first="{ASM}" ruleName="Asm"/>
          </action>
         </sequence>
         <action first="{LPAREN}">
          <token first="{LPAREN}" name="LPAREN"/>
         </action>
        </sequence>
        <nonterminal first="{STRING_LITERAL}" ruleName="StringLiteral"/>
       </sequence>
       <action first="{RPAREN}">
        <token first="{RPAREN}" name="RPAREN"/>
       </action>
      </sequence>
      <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{ASM}" name="Asm">
   <action first="{ASM}">
    <token first="{ASM}" name="ASM"/>
   </action>
  </rule>
  <rule first="{EXTERN}" name="LinkageSpecification">
   <action first="{EXTERN}">
    <group first="{EXTERN}">
     <sequence first="{EXTERN}">
      <sequence first="{EXTERN}">
       <action first="{EXTERN}">
        <nonterminal first="{EXTERN}" ruleName="Extern"/>
       </action>
       <action first="{STRING_LITERAL}">
        <nonterminal first="{STRING_LITERAL}" ruleName="StringLiteral"/>
       </action>
      </sequence>
      <group first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
       <choice first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
        <sequence first="{LBRACE}">
         <sequence first="{LBRACE}">
          <action first="{LBRACE}">
           <token first="{LBRACE}" name="LBRACE"/>
          </action>
          <optional first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
           <nonterminal first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}" ruleName="DeclarationSeq"/>
          </optional>
         </sequence>
         <action first="{RBRACE}">
          <group first="{RBRACE}">
           <action first="{RBRACE}">
            <token first="{RBRACE}" name="RBRACE"/>
           </action>
          </group>
         </action>
        </sequence>
        <action first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
         <nonterminal first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}" ruleName="Declaration"/>
        </action>
       </choice>
      </group>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}" name="NamespaceDefinition">
   <choice first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
    <choice first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
     <action first="{NAMESPACE}">
      <nonterminal first="{NAMESPACE}" ruleName="NestedNamespaceDefinition"/>
     </action>
     <action first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
      <nonterminal first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}" ruleName="NamedNamespaceDefinition"/>
     </action>
    </choice>
    <action first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
     <nonterminal first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}" ruleName="UnnamedNamespaceDefinition"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}" name="NamedNamespaceDefinition">
   <action first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
    <group first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
     <sequence first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
      <sequence first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
       <sequence first="{#, ALIGNAS, INLINE, NAMESPACE, ID, LBRACKET, LBRACE}">
        <sequence first="{#, ALIGNAS, INLINE, NAMESPACE, ID, LBRACKET}">
         <sequence first="{#, ALIGNAS, INLINE, NAMESPACE, LBRACKET}">
          <sequence first="{#, INLINE, NAMESPACE}">
           <optional first="{#, INLINE}">
            <group first="{INLINE}">
             <action first="{INLINE}">
              <nonterminal first="{INLINE}" ruleName="Inline"/>
             </action>
            </group>
           </optional>
           <action first="{NAMESPACE}">
            <nonterminal first="{NAMESPACE}" ruleName="Namespace"/>
           </action>
          </sequence>
          <optional first="{#, ALIGNAS, LBRACKET}">
           <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
          </optional>
         </sequence>
         <action first="{ID}">
          <nonterminal first="{ID}" ruleName="Identifier"/>
         </action>
        </sequence>
        <action first="{LBRACE}">
         <token first="{LBRACE}" name="LBRACE"/>
        </action>
       </sequence>
       <nonterminal first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}" ruleName="NamespaceBody"/>
      </sequence>
      <action first="{RBRACE}">
       <token first="{RBRACE}" name="RBRACE"/>
      </action>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}" name="UnnamedNamespaceDefinition">
   <action first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
    <group first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
     <sequence first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
      <sequence first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
       <sequence first="{#, ALIGNAS, INLINE, NAMESPACE, LBRACKET, LBRACE}">
        <sequence first="{#, ALIGNAS, INLINE, NAMESPACE, LBRACKET}">
         <sequence first="{#, INLINE, NAMESPACE}">
          <optional first="{#, INLINE}">
           <group first="{INLINE}">
            <action first="{INLINE}">
             <nonterminal first="{INLINE}" ruleName="Inline"/>
            </action>
           </group>
          </optional>
          <action first="{NAMESPACE}">
           <nonterminal first="{NAMESPACE}" ruleName="Namespace"/>
          </action>
         </sequence>
         <optional first="{#, ALIGNAS, LBRACKET}">
          <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
         </optional>
        </sequence>
        <action first="{LBRACE}">
         <token first="{LBRACE}" name="LBRACE"/>
        </action>
       </sequence>
       <nonterminal first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}" ruleName="NamespaceBody"/>
      </sequence>
      <action first="{RBRACE}">
       <token first="{RBRACE}" name="RBRACE"/>
      </action>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{NAMESPACE}" name="NestedNamespaceDefinition">
   <action first="{NAMESPACE}">
    <group first="{NAMESPACE}">
     <sequence first="{NAMESPACE}">
      <sequence first="{NAMESPACE}">
       <sequence first="{NAMESPACE}">
        <sequence first="{NAMESPACE}">
         <action first="{NAMESPACE}">
          <nonterminal first="{NAMESPACE}" ruleName="Namespace"/>
         </action>
         <group first="{#, ID}">
          <sequence first="{#, ID}">
           <action first="{#}">
            <empty first="{#}"/>
           </action>
           <action first="{ID}">
            <nonterminal first="{ID}" ruleName="NestedNamespaceSpecifier"/>
           </action>
          </sequence>
         </group>
        </sequence>
        <action first="{LBRACE}">
         <token first="{LBRACE}" name="LBRACE"/>
        </action>
       </sequence>
       <nonterminal first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}" ruleName="NamespaceBody"/>
      </sequence>
      <action first="{RBRACE}">
       <token first="{RBRACE}" name="RBRACE"/>
      </action>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{NAMESPACE}" name="NamespaceAliasDefinition">
   <action first="{NAMESPACE}">
    <group first="{NAMESPACE}">
     <sequence first="{NAMESPACE}">
      <sequence first="{NAMESPACE}">
       <sequence first="{NAMESPACE}">
        <sequence first="{NAMESPACE}">
         <action first="{NAMESPACE}">
          <nonterminal first="{NAMESPACE}" ruleName="Namespace"/>
         </action>
         <nonterminal first="{ID}" ruleName="Identifier"/>
        </sequence>
        <nonterminal first="{ASSIGN}" ruleName="Assign"/>
       </sequence>
       <nonterminal first="{#, TEMPLATE, ID, COLON_COLON}" ruleName="QualifiedNamespaceSpecifier"/>
      </sequence>
      <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, TEMPLATE, ID, COLON_COLON}" name="QualifiedNamespaceSpecifier">
   <group first="{#, TEMPLATE, ID, COLON_COLON}">
    <choice first="{#, TEMPLATE, ID, COLON_COLON}">
     <sequence first="{#, TEMPLATE, ID, COLON_COLON}">
      <action first="{#, TEMPLATE, ID, COLON_COLON}">
       <nonterminal first="{#, TEMPLATE, ID, COLON_COLON}" ruleName="NestedNameSpecifier"/>
      </action>
      <action first="{ID}">
       <nonterminal first="{ID}" ruleName="NamespaceName"/>
      </action>
     </sequence>
     <action first="{ID}">
      <nonterminal first="{ID}" ruleName="NamespaceName"/>
     </action>
    </choice>
   </group>
  </rule>
  <rule first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}" name="NamespaceBody">
   <action first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
    <group first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
     <optional first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
      <group first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
       <action first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}">
        <nonterminal first="{#, ALIGNAS, ASM, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, NAMESPACE, OPERATOR, REQUIRES, SHORT, SIGNED, STATIC, STATIC_ASSERT, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, RPAREN, TILDE, LBRACKET, RBRACKET, LBRACE, RBRACE, ARROW, SEMICOLON, ELLIPSIS}" ruleName="NamespaceDeclarationSeq"/>
       </action>
      </group>
     </optional>
    </group>
   </action>
  </rule>
  <rule first="{ID}" name="NestedNamespaceSpecifier">
   <action first="{ID}">
    <group first="{ID}">
     <sequence first="{ID}">
      <action first="{ID}">
       <nonterminal first="{ID}" ruleName="Identifier"/>
      </action>
      <positive first="{COLON_COLON}">
       <group first="{COLON_COLON}">
        <sequence first="{COLON_COLON}">
         <sequence first="{COLON_COLON}">
          <action first="{COLON_COLON}">
           <nonterminal first="{COLON_COLON}" ruleName="ColonColon"/>
          </action>
          <optional first="{#, INLINE}">
           <group first="{INLINE}">
            <action first="{INLINE}">
             <nonterminal first="{INLINE}" ruleName="Inline"/>
            </action>
           </group>
          </optional>
         </sequence>
         <action first="{ID}">
          <nonterminal first="{ID}" ruleName="Identifier"/>
         </action>
        </sequence>
       </group>
      </positive>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{NAMESPACE}" name="Namespace">
   <action first="{NAMESPACE}">
    <token first="{NAMESPACE}" name="NAMESPACE"/>
   </action>
  </rule>
  <rule first="{ID}" name="NamespaceName">
   <action first="{ID}">
    <nonterminal first="{ID}" ruleName="Identifier"/>
   </action>
  </rule>
  <rule first="{USING}" name="UsingDeclaration">
   <action first="{USING}">
    <group first="{USING}">
     <sequence first="{USING}">
      <sequence first="{USING}">
       <action first="{USING}">
        <nonterminal first="{USING}" ruleName="Using"/>
       </action>
       <nonterminal first="{#, OPERATOR, TEMPLATE, TYPENAME, ID, COLON_COLON, COMMA, TILDE, ELLIPSIS}" ruleName="UsingDeclaratorList"/>
      </sequence>
      <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{USING}" name="Using">
   <action first="{USING}">
    <token first="{USING}" name="USING"/>
   </action>
  </rule>
  <rule first="{#, OPERATOR, TEMPLATE, TYPENAME, ID, COLON_COLON, COMMA, TILDE, ELLIPSIS}" name="UsingDeclaratorList">
   <action first="{#, OPERATOR, TEMPLATE, TYPENAME, ID, COLON_COLON, COMMA, TILDE, ELLIPSIS}">
    <group first="{#, OPERATOR, TEMPLATE, TYPENAME, ID, COLON_COLON, COMMA, TILDE, ELLIPSIS}">
     <sequence first="{#, OPERATOR, TEMPLATE, TYPENAME, ID, COLON_COLON, COMMA, TILDE, ELLIPSIS}">
      <sequence first="{#, OPERATOR, TEMPLATE, TYPENAME, ID, COLON_COLON, COMMA, TILDE}">
       <action first="{#, OPERATOR, TEMPLATE, TYPENAME, ID, COLON_COLON, TILDE}">
        <nonterminal first="{#, OPERATOR, TEMPLATE, TYPENAME, ID, COLON_COLON, TILDE}" ruleName="UsingDeclarator"/>
       </action>
       <kleene first="{#, COMMA}">
        <group first="{COMMA}">
         <sequence first="{COMMA}">
          <action first="{COMMA}">
           <nonterminal first="{COMMA}" ruleName="Comma"/>
          </action>
          <action first="{#, OPERATOR, TEMPLATE, TYPENAME, ID, COLON_COLON, TILDE}">
           <nonterminal first="{#, OPERATOR, TEMPLATE, TYPENAME, ID, COLON_COLON, TILDE}" ruleName="UsingDeclarator"/>
          </action>
         </sequence>
        </group>
       </kleene>
      </sequence>
      <optional first="{#, ELLIPSIS}">
       <group first="{ELLIPSIS}">
        <action first="{ELLIPSIS}">
         <nonterminal first="{ELLIPSIS}" ruleName="Ellipsis"/>
        </action>
       </group>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, OPERATOR, TEMPLATE, TYPENAME, ID, COLON_COLON, TILDE}" name="UsingDeclarator">
   <group first="{#, OPERATOR, TEMPLATE, TYPENAME, ID, COLON_COLON, TILDE}">
    <choice first="{#, OPERATOR, TEMPLATE, TYPENAME, ID, COLON_COLON, TILDE}">
     <sequence first="{TYPENAME}">
      <sequence first="{TYPENAME}">
       <action first="{TYPENAME}">
        <nonterminal first="{TYPENAME}" ruleName="Typename"/>
       </action>
       <action first="{#, TEMPLATE, ID, COLON_COLON}">
        <nonterminal first="{#, TEMPLATE, ID, COLON_COLON}" ruleName="NestedNameSpecifier"/>
       </action>
      </sequence>
      <action first="{OPERATOR, ID, TILDE}">
       <nonterminal first="{OPERATOR, ID, TILDE}" ruleName="UnqualifiedId"/>
      </action>
     </sequence>
     <sequence first="{#, OPERATOR, TEMPLATE, ID, COLON_COLON, TILDE}">
      <action first="{#, TEMPLATE, ID, COLON_COLON}">
       <nonterminal first="{#, TEMPLATE, ID, COLON_COLON}" ruleName="NestedNameSpecifier"/>
      </action>
      <action first="{OPERATOR, ID, TILDE}">
       <nonterminal first="{OPERATOR, ID, TILDE}" ruleName="UnqualifiedId"/>
      </action>
     </sequence>
    </choice>
   </group>
  </rule>
  <rule first="{USING}" name="UsingEnumDeclaration">
   <action first="{USING}">
    <group first="{USING}">
     <sequence first="{USING}">
      <sequence first="{USING}">
       <action first="{USING}">
        <nonterminal first="{USING}" ruleName="Using"/>
       </action>
       <nonterminal first="{ENUM}" ruleName="ElaboratedEnumSpecifier"/>
      </sequence>
      <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, ALIGNAS, NAMESPACE, TEMPLATE, USING, ID, COLON_COLON, LBRACKET, SEMICOLON}" name="UsingDirective">
   <group first="{#, ALIGNAS, NAMESPACE, TEMPLATE, USING, ID, COLON_COLON, LBRACKET, SEMICOLON}">
    <sequence first="{#, ALIGNAS, NAMESPACE, TEMPLATE, USING, ID, COLON_COLON, LBRACKET, SEMICOLON}">
     <sequence first="{#, ALIGNAS, NAMESPACE, USING, LBRACKET}">
      <sequence first="{#, ALIGNAS, USING, LBRACKET}">
       <optional first="{#, ALIGNAS, LBRACKET}">
        <group first="{ALIGNAS, LBRACKET}">
         <action first="{ALIGNAS, LBRACKET}">
          <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
         </action>
        </group>
       </optional>
       <action first="{USING}">
        <nonterminal first="{USING}" ruleName="Using"/>
       </action>
      </sequence>
      <nonterminal first="{NAMESPACE}" ruleName="Namespace"/>
     </sequence>
     <group first="{#, TEMPLATE, ID, COLON_COLON, SEMICOLON}">
      <choice first="{#, TEMPLATE, ID, COLON_COLON, SEMICOLON}">
       <sequence first="{#, TEMPLATE, ID, COLON_COLON, SEMICOLON}">
        <sequence first="{#, TEMPLATE, ID, COLON_COLON}">
         <action first="{#, TEMPLATE, ID, COLON_COLON}">
          <nonterminal first="{#, TEMPLATE, ID, COLON_COLON}" ruleName="NestedNameSpecifier"/>
         </action>
         <nonterminal first="{ID}" ruleName="NamespaceName"/>
        </sequence>
        <action first="{SEMICOLON}">
         <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
        </action>
       </sequence>
       <sequence first="{ID}">
        <nonterminal first="{ID}" ruleName="NamespaceName"/>
        <action first="{SEMICOLON}">
         <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
        </action>
       </sequence>
      </choice>
     </group>
    </sequence>
   </group>
  </rule>
  <rule first="{STATIC_ASSERT}" name="StaticAssertDeclaration">
   <group first="{STATIC_ASSERT}">
    <sequence first="{STATIC_ASSERT}">
     <sequence first="{STATIC_ASSERT}">
      <sequence first="{STATIC_ASSERT}">
       <action first="{STATIC_ASSERT}">
        <nonterminal first="{STATIC_ASSERT}" ruleName="StaticAssert"/>
       </action>
       <action first="{LPAREN}">
        <token first="{LPAREN}" name="LPAREN"/>
       </action>
      </sequence>
      <nonterminal first="{#, ALIGNOF, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DOUBLE, DYNAMIC_CAST, FALSE, FLOAT, INT, LONG, NEW, NOEXCEPT, NULLPTR, OPERATOR, REINTERPRET_CAST, REQUIRES, SHORT, SIGNED, SIZEOF, STATIC_CAST, TEMPLATE, THIS, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, FLOATING_LITERAL, INTEGER_LITERAL, CHARACTER_LITERAL, STRING_LITERAL, BEGIN_RAW_STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, ADD_ASSIGN, SUB_ASSIGN, SHIFT_RIGHT_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, QUEST, OR_OR, AMP_AMP, OR, XOR, AMP, EQ, NEQ, LEQ, GEQ, SPACE_SHIP, LANGLE, RANGLE, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, MOD, DOT_STAR, ARROW_STAR, LPAREN, RPAREN, PLUS_PLUS, MINUS_MINUS, EXCLAMATION, TILDE, LBRACKET, LBRACE, DOT, ARROW, ELLIPSIS}" ruleName="ConstantExpression"/>
     </sequence>
     <group first="{COMMA, RPAREN}">
      <switch first="{COMMA, RPAREN}">
       <case first="{COMMA}">
        <sequence first="{COMMA}">
         <sequence first="{COMMA}">
          <sequence first="{COMMA}">
           <nonterminal first="{COMMA}" ruleName="Comma"/>
           <nonterminal first="{STRING_LITERAL}" ruleName="StringLiteral"/>
          </sequence>
          <action first="{RPAREN}">
           <token first="{RPAREN}" name="RPAREN"/>
          </action>
         </sequence>
         <action first="{SEMICOLON}">
          <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
         </action>
        </sequence>
       </case>
       <case first="{RPAREN}">
        <sequence first="{RPAREN}">
         <action first="{RPAREN}">
          <token first="{RPAREN}" name="RPAREN"/>
         </action>
         <action first="{SEMICOLON}">
          <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
         </action>
        </sequence>
       </case>
      </switch>
     </group>
    </sequence>
   </group>
  </rule>
  <rule first="{STATIC_ASSERT}" name="StaticAssert">
   <action first="{STATIC_ASSERT}">
    <token first="{STATIC_ASSERT}" name="STATIC_ASSERT"/>
   </action>
  </rule>
  <rule first="{USING}" name="AliasDeclaration">
   <action first="{USING}">
    <group first="{USING}">
     <sequence first="{USING}">
      <sequence first="{USING}">
       <sequence first="{USING}">
        <sequence first="{USING}">
         <sequence first="{USING}">
          <action first="{USING}">
           <nonterminal first="{USING}" ruleName="Using"/>
          </action>
          <nonterminal first="{ID}" ruleName="Identifier"/>
         </sequence>
         <optional first="{#, ALIGNAS, LBRACKET}">
          <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
         </optional>
        </sequence>
        <nonterminal first="{ASSIGN}" ruleName="Assign"/>
       </sequence>
       <nonterminal first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, INT, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, LBRACKET, ARROW, ELLIPSIS}" ruleName="DefiningTypeId"/>
      </sequence>
      <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE, LBRACKET}" name="DeclSpecifierSeq">
   <action first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE, LBRACKET}">
    <group first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE, LBRACKET}">
     <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE, LBRACKET}">
      <sequence first="{#, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE}">
       <sequence first="{#, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE}">
        <action first="{#}">
         <empty first="{#}"/>
        </action>
        <action first="{#, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE}">
         <nonterminal first="{#, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE}" ruleName="DeclSpecifier"/>
        </action>
       </sequence>
       <kleene first="{#, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE}">
        <group first="{#, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE}">
         <action first="{#, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE}">
          <nonterminal first="{#, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE}" ruleName="DeclSpecifier"/>
         </action>
        </group>
       </kleene>
      </sequence>
      <optional first="{#, ALIGNAS, LBRACKET}">
       <group first="{ALIGNAS, LBRACKET}">
        <action first="{ALIGNAS, LBRACKET}">
         <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
        </action>
       </group>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{INLINE}" name="Inline">
   <action first="{INLINE}">
    <token first="{INLINE}" name="INLINE"/>
   </action>
  </rule>
  <rule first="{#, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE}" name="DeclSpecifier">
   <choice first="{#, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE}">
    <choice first="{#, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE}">
     <choice first="{#, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEXPR, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE}">
      <choice first="{#, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE}">
       <choice first="{#, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE}">
        <choice first="{#, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, INLINE, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE}">
         <choice first="{#, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE}">
          <choice first="{#, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, DECLTYPE, DOUBLE, ENUM, EXTERN, FLOAT, INT, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE}">
           <action first="{EXTERN, MUTABLE, STATIC, THREAD_LOCAL}">
            <nonterminal first="{EXTERN, MUTABLE, STATIC, THREAD_LOCAL}" ruleName="StorageClassSpecifier"/>
           </action>
           <action first="{#, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, INT, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE}">
            <nonterminal first="{#, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, INT, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, LANGLE}" ruleName="DefiningTypeSpecifier"/>
           </action>
          </choice>
          <action first="{EXPLICIT, VIRTUAL}">
           <nonterminal first="{EXPLICIT, VIRTUAL}" ruleName="FunctionSpecifier"/>
          </action>
         </choice>
         <action first="{INLINE}">
          <nonterminal first="{INLINE}" ruleName="Inline"/>
         </action>
        </choice>
        <action first="{FRIEND}">
         <token first="{FRIEND}" name="FRIEND"/>
        </action>
       </choice>
       <action first="{TYPEDEF}">
        <token first="{TYPEDEF}" name="TYPEDEF"/>
       </action>
      </choice>
      <action first="{CONSTEXPR}">
       <token first="{CONSTEXPR}" name="CONSTEXPR"/>
      </action>
     </choice>
     <action first="{CONSTEVAL}">
      <token first="{CONSTEVAL}" name="CONSTEVAL"/>
     </action>
    </choice>
    <action first="{CONSTINIT}">
     <token first="{CONSTINIT}" name="CONSTINIT"/>
    </action>
   </choice>
  </rule>
  <rule first="{EXTERN, MUTABLE, STATIC, THREAD_LOCAL}" name="StorageClassSpecifier">
   <switch first="{EXTERN, MUTABLE, STATIC, THREAD_LOCAL}">
    <case first="{STATIC}">
     <action first="{STATIC}">
      <token first="{STATIC}" name="STATIC"/>
     </action>
    </case>
    <case first="{THREAD_LOCAL}">
     <action first="{THREAD_LOCAL}">
      <token first="{THREAD_LOCAL}" name="THREAD_LOCAL"/>
     </action>
    </case>
    <case first="{EXTERN}">
     <action first="{EXTERN}">
      <token first="{EXTERN}" name="EXTERN"/>
     </action>
    </case>
    <case first="{MUTABLE}">
     <action first="{MUTABLE}">
      <token first="{MUTABLE}" name="MUTABLE"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{EXPLICIT, VIRTUAL}" name="FunctionSpecifier">
   <switch first="{EXPLICIT, VIRTUAL}">
    <case first="{VIRTUAL}">
     <action first="{VIRTUAL}">
      <token first="{VIRTUAL}" name="VIRTUAL"/>
     </action>
    </case>
    <case first="{EXPLICIT}">
     <action first="{EXPLICIT}">
      <nonterminal first="{EXPLICIT}" ruleName="ExplicitSpecifier"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{EXPLICIT}" name="ExplicitSpecifier">
   <group first="{EXPLICIT}">
    <choice first="{EXPLICIT}">
     <sequence first="{EXPLICIT}">
      <sequence first="{EXPLICIT}">
       <sequence first="{EXPLICIT}">
        <action first="{EXPLICIT}">
         <token first="{EXPLICIT}" name="EXPLICIT"/>
        </action>
        <action first="{LPAREN}">
         <token first="{LPAREN}" name="LPAREN"/>
        </action>
       </sequence>
       <nonterminal first="{#, ALIGNOF, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DOUBLE, DYNAMIC_CAST, FALSE, FLOAT, INT, LONG, NEW, NOEXCEPT, NULLPTR, OPERATOR, REINTERPRET_CAST, REQUIRES, SHORT, SIGNED, SIZEOF, STATIC_CAST, TEMPLATE, THIS, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, FLOATING_LITERAL, INTEGER_LITERAL, CHARACTER_LITERAL, STRING_LITERAL, BEGIN_RAW_STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, ADD_ASSIGN, SUB_ASSIGN, SHIFT_RIGHT_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, QUEST, OR_OR, AMP_AMP, OR, XOR, AMP, EQ, NEQ, LEQ, GEQ, SPACE_SHIP, LANGLE, RANGLE, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, MOD, DOT_STAR, ARROW_STAR, LPAREN, RPAREN, PLUS_PLUS, MINUS_MINUS, EXCLAMATION, TILDE, LBRACKET, LBRACE, DOT, ARROW, ELLIPSIS}" ruleName="ConstantExpression"/>
      </sequence>
      <action first="{RPAREN}">
       <token first="{RPAREN}" name="RPAREN"/>
      </action>
     </sequence>
     <action first="{EXPLICIT}">
      <token first="{EXPLICIT}" name="EXPLICIT"/>
     </action>
    </choice>
   </group>
  </rule>
  <rule first="{#, ALIGNAS, CONST, OPERATOR, REQUIRES, TEMPLATE, VOLATILE, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, LBRACE, ARROW, ELLIPSIS}" name="InitDeclaratorList">
   <action first="{#, ALIGNAS, CONST, OPERATOR, REQUIRES, TEMPLATE, VOLATILE, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, LBRACE, ARROW, ELLIPSIS}">
    <group first="{#, ALIGNAS, CONST, OPERATOR, REQUIRES, TEMPLATE, VOLATILE, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, LBRACE, ARROW, ELLIPSIS}">
     <sequence first="{#, ALIGNAS, CONST, OPERATOR, REQUIRES, TEMPLATE, VOLATILE, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, LBRACE, ARROW, ELLIPSIS}">
      <action first="{#, ALIGNAS, CONST, OPERATOR, REQUIRES, TEMPLATE, VOLATILE, ID, COLON_COLON, ASSIGN, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, LBRACE, ARROW, ELLIPSIS}">
       <nonterminal first="{#, ALIGNAS, CONST, OPERATOR, REQUIRES, TEMPLATE, VOLATILE, ID, COLON_COLON, ASSIGN, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, LBRACE, ARROW, ELLIPSIS}" ruleName="InitDeclarator"/>
      </action>
      <kleene first="{#, COMMA}">
       <group first="{COMMA}">
        <sequence first="{COMMA}">
         <action first="{COMMA}">
          <nonterminal first="{COMMA}" ruleName="Comma"/>
         </action>
         <action first="{#, ALIGNAS, CONST, OPERATOR, REQUIRES, TEMPLATE, VOLATILE, ID, COLON_COLON, ASSIGN, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, LBRACE, ARROW, ELLIPSIS}">
          <nonterminal first="{#, ALIGNAS, CONST, OPERATOR, REQUIRES, TEMPLATE, VOLATILE, ID, COLON_COLON, ASSIGN, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, LBRACE, ARROW, ELLIPSIS}" ruleName="InitDeclarator"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, ALIGNAS, CONST, OPERATOR, REQUIRES, TEMPLATE, VOLATILE, ID, COLON_COLON, ASSIGN, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, LBRACE, ARROW, ELLIPSIS}" name="InitDeclarator">
   <group first="{#, ALIGNAS, CONST, OPERATOR, REQUIRES, TEMPLATE, VOLATILE, ID, COLON_COLON, ASSIGN, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, LBRACE, ARROW, ELLIPSIS}">
    <sequence first="{#, ALIGNAS, CONST, OPERATOR, REQUIRES, TEMPLATE, VOLATILE, ID, COLON_COLON, ASSIGN, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, LBRACE, ARROW, ELLIPSIS}">
     <action first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
      <nonterminal first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}" ruleName="Declarator"/>
     </action>
     <group first="{#, REQUIRES, ASSIGN, LPAREN, LBRACE}">
      <choice first="{#, REQUIRES, ASSIGN, LPAREN, LBRACE}">
       <switch first="{REQUIRES, ASSIGN, LPAREN, LBRACE}">
        <case first="{REQUIRES}">
         <action first="{REQUIRES}">
          <nonterminal first="{REQUIRES}" ruleName="RequiresClause"/>
         </action>
        </case>
        <case first="{ASSIGN, LPAREN, LBRACE}">
         <action first="{ASSIGN, LPAREN, LBRACE}">
          <nonterminal first="{ASSIGN, LPAREN, LBRACE}" ruleName="Initializer"/>
         </action>
        </case>
       </switch>
       <action first="{#}">
        <empty first="{#}"/>
       </action>
      </choice>
     </group>
    </sequence>
   </group>
  </rule>
  <rule first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}" name="DeclaratorPushClassScope">
   <group first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
    <sequence first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
     <action first="{#}">
      <empty first="{#}"/>
     </action>
     <action first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
      <nonterminal first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}" ruleName="Declarator"/>
     </action>
    </sequence>
   </group>
  </rule>
  <rule first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}" name="Declarator">
   <group first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
    <choice first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
     <action first="{#, ALIGNAS, OPERATOR, TEMPLATE, ID, COLON_COLON, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
      <group first="{#, ALIGNAS, OPERATOR, TEMPLATE, ID, COLON_COLON, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
       <sequence first="{#, ALIGNAS, OPERATOR, TEMPLATE, ID, COLON_COLON, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}">
        <sequence first="{#, ALIGNAS, OPERATOR, TEMPLATE, ID, COLON_COLON, LPAREN, TILDE, LBRACKET, ELLIPSIS}">
         <action first="{#, ALIGNAS, OPERATOR, TEMPLATE, ID, COLON_COLON, LPAREN, TILDE, LBRACKET, ELLIPSIS}">
          <nonterminal first="{#, ALIGNAS, OPERATOR, TEMPLATE, ID, COLON_COLON, LPAREN, TILDE, LBRACKET, ELLIPSIS}" ruleName="NoPtrDeclarator"/>
         </action>
         <nonterminal first="{LPAREN}" ruleName="ParametersAndQualifiers"/>
        </sequence>
        <nonterminal first="{ARROW}" ruleName="TrailingReturnType"/>
       </sequence>
      </group>
     </action>
     <action first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ELLIPSIS}">
      <group first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ELLIPSIS}">
       <nonterminal first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ELLIPSIS}" ruleName="PtrDeclarator"/>
      </group>
     </action>
    </choice>
   </group>
  </rule>
  <rule first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ELLIPSIS}" name="PtrDeclarator">
   <choice first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ELLIPSIS}">
    <group first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ELLIPSIS}">
     <sequence first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ELLIPSIS}">
      <sequence first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}">
       <action first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}">
        <nonterminal first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}" ruleName="PtrOperator"/>
       </action>
       <kleene first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}">
        <group first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}">
         <action first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}">
          <nonterminal first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}" ruleName="PtrOperator"/>
         </action>
        </group>
       </kleene>
      </sequence>
      <action first="{#, ALIGNAS, OPERATOR, TEMPLATE, ID, COLON_COLON, LPAREN, TILDE, LBRACKET, ELLIPSIS}">
       <nonterminal first="{#, ALIGNAS, OPERATOR, TEMPLATE, ID, COLON_COLON, LPAREN, TILDE, LBRACKET, ELLIPSIS}" ruleName="NoPtrDeclarator"/>
      </action>
     </sequence>
    </group>
    <action first="{#, ALIGNAS, OPERATOR, TEMPLATE, ID, COLON_COLON, LPAREN, TILDE, LBRACKET, ELLIPSIS}">
     <nonterminal first="{#, ALIGNAS, OPERATOR, TEMPLATE, ID, COLON_COLON, LPAREN, TILDE, LBRACKET, ELLIPSIS}" ruleName="NoPtrDeclarator"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, ALIGNAS, OPERATOR, TEMPLATE, ID, COLON_COLON, LPAREN, TILDE, LBRACKET, ELLIPSIS}" name="NoPtrDeclarator">
   <action first="{#, ALIGNAS, OPERATOR, TEMPLATE, ID, COLON_COLON, LPAREN, TILDE, LBRACKET, ELLIPSIS}">
    <group first="{#, ALIGNAS, OPERATOR, TEMPLATE, ID, COLON_COLON, LPAREN, TILDE, LBRACKET, ELLIPSIS}">
     <sequence first="{#, ALIGNAS, OPERATOR, TEMPLATE, ID, COLON_COLON, LPAREN, TILDE, LBRACKET, ELLIPSIS}">
      <group first="{#, ALIGNAS, OPERATOR, TEMPLATE, ID, COLON_COLON, LPAREN, TILDE, LBRACKET, ELLIPSIS}">
       <choice first="{#, ALIGNAS, OPERATOR, TEMPLATE, ID, COLON_COLON, LPAREN, TILDE, LBRACKET, ELLIPSIS}">
        <choice first="{#, ALIGNAS, OPERATOR, TEMPLATE, ID, COLON_COLON, LPAREN, TILDE, LBRACKET, ELLIPSIS}">
         <sequence first="{LPAREN}">
          <sequence first="{LPAREN}">
           <action first="{LPAREN}">
            <token first="{LPAREN}" name="LPAREN"/>
           </action>
           <nonterminal first="{#, ALIGNAS, CONST, OPERATOR, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, TILDE, LBRACKET, ELLIPSIS}" ruleName="PtrDeclarator"/>
          </sequence>
          <action first="{RPAREN}">
           <token first="{RPAREN}" name="RPAREN"/>
          </action>
         </sequence>
         <sequence first="{#, ALIGNAS, OPERATOR, TEMPLATE, ID, COLON_COLON, TILDE, LBRACKET, ELLIPSIS}">
          <action first="{#, OPERATOR, TEMPLATE, ID, COLON_COLON, TILDE, ELLIPSIS}">
           <nonterminal first="{#, OPERATOR, TEMPLATE, ID, COLON_COLON, TILDE, ELLIPSIS}" ruleName="DeclaratorId"/>
          </action>
          <action first="{ALIGNAS, LBRACKET}">
           <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
          </action>
         </sequence>
        </choice>
        <action first="{#, OPERATOR, TEMPLATE, ID, COLON_COLON, TILDE, ELLIPSIS}">
         <nonterminal first="{#, OPERATOR, TEMPLATE, ID, COLON_COLON, TILDE, ELLIPSIS}" ruleName="DeclaratorId"/>
        </action>
       </choice>
      </group>
      <kleene first="{#, LPAREN, LBRACKET}">
       <group first="{LPAREN, LBRACKET}">
        <switch first="{LPAREN, LBRACKET}">
         <case first="{LBRACKET}">
          <sequence first="{LBRACKET}">
           <sequence first="{LBRACKET}">
            <sequence first="{LBRACKET}">
             <action first="{LBRACKET}">
              <token first="{LBRACKET}" name="LBRACKET"/>
             </action>
             <optional first="{#, ALIGNOF, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DOUBLE, DYNAMIC_CAST, FALSE, FLOAT, INT, LONG, NEW, NOEXCEPT, NULLPTR, OPERATOR, REINTERPRET_CAST, REQUIRES, SHORT, SIGNED, SIZEOF, STATIC_CAST, TEMPLATE, THIS, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, FLOATING_LITERAL, INTEGER_LITERAL, CHARACTER_LITERAL, STRING_LITERAL, BEGIN_RAW_STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, ADD_ASSIGN, SUB_ASSIGN, SHIFT_RIGHT_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, QUEST, OR_OR, AMP_AMP, OR, XOR, AMP, EQ, NEQ, LEQ, GEQ, SPACE_SHIP, LANGLE, RANGLE, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, MOD, DOT_STAR, ARROW_STAR, LPAREN, RPAREN, PLUS_PLUS, MINUS_MINUS, EXCLAMATION, TILDE, LBRACKET, LBRACE, DOT, ARROW, ELLIPSIS}">
              <nonterminal first="{#, ALIGNOF, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DOUBLE, DYNAMIC_CAST, FALSE, FLOAT, INT, LONG, NEW, NOEXCEPT, NULLPTR, OPERATOR, REINTERPRET_CAST, REQUIRES, SHORT, SIGNED, SIZEOF, STATIC_CAST, TEMPLATE, THIS, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, FLOATING_LITERAL, INTEGER_LITERAL, CHARACTER_LITERAL, STRING_LITERAL, BEGIN_RAW_STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, ADD_ASSIGN, SUB_ASSIGN, SHIFT_RIGHT_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, QUEST, OR_OR, AMP_AMP, OR, XOR, AMP, EQ, NEQ, LEQ, GEQ, SPACE_SHIP, LANGLE, RANGLE, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, MOD, DOT_STAR, ARROW_STAR, LPAREN, RPAREN, PLUS_PLUS, MINUS_MINUS, EXCLAMATION, TILDE, LBRACKET, LBRACE, DOT, ARROW, ELLIPSIS}" ruleName="ConstantExpression"/>
             </optional>
            </sequence>
            <action first="{RBRACKET}">
             <token first="{RBRACKET}" name="RBRACKET"/>
            </action>
           </sequence>
           <group first="{#, ALIGNAS, LBRACKET}">
            <choice first="{#, ALIGNAS, LBRACKET}">
             <action first="{ALIGNAS, LBRACKET}">
              <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
             </action>
             <empty first="{#}"/>
            </choice>
           </group>
          </sequence>
         </case>
         <case first="{LPAREN}">
          <action first="{LPAREN}">
           <nonterminal first="{LPAREN}" ruleName="ParametersAndQualifiers"/>
          </action>
         </case>
        </switch>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{LPAREN}" name="ParametersAndQualifiers">
   <action first="{LPAREN}">
    <group first="{LPAREN}">
     <sequence first="{LPAREN}">
      <sequence first="{LPAREN}">
       <sequence first="{LPAREN}">
        <sequence first="{LPAREN}">
         <sequence first="{LPAREN}">
          <sequence first="{LPAREN}">
           <sequence first="{LPAREN}">
            <action first="{LPAREN}">
             <token first="{LPAREN}" name="LPAREN"/>
            </action>
            <nonterminal first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, INLINE, INT, LONG, MUTABLE, OPERATOR, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, COMMA, ASSIGN, AMP_AMP, AMP, LANGLE, STAR, LPAREN, TILDE, LBRACKET, ARROW, ELLIPSIS}" ruleName="ParameterDeclarationClause"/>
           </sequence>
           <action first="{RPAREN}">
            <token first="{RPAREN}" name="RPAREN"/>
           </action>
          </sequence>
          <optional first="{#, CONST, VOLATILE}">
           <group first="{CONST, VOLATILE}">
            <action first="{CONST, VOLATILE}">
             <nonterminal first="{CONST, VOLATILE}" ruleName="CVQualifierSeq"/>
            </action>
           </group>
          </optional>
         </sequence>
         <optional first="{#, AMP_AMP, AMP}">
          <group first="{AMP_AMP, AMP}">
           <action first="{AMP_AMP, AMP}">
            <nonterminal first="{AMP_AMP, AMP}" ruleName="RefQualifier"/>
           </action>
          </group>
         </optional>
        </sequence>
        <optional first="{#, NOEXCEPT}">
         <group first="{NOEXCEPT}">
          <action first="{NOEXCEPT}">
           <nonterminal first="{NOEXCEPT}" ruleName="NoexceptSpecifier"/>
          </action>
         </group>
        </optional>
       </sequence>
       <optional first="{#, THROW}">
        <group first="{THROW}">
         <action first="{THROW}">
          <nonterminal first="{THROW}" ruleName="ThrowSpecifier"/>
         </action>
        </group>
       </optional>
      </sequence>
      <optional first="{#, ALIGNAS, LBRACKET}">
       <group first="{ALIGNAS, LBRACKET}">
        <action first="{ALIGNAS, LBRACKET}">
         <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
        </action>
       </group>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{ARROW}" name="TrailingReturnType">
   <action first="{ARROW}">
    <group first="{ARROW}">
     <sequence first="{ARROW}">
      <action first="{ARROW}">
       <token first="{ARROW}" name="ARROW"/>
      </action>
      <nonterminal first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, INT, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, ID, COLON_COLON, AMP_AMP, AMP, LANGLE, STAR, LPAREN, LBRACKET, ARROW, ELLIPSIS}" ruleName="TypeId"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}" name="PtrOperator">
   <action first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}">
    <group first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}">
     <choice first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}">
      <choice first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP, STAR, LBRACKET}">
       <choice first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, STAR, LBRACKET}">
        <sequence first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, STAR, LBRACKET}">
         <sequence first="{#, ALIGNAS, TEMPLATE, ID, COLON_COLON, STAR, LBRACKET}">
          <action first="{#, TEMPLATE, ID, COLON_COLON, STAR}">
           <group first="{#, TEMPLATE, ID, COLON_COLON, STAR}">
            <sequence first="{#, TEMPLATE, ID, COLON_COLON, STAR}">
             <action first="{#, TEMPLATE, ID, COLON_COLON}">
              <nonterminal first="{#, TEMPLATE, ID, COLON_COLON}" ruleName="NestedNameSpecifier"/>
             </action>
             <nonterminal first="{STAR}" ruleName="Ptr"/>
            </sequence>
           </group>
          </action>
          <optional first="{#, ALIGNAS, LBRACKET}">
           <group first="{ALIGNAS, LBRACKET}">
            <action first="{ALIGNAS, LBRACKET}">
             <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
            </action>
           </group>
          </optional>
         </sequence>
         <optional first="{#, CONST, VOLATILE}">
          <group first="{CONST, VOLATILE}">
           <action first="{CONST, VOLATILE}">
            <nonterminal first="{CONST, VOLATILE}" ruleName="CVQualifierSeq"/>
           </action>
          </group>
         </optional>
        </sequence>
        <sequence first="{STAR}">
         <sequence first="{STAR}">
          <action first="{STAR}">
           <nonterminal first="{STAR}" ruleName="Ptr"/>
          </action>
          <optional first="{#, ALIGNAS, LBRACKET}">
           <group first="{ALIGNAS, LBRACKET}">
            <action first="{ALIGNAS, LBRACKET}">
             <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
            </action>
           </group>
          </optional>
         </sequence>
         <optional first="{#, CONST, VOLATILE}">
          <group first="{CONST, VOLATILE}">
           <action first="{CONST, VOLATILE}">
            <nonterminal first="{CONST, VOLATILE}" ruleName="CVQualifierSeq"/>
           </action>
          </group>
         </optional>
        </sequence>
       </choice>
       <sequence first="{AMP}">
        <action first="{AMP}">
         <nonterminal first="{AMP}" ruleName="LvalueRef"/>
        </action>
        <optional first="{#, ALIGNAS, LBRACKET}">
         <group first="{ALIGNAS, LBRACKET}">
          <action first="{ALIGNAS, LBRACKET}">
           <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
          </action>
         </group>
        </optional>
       </sequence>
      </choice>
      <sequence first="{AMP_AMP}">
       <action first="{AMP_AMP}">
        <nonterminal first="{AMP_AMP}" ruleName="RvalueRef"/>
       </action>
       <optional first="{#, ALIGNAS, LBRACKET}">
        <group first="{ALIGNAS, LBRACKET}">
         <action first="{ALIGNAS, LBRACKET}">
          <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
         </action>
        </group>
       </optional>
      </sequence>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, LBRACKET, ARROW, ELLIPSIS}" name="AbstractDeclarator">
   <group first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, LBRACKET, ARROW, ELLIPSIS}">
    <choice first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, LBRACKET, ARROW, ELLIPSIS}">
     <choice first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, LBRACKET, ARROW}">
      <sequence first="{#, LPAREN, LBRACKET, ARROW}">
       <sequence first="{#, LPAREN, LBRACKET}">
        <action first="{#, LPAREN, LBRACKET}">
         <nonterminal first="{#, LPAREN, LBRACKET}" ruleName="NoPtrAbstractDeclarator"/>
        </action>
        <nonterminal first="{LPAREN}" ruleName="ParametersAndQualifiers"/>
       </sequence>
       <action first="{ARROW}">
        <nonterminal first="{ARROW}" ruleName="TrailingReturnType"/>
       </action>
      </sequence>
      <action first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, LBRACKET}">
       <nonterminal first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, LBRACKET}" ruleName="PtrAbstractDeclarator"/>
      </action>
     </choice>
     <action first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET, ELLIPSIS}">
      <nonterminal first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET, ELLIPSIS}" ruleName="AbstractPackDeclarator"/>
     </action>
    </choice>
   </group>
  </rule>
  <rule first="{#, LPAREN, LBRACKET}" name="NoPtrAbstractDeclarator">
   <action first="{#, LPAREN, LBRACKET}">
    <group first="{#, LPAREN, LBRACKET}">
     <sequence first="{#, LPAREN, LBRACKET}">
      <group first="{#, LPAREN}">
       <choice first="{#, LPAREN}">
        <sequence first="{LPAREN}">
         <sequence first="{LPAREN}">
          <action first="{LPAREN}">
           <token first="{LPAREN}" name="LPAREN"/>
          </action>
          <nonterminal first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, LBRACKET}" ruleName="PtrAbstractDeclarator"/>
         </sequence>
         <action first="{RPAREN}">
          <token first="{RPAREN}" name="RPAREN"/>
         </action>
        </sequence>
        <action first="{#}">
         <empty first="{#}"/>
        </action>
       </choice>
      </group>
      <kleene first="{#, LPAREN, LBRACKET}">
       <group first="{LPAREN, LBRACKET}">
        <switch first="{LPAREN, LBRACKET}">
         <case first="{LBRACKET}">
          <sequence first="{LBRACKET}">
           <sequence first="{LBRACKET}">
            <sequence first="{LBRACKET}">
             <action first="{LBRACKET}">
              <token first="{LBRACKET}" name="LBRACKET"/>
             </action>
             <optional first="{#, ALIGNOF, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DOUBLE, DYNAMIC_CAST, FALSE, FLOAT, INT, LONG, NEW, NOEXCEPT, NULLPTR, OPERATOR, REINTERPRET_CAST, REQUIRES, SHORT, SIGNED, SIZEOF, STATIC_CAST, TEMPLATE, THIS, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, FLOATING_LITERAL, INTEGER_LITERAL, CHARACTER_LITERAL, STRING_LITERAL, BEGIN_RAW_STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, ADD_ASSIGN, SUB_ASSIGN, SHIFT_RIGHT_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, QUEST, OR_OR, AMP_AMP, OR, XOR, AMP, EQ, NEQ, LEQ, GEQ, SPACE_SHIP, LANGLE, RANGLE, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, MOD, DOT_STAR, ARROW_STAR, LPAREN, RPAREN, PLUS_PLUS, MINUS_MINUS, EXCLAMATION, TILDE, LBRACKET, LBRACE, DOT, ARROW, ELLIPSIS}">
              <nonterminal first="{#, ALIGNOF, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DOUBLE, DYNAMIC_CAST, FALSE, FLOAT, INT, LONG, NEW, NOEXCEPT, NULLPTR, OPERATOR, REINTERPRET_CAST, REQUIRES, SHORT, SIGNED, SIZEOF, STATIC_CAST, TEMPLATE, THIS, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, FLOATING_LITERAL, INTEGER_LITERAL, CHARACTER_LITERAL, STRING_LITERAL, BEGIN_RAW_STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, ADD_ASSIGN, SUB_ASSIGN, SHIFT_RIGHT_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, QUEST, OR_OR, AMP_AMP, OR, XOR, AMP, EQ, NEQ, LEQ, GEQ, SPACE_SHIP, LANGLE, RANGLE, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, MOD, DOT_STAR, ARROW_STAR, LPAREN, RPAREN, PLUS_PLUS, MINUS_MINUS, EXCLAMATION, TILDE, LBRACKET, LBRACE, DOT, ARROW, ELLIPSIS}" ruleName="ConstantExpression"/>
             </optional>
            </sequence>
            <action first="{RBRACKET}">
             <token first="{RBRACKET}" name="RBRACKET"/>
            </action>
           </sequence>
           <group first="{#, ALIGNAS, LBRACKET}">
            <choice first="{#, ALIGNAS, LBRACKET}">
             <action first="{ALIGNAS, LBRACKET}">
              <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
             </action>
             <empty first="{#}"/>
            </choice>
           </group>
          </sequence>
         </case>
         <case first="{LPAREN}">
          <action first="{LPAREN}">
           <nonterminal first="{LPAREN}" ruleName="ParametersAndQualifiers"/>
          </action>
         </case>
        </switch>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, LBRACKET}" name="PtrAbstractDeclarator">
   <action first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, LBRACKET}">
    <group first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, LBRACKET}">
     <choice first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, LBRACKET}">
      <sequence first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LPAREN, LBRACKET}">
       <sequence first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}">
        <action first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}">
         <nonterminal first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}" ruleName="PtrOperator"/>
        </action>
        <kleene first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}">
         <group first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}">
          <action first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}">
           <nonterminal first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}" ruleName="PtrOperator"/>
          </action>
         </group>
        </kleene>
       </sequence>
       <group first="{#, LPAREN, LBRACKET}">
        <choice first="{#, LPAREN, LBRACKET}">
         <action first="{#, LPAREN, LBRACKET}">
          <nonterminal first="{#, LPAREN, LBRACKET}" ruleName="NoPtrAbstractDeclarator"/>
         </action>
         <empty first="{#}"/>
        </choice>
       </group>
      </sequence>
      <action first="{#, LPAREN, LBRACKET}">
       <nonterminal first="{#, LPAREN, LBRACKET}" ruleName="NoPtrAbstractDeclarator"/>
      </action>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET, ELLIPSIS}" name="AbstractPackDeclarator">
   <group first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET, ELLIPSIS}">
    <choice first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET, ELLIPSIS}">
     <action first="{ELLIPSIS}">
      <nonterminal first="{ELLIPSIS}" ruleName="NoPtrAbstractPackDeclarator"/>
     </action>
     <sequence first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET, ELLIPSIS}">
      <sequence first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}">
       <action first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}">
        <nonterminal first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}" ruleName="PtrOperator"/>
       </action>
       <kleene first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}">
        <group first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}">
         <action first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}">
          <nonterminal first="{#, ALIGNAS, CONST, TEMPLATE, VOLATILE, ID, COLON_COLON, AMP_AMP, AMP, STAR, LBRACKET}" ruleName="PtrOperator"/>
         </action>
        </group>
       </kleene>
      </sequence>
      <action first="{ELLIPSIS}">
       <nonterminal first="{ELLIPSIS}" ruleName="NoPtrAbstractPackDeclarator"/>
      </action>
     </sequence>
    </choice>
   </group>
  </rule>
  <rule first="{ELLIPSIS}" name="NoPtrAbstractPackDeclarator">
   <action first="{ELLIPSIS}">
    <group first="{ELLIPSIS}">
     <sequence first="{ELLIPSIS}">
      <action first="{ELLIPSIS}">
       <nonterminal first="{ELLIPSIS}" ruleName="Ellipsis"/>
      </action>
      <kleene first="{#, LPAREN, LBRACKET}">
       <group first="{LPAREN, LBRACKET}">
        <switch first="{LPAREN, LBRACKET}">
         <case first="{LPAREN}">
          <action first="{LPAREN}">
           <nonterminal first="{LPAREN}" ruleName="ParametersAndQualifiers"/>
          </action>
         </case>
         <case first="{LBRACKET}">
          <sequence first="{LBRACKET}">
           <sequence first="{LBRACKET}">
            <action first="{LBRACKET}">
             <token first="{LBRACKET}" name="LBRACKET"/>
            </action>
            <optional first="{#, ALIGNOF, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DOUBLE, DYNAMIC_CAST, FALSE, FLOAT, INT, LONG, NEW, NOEXCEPT, NULLPTR, OPERATOR, REINTERPRET_CAST, REQUIRES, SHORT, SIGNED, SIZEOF, STATIC_CAST, TEMPLATE, THIS, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, FLOATING_LITERAL, INTEGER_LITERAL, CHARACTER_LITERAL, STRING_LITERAL, BEGIN_RAW_STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, ADD_ASSIGN, SUB_ASSIGN, SHIFT_RIGHT_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, QUEST, OR_OR, AMP_AMP, OR, XOR, AMP, EQ, NEQ, LEQ, GEQ, SPACE_SHIP, LANGLE, RANGLE, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, MOD, DOT_STAR, ARROW_STAR, LPAREN, RPAREN, PLUS_PLUS, MINUS_MINUS, EXCLAMATION, TILDE, LBRACKET, LBRACE, DOT, ARROW, ELLIPSIS}">
             <nonterminal first="{#, ALIGNOF, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DOUBLE, DYNAMIC_CAST, FALSE, FLOAT, INT, LONG, NEW, NOEXCEPT, NULLPTR, OPERATOR, REINTERPRET_CAST, REQUIRES, SHORT, SIGNED, SIZEOF, STATIC_CAST, TEMPLATE, THIS, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, FLOATING_LITERAL, INTEGER_LITERAL, CHARACTER_LITERAL, STRING_LITERAL, BEGIN_RAW_STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, ADD_ASSIGN, SUB_ASSIGN, SHIFT_RIGHT_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, QUEST, OR_OR, AMP_AMP, OR, XOR, AMP, EQ, NEQ, LEQ, GEQ, SPACE_SHIP, LANGLE, RANGLE, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, MOD, DOT_STAR, ARROW_STAR, LPAREN, RPAREN, PLUS_PLUS, MINUS_MINUS, EXCLAMATION, TILDE, LBRACKET, LBRACE, DOT, ARROW, ELLIPSIS}" ruleName="ConstantExpression"/>
            </optional>
           </sequence>
           <action first="{RBRACKET}">
            <token first="{RBRACKET}" name="RBRACKET"/>
           </action>
          </sequence>
         </case>
        </switch>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, OPERATOR, TEMPLATE, ID, COLON_COLON, TILDE, ELLIPSIS}" name="DeclaratorId">
   <group first="{#, OPERATOR, TEMPLATE, ID, COLON_COLON, TILDE, ELLIPSIS}">
    <choice first="{#, OPERATOR, TEMPLATE, ID, COLON_COLON, TILDE, ELLIPSIS}">
     <sequence first="{ELLIPSIS}">
      <action first="{ELLIPSIS}">
       <nonterminal first="{ELLIPSIS}" ruleName="Ellipsis"/>
      </action>
      <action first="{#, OPERATOR, TEMPLATE, ID, COLON_COLON, TILDE}">
       <nonterminal first="{#, OPERATOR, TEMPLATE, ID, COLON_COLON, TILDE}" ruleName="IdExpression"/>
      </action>
     </sequence>
     <action first="{#, OPERATOR, TEMPLATE, ID, COLON_COLON, TILDE}">
      <nonterminal first="{#, OPERATOR, TEMPLATE, ID, COLON_COLON, TILDE}" ruleName="IdExpression"/>
     </action>
    </choice>
   </group>
  </rule>
  <rule first="{STAR}" name="Ptr">
   <action first="{STAR}">
    <token first="{STAR}" name="STAR"/>
   </action>
  </rule>
  <rule first="{AMP}" name="LvalueRef">
   <action first="{AMP}">
    <token first="{AMP}" name="AMP"/>
   </action>
  </rule>
  <rule first="{AMP_AMP}" name="RvalueRef">
   <action first="{AMP_AMP}">
    <token first="{AMP_AMP}" name="AMP_AMP"/>
   </action>
  </rule>
  <rule first="{AMP_AMP, AMP}" name="RefQualifier">
   <switch first="{AMP_AMP, AMP}">
    <case first="{AMP_AMP}">
     <action first="{AMP_AMP}">
      <nonterminal first="{AMP_AMP}" ruleName="RvalueRef"/>
     </action>
    </case>
    <case first="{AMP}">
     <action first="{AMP}">
      <nonterminal first="{AMP}" ruleName="LvalueRef"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{CONST, VOLATILE}" name="CVQualifierSeq">
   <action first="{CONST, VOLATILE}">
    <group first="{CONST, VOLATILE}">
     <sequence first="{CONST, VOLATILE}">
      <action first="{CONST, VOLATILE}">
       <nonterminal first="{CONST, VOLATILE}" ruleName="CVQualifier"/>
      </action>
      <kleene first="{#, CONST, VOLATILE}">
       <group first="{CONST, VOLATILE}">
        <action first="{CONST, VOLATILE}">
         <nonterminal first="{CONST, VOLATILE}" ruleName="CVQualifier"/>
        </action>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{CONST, VOLATILE}" name="CVQualifier">
   <switch first="{CONST, VOLATILE}">
    <case first="{CONST}">
     <action first="{CONST}">
      <token first="{CONST}" name="CONST"/>
     </action>
    </case>
    <case first="{VOLATILE}">
     <action first="{VOLATILE}">
      <token first="{VOLATILE}" name="VOLATILE"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{NOEXCEPT}" name="NoexceptSpecifier">
   <action first="{NOEXCEPT}">
    <group first="{NOEXCEPT}">
     <choice first="{NOEXCEPT}">
      <sequence first="{NOEXCEPT}">
       <sequence first="{NOEXCEPT}">
        <sequence first="{NOEXCEPT}">
         <action first="{NOEXCEPT}">
          <token first="{NOEXCEPT}" name="NOEXCEPT"/>
         </action>
         <action first="{LPAREN}">
          <token first="{LPAREN}" name="LPAREN"/>
         </action>
        </sequence>
        <nonterminal first="{#, ALIGNOF, AUTO, BOOL, CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DOUBLE, DYNAMIC_CAST, FALSE, FLOAT, INT, LONG, NEW, NOEXCEPT, NULLPTR, OPERATOR, REINTERPRET_CAST, REQUIRES, SHORT, SIGNED, SIZEOF, STATIC_CAST, TEMPLATE, THIS, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, FLOATING_LITERAL, INTEGER_LITERAL, CHARACTER_LITERAL, STRING_LITERAL, BEGIN_RAW_STRING_LITERAL, ID, COLON_COLON, COMMA, ASSIGN, MUL_ASSIGN, DIV_ASSIGN, REM_ASSIGN, ADD_ASSIGN, SUB_ASSIGN, SHIFT_RIGHT_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, XOR_ASSIGN, OR_ASSIGN, QUEST, OR_OR, AMP_AMP, OR, XOR, AMP, EQ, NEQ, LEQ, GEQ, SPACE_SHIP, LANGLE, RANGLE, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, STAR, DIV, MOD, DOT_STAR, ARROW_STAR, LPAREN, RPAREN, PLUS_PLUS, MINUS_MINUS, EXCLAMATION, TILDE, LBRACKET, LBRACE, DOT, ARROW, ELLIPSIS}" ruleName="ConstantExpression"/>
       </sequence>
       <action first="{RPAREN}">
        <token first="{RPAREN}" name="RPAREN"/>
       </action>
      </sequence>
      <action first="{NOEXCEPT}">
       <token first="{NOEXCEPT}" name="NOEXCEPT"/>
      </action>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{THROW}" name="ThrowSpecifier">
   <action first="{THROW}">
    <group first="{THROW}">
     <sequence first="{THROW}">
      <sequence first="{THROW}">
       <action first="{THROW}">
        <token first="{THROW}" name="THROW"/>
       </action>
       <action first="{LPAREN}">
        <token first="{LPAREN}" name="LPAREN"/>
       </action>
      </sequence>
      <action first="{RPAREN}">
       <token first="{RPAREN}" name="RPAREN"/>
      </action>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{ALIGNAS, LBRACKET}" name="AttributeDeclaration">
   <action first="{ALIGNAS, LBRACKET}">
    <group first="{ALIGNAS, LBRACKET}">
     <sequence first="{ALIGNAS, LBRACKET}">
      <action first="{ALIGNAS, LBRACKET}">
       <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
      </action>
      <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
     </sequence>
    </group>
   </action>
  </rule>
 </grammar>
</parserFile>
