<parserFile>
 <grammar name="TemplateParser">
  <rule first="{TEMPLATE}" name="TemplateDeclaration">
   <sequence first="{TEMPLATE}">
    <action first="{TEMPLATE}">
     <nonterminal first="{TEMPLATE}" ruleName="TemplateHead"/>
    </action>
    <group first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON, COLON_COLON, COMMA, CONCEPT, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACE, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
     <choice first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON, COLON_COLON, COMMA, CONCEPT, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACE, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
      <choice first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON, COLON_COLON, COMMA, CONCEPT, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACE, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
       <action first="{CONCEPT}">
        <nonterminal first="{CONCEPT}" ruleName="ConceptDefinition"/>
       </action>
       <action first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACE, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
        <nonterminal first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACE, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}" ruleName="Declaration"/>
       </action>
      </choice>
      <action first="{#}">
       <empty first="{#}"/>
      </action>
     </choice>
    </group>
   </sequence>
  </rule>
  <rule first="{TEMPLATE}" name="TemplateHead">
   <action first="{TEMPLATE}">
    <group first="{TEMPLATE}">
     <sequence first="{TEMPLATE}">
      <sequence first="{TEMPLATE}">
       <action first="{TEMPLATE}">
        <token first="{TEMPLATE}" name="TEMPLATE"/>
       </action>
       <action first="{LANGLE}">
        <nonterminal first="{LANGLE}" ruleName="TemplateParameterList"/>
       </action>
      </sequence>
      <optional first="{#, REQUIRES}">
       <group first="{REQUIRES}">
        <action first="{REQUIRES}">
         <nonterminal first="{REQUIRES}" ruleName="RequiresClause"/>
        </action>
       </group>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{LANGLE}" name="TemplateParameterList">
   <action first="{LANGLE}">
    <group first="{LANGLE}">
     <sequence first="{LANGLE}">
      <sequence first="{LANGLE}">
       <sequence first="{LANGLE}">
        <action first="{LANGLE}">
         <token first="{LANGLE}" name="LANGLE"/>
        </action>
        <action first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
         <nonterminal first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}" ruleName="TemplateParameter"/>
        </action>
       </sequence>
       <kleene first="{#, COMMA}">
        <group first="{COMMA}">
         <sequence first="{COMMA}">
          <action first="{COMMA}">
           <nonterminal first="{COMMA}" ruleName="Comma"/>
          </action>
          <action first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
           <nonterminal first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}" ruleName="TemplateParameter"/>
          </action>
         </sequence>
        </group>
       </kleene>
      </sequence>
      <action first="{RANGLE}">
       <token first="{RANGLE}" name="RANGLE"/>
      </action>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}" name="TemplateParameter">
   <choice first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
    <action first="{#, CLASS, COLON_COLON, ELLIPSIS, ID, LANGLE, TEMPLATE, TYPENAME}">
     <nonterminal first="{#, CLASS, COLON_COLON, ELLIPSIS, ID, LANGLE, TEMPLATE, TYPENAME}" ruleName="TypeParameter"/>
    </action>
    <action first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
     <nonterminal first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}" ruleName="ParameterDeclaration"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, CLASS, COLON_COLON, ELLIPSIS, ID, LANGLE, TEMPLATE, TYPENAME}" name="TypeParameter">
   <sequence first="{#, CLASS, COLON_COLON, ELLIPSIS, ID, LANGLE, TEMPLATE, TYPENAME}">
    <optional first="{#, TEMPLATE}">
     <group first="{TEMPLATE}">
      <action first="{TEMPLATE}">
       <nonterminal first="{TEMPLATE}" ruleName="TemplateHead"/>
      </action>
     </group>
    </optional>
    <group first="{#, CLASS, COLON_COLON, ELLIPSIS, ID, LANGLE, TEMPLATE, TYPENAME}">
     <choice first="{#, CLASS, COLON_COLON, ELLIPSIS, ID, LANGLE, TEMPLATE, TYPENAME}">
      <sequence first="{CLASS, TYPENAME}">
       <action first="{CLASS, TYPENAME}">
        <nonterminal first="{CLASS, TYPENAME}" ruleName="TypeParameterKey"/>
       </action>
       <group first="{#, ELLIPSIS, ID}">
        <choice first="{#, ELLIPSIS, ID}">
         <sequence first="{ID}">
          <sequence first="{ID}">
           <nonterminal first="{ID}" ruleName="Identifier"/>
           <nonterminal first="{ASSIGN}" ruleName="Assign"/>
          </sequence>
          <group first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, OPERATOR, SHORT, SIGNED, STAR, STRUCT, TEMPLATE, TILDE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
           <choice first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, OPERATOR, SHORT, SIGNED, STAR, STRUCT, TEMPLATE, TILDE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
            <action first="{#, COLON_COLON, ID, OPERATOR, TEMPLATE, TILDE}">
             <nonterminal first="{#, COLON_COLON, ID, OPERATOR, TEMPLATE, TILDE}" ruleName="IdExpression"/>
            </action>
            <action first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, SHORT, SIGNED, STAR, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
             <nonterminal first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, SHORT, SIGNED, STAR, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}" ruleName="TypeId"/>
            </action>
           </choice>
          </group>
         </sequence>
         <action first="{#, ELLIPSIS, ID}">
          <group first="{#, ELLIPSIS, ID}">
           <sequence first="{#, ELLIPSIS, ID}">
            <optional first="{#, ELLIPSIS}">
             <nonterminal first="{ELLIPSIS}" ruleName="Ellipsis"/>
            </optional>
            <optional first="{#, ID}">
             <nonterminal first="{ID}" ruleName="Identifier"/>
            </optional>
           </sequence>
          </group>
         </action>
        </choice>
       </group>
      </sequence>
      <sequence first="{#, COLON_COLON, ELLIPSIS, ID, LANGLE, TEMPLATE}">
       <action first="{#, COLON_COLON, ID, LANGLE, TEMPLATE}">
        <nonterminal first="{#, COLON_COLON, ID, LANGLE, TEMPLATE}" ruleName="TypeConstraint"/>
       </action>
       <group first="{#, ELLIPSIS, ID}">
        <choice first="{#, ELLIPSIS, ID}">
         <sequence first="{ID}">
          <sequence first="{ID}">
           <nonterminal first="{ID}" ruleName="Identifier"/>
           <nonterminal first="{ASSIGN}" ruleName="Assign"/>
          </sequence>
          <action first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, SHORT, SIGNED, STAR, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
           <nonterminal first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, SHORT, SIGNED, STAR, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}" ruleName="TypeId"/>
          </action>
         </sequence>
         <action first="{#, ELLIPSIS, ID}">
          <group first="{#, ELLIPSIS, ID}">
           <sequence first="{#, ELLIPSIS, ID}">
            <optional first="{#, ELLIPSIS}">
             <nonterminal first="{ELLIPSIS}" ruleName="Ellipsis"/>
            </optional>
            <optional first="{#, ID}">
             <nonterminal first="{ID}" ruleName="Identifier"/>
            </optional>
           </sequence>
          </group>
         </action>
        </choice>
       </group>
      </sequence>
     </choice>
    </group>
   </sequence>
  </rule>
  <rule first="{CLASS, TYPENAME}" name="TypeParameterKey">
   <choice first="{CLASS, TYPENAME}">
    <action first="{TYPENAME}">
     <nonterminal first="{TYPENAME}" ruleName="Typename"/>
    </action>
    <action first="{CLASS}">
     <nonterminal first="{CLASS}" ruleName="Class"/>
    </action>
   </choice>
  </rule>
  <rule first="{TYPENAME}" name="Typename">
   <action first="{TYPENAME}">
    <token first="{TYPENAME}" name="TYPENAME"/>
   </action>
  </rule>
  <rule first="{CLASS}" name="Class">
   <action first="{CLASS}">
    <token first="{CLASS}" name="CLASS"/>
   </action>
  </rule>
  <rule first="{ID, OPERATOR}" name="TemplateId">
   <choice first="{ID, OPERATOR}">
    <group first="{OPERATOR}">
     <action first="{OPERATOR}">
      <group first="{OPERATOR}">
       <sequence first="{OPERATOR}">
        <sequence first="{OPERATOR}">
         <sequence first="{OPERATOR}">
          <group first="{OPERATOR}">
           <choice first="{OPERATOR}">
            <action first="{OPERATOR}">
             <nonterminal first="{OPERATOR}" ruleName="OperatorFunctionId"/>
            </action>
            <action first="{OPERATOR}">
             <nonterminal first="{OPERATOR}" ruleName="LiteralOperatorId"/>
            </action>
           </choice>
          </group>
          <action first="{LANGLE}">
           <token first="{LANGLE}" name="LANGLE"/>
          </action>
         </sequence>
         <optional first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, TILDE, TRUE, TYPEID, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}">
          <nonterminal first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, TILDE, TRUE, TYPEID, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}" ruleName="TemplateArgumentList"/>
         </optional>
        </sequence>
        <action first="{RANGLE}">
         <token first="{RANGLE}" name="RANGLE"/>
        </action>
       </sequence>
      </group>
     </action>
    </group>
    <action first="{ID}">
     <nonterminal first="{ID}" ruleName="SimpleTemplateId"/>
    </action>
   </choice>
  </rule>
  <rule first="{ID}" name="SimpleTemplateId">
   <action first="{ID}">
    <group first="{ID}">
     <sequence first="{ID}">
      <sequence first="{ID}">
       <sequence first="{ID}">
        <action first="{ID}">
         <nonterminal first="{ID}" ruleName="TemplateName"/>
        </action>
        <action first="{LANGLE}">
         <token first="{LANGLE}" name="LANGLE"/>
        </action>
       </sequence>
       <optional first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, TILDE, TRUE, TYPEID, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}">
        <nonterminal first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, TILDE, TRUE, TYPEID, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}" ruleName="TemplateArgumentList"/>
       </optional>
      </sequence>
      <action first="{RANGLE}">
       <token first="{RANGLE}" name="RANGLE"/>
      </action>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{ID}" name="TemplateName">
   <action first="{ID}">
    <nonterminal first="{ID}" ruleName="Identifier"/>
   </action>
  </rule>
  <rule first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, TILDE, TRUE, TYPEID, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}" name="TemplateArgumentList">
   <sequence first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, TILDE, TRUE, TYPEID, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}">
    <group first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, TILDE, TRUE, TYPEID, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}">
     <sequence first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, TILDE, TRUE, TYPEID, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}">
      <action first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, TILDE, TRUE, TYPEID, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}">
       <nonterminal first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, TILDE, TRUE, TYPEID, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}" ruleName="TemplateArgument"/>
      </action>
      <kleene first="{#, COMMA}">
       <group first="{COMMA}">
        <sequence first="{COMMA}">
         <action first="{COMMA}">
          <nonterminal first="{COMMA}" ruleName="Comma"/>
         </action>
         <action first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, TILDE, TRUE, TYPEID, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}">
          <nonterminal first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, TILDE, TRUE, TYPEID, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}" ruleName="TemplateArgument"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
    <optional first="{#, ELLIPSIS}">
     <group first="{ELLIPSIS}">
      <action first="{ELLIPSIS}">
       <token first="{ELLIPSIS}" name="ELLIPSIS"/>
      </action>
     </group>
    </optional>
   </sequence>
  </rule>
  <rule first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, TILDE, TRUE, TYPEID, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}" name="TemplateArgument">
   <choice first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, TILDE, TRUE, TYPEID, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}">
    <choice first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, TILDE, TRUE, TYPEID, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}">
     <sequence first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, COMMA, CONST, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, RANGLE, SHORT, SIGNED, STAR, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
      <sequence first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, SHORT, SIGNED, STAR, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
       <action first="{#}">
        <empty first="{#}"/>
       </action>
       <nonterminal first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, SHORT, SIGNED, STAR, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}" ruleName="TypeId"/>
      </sequence>
      <action first="{COMMA, ELLIPSIS, RANGLE}">
       <nonterminal first="{COMMA, ELLIPSIS, RANGLE}" ruleName="TemplateArgNext"/>
      </action>
     </sequence>
     <action first="{#, ADD_ASSIGN, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}">
      <nonterminal first="{#, ADD_ASSIGN, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}" ruleName="ConstantExpression"/>
     </action>
    </choice>
    <action first="{#, COLON_COLON, ID, OPERATOR, TEMPLATE, TILDE}">
     <nonterminal first="{#, COLON_COLON, ID, OPERATOR, TEMPLATE, TILDE}" ruleName="IdExpression"/>
    </action>
   </choice>
  </rule>
  <rule first="{COMMA, ELLIPSIS, RANGLE}" name="TemplateArgNext">
   <lookahead first="{COMMA, ELLIPSIS, RANGLE}">
    <group first="{COMMA, ELLIPSIS, RANGLE}">
     <choice first="{COMMA, ELLIPSIS, RANGLE}">
      <choice first="{COMMA, RANGLE}">
       <token first="{RANGLE}" name="RANGLE"/>
       <token first="{COMMA}" name="COMMA"/>
      </choice>
      <token first="{ELLIPSIS}" name="ELLIPSIS"/>
     </choice>
    </group>
   </lookahead>
  </rule>
  <rule first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}" name="DeductionGuide">
   <action first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
    <group first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
     <sequence first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
      <sequence first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, RPAREN, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
       <sequence first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, RPAREN, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
        <sequence first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, RPAREN, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
         <sequence first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
          <sequence first="{#, EXPLICIT, ID, LPAREN}">
           <sequence first="{#, EXPLICIT, ID}">
            <optional first="{#, EXPLICIT}">
             <group first="{EXPLICIT}">
              <action first="{EXPLICIT}">
               <nonterminal first="{EXPLICIT}" ruleName="ExplicitSpecifier"/>
              </action>
             </group>
            </optional>
            <action first="{ID}">
             <nonterminal first="{ID}" ruleName="TemplateName"/>
            </action>
           </sequence>
           <action first="{LPAREN}">
            <token first="{LPAREN}" name="LPAREN"/>
           </action>
          </sequence>
          <nonterminal first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}" ruleName="ParameterDeclarationClause"/>
         </sequence>
         <action first="{RPAREN}">
          <token first="{RPAREN}" name="RPAREN"/>
         </action>
        </sequence>
        <nonterminal first="{ARROW}" ruleName="Arrow"/>
       </sequence>
       <nonterminal first="{ID}" ruleName="SimpleTemplateId"/>
      </sequence>
      <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{ARROW}" name="Arrow">
   <action first="{ARROW}">
    <token first="{ARROW}" name="ARROW"/>
   </action>
  </rule>
  <rule first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACE, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}" name="ExplicitInstantiation">
   <action first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACE, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
    <group first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACE, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
     <sequence first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACE, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
      <sequence first="{#, EXTERN, TEMPLATE}">
       <optional first="{#, EXTERN}">
        <group first="{EXTERN}">
         <action first="{EXTERN}">
          <nonterminal first="{EXTERN}" ruleName="Extern"/>
         </action>
        </group>
       </optional>
       <action first="{TEMPLATE}">
        <nonterminal first="{TEMPLATE}" ruleName="Template"/>
       </action>
      </sequence>
      <nonterminal first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACE, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}" ruleName="Declaration"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{TEMPLATE}" name="ExplicitSpecialization">
   <action first="{TEMPLATE}">
    <group first="{TEMPLATE}">
     <sequence first="{TEMPLATE}">
      <sequence first="{TEMPLATE}">
       <sequence first="{TEMPLATE}">
        <sequence first="{TEMPLATE}">
         <action first="{TEMPLATE}">
          <nonterminal first="{TEMPLATE}" ruleName="Template"/>
         </action>
         <action first="{LANGLE}">
          <token first="{LANGLE}" name="LANGLE"/>
         </action>
        </sequence>
        <action first="{RANGLE}">
         <token first="{RANGLE}" name="RANGLE"/>
        </action>
       </sequence>
       <action first="{#}">
        <empty first="{#}"/>
       </action>
      </sequence>
      <action first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACE, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
       <nonterminal first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACE, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}" ruleName="Declaration"/>
      </action>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{EXTERN}" name="Extern">
   <action first="{EXTERN}">
    <token first="{EXTERN}" name="EXTERN"/>
   </action>
  </rule>
  <rule first="{TEMPLATE}" name="Template">
   <action first="{TEMPLATE}">
    <token first="{TEMPLATE}" name="TEMPLATE"/>
   </action>
  </rule>
 </grammar>
</parserFile>
