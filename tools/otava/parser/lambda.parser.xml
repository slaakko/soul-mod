<parserFile>
 <grammar name="LambdaParser">
  <rule first="{LBRACKET}" name="LambdaExpression">
   <action first="{LBRACKET}">
    <group first="{LBRACKET}">
     <sequence first="{LBRACKET}">
      <sequence first="{LBRACKET}">
       <sequence first="{LBRACKET}">
        <action first="{LBRACKET}">
         <nonterminal first="{LBRACKET}" ruleName="LambdaIntroducer"/>
        </action>
        <optional first="{#, LANGLE}">
         <nonterminal first="{LANGLE}" ruleName="LambdaTemplateParams"/>
        </optional>
       </sequence>
       <nonterminal first="{#, ALIGNAS, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, NOEXCEPT, REQUIRES, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}" ruleName="LambdaDeclarator"/>
      </sequence>
      <nonterminal first="{#, ALIGNAS, LBRACE, LBRACKET}" ruleName="CompoundStatement"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{LBRACKET}" name="LambdaIntroducer">
   <action first="{LBRACKET}">
    <group first="{LBRACKET}">
     <sequence first="{LBRACKET}">
      <sequence first="{LBRACKET}">
       <action first="{LBRACKET}">
        <token first="{LBRACKET}" name="LBRACKET"/>
       </action>
       <optional first="{#, AMP, ASSIGN, COMMA, ELLIPSIS, ID, LBRACE, LPAREN, STAR, THIS}">
        <nonterminal first="{#, AMP, ASSIGN, COMMA, ELLIPSIS, ID, LBRACE, LPAREN, STAR, THIS}" ruleName="LambdaCapture"/>
       </optional>
      </sequence>
      <action first="{RBRACKET}">
       <token first="{RBRACKET}" name="RBRACKET"/>
      </action>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, ASSIGN, COMMA, ELLIPSIS, ID, LBRACE, LPAREN, STAR, THIS}" name="LambdaCapture">
   <sequence first="{#, AMP, ASSIGN, COMMA, ELLIPSIS, ID, LBRACE, LPAREN, STAR, THIS}">
    <action first="{#}">
     <empty first="{#}"/>
    </action>
    <action first="{#, AMP, ASSIGN, COMMA, ELLIPSIS, ID, LBRACE, LPAREN, STAR, THIS}">
     <group first="{#, AMP, ASSIGN, COMMA, ELLIPSIS, ID, LBRACE, LPAREN, STAR, THIS}">
      <choice first="{#, AMP, ASSIGN, COMMA, ELLIPSIS, ID, LBRACE, LPAREN, STAR, THIS}">
       <nonterminal first="{#, AMP, ASSIGN, COMMA, ELLIPSIS, ID, LBRACE, LPAREN, STAR, THIS}" ruleName="CaptureList"/>
       <sequence first="{AMP, ASSIGN}">
        <action first="{AMP, ASSIGN}">
         <nonterminal first="{AMP, ASSIGN}" ruleName="CaptureDefault"/>
        </action>
        <optional first="{#, COMMA}">
         <group first="{COMMA}">
          <sequence first="{COMMA}">
           <action first="{COMMA}">
            <nonterminal first="{COMMA}" ruleName="Comma"/>
           </action>
           <nonterminal first="{#, AMP, ASSIGN, COMMA, ELLIPSIS, ID, LBRACE, LPAREN, STAR, THIS}" ruleName="CaptureList"/>
          </sequence>
         </group>
        </optional>
       </sequence>
      </choice>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{AMP, ASSIGN}" name="CaptureDefault">
   <choice first="{AMP, ASSIGN}">
    <action first="{AMP}">
     <token first="{AMP}" name="AMP"/>
    </action>
    <action first="{ASSIGN}">
     <token first="{ASSIGN}" name="ASSIGN"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, AMP, ASSIGN, COMMA, ELLIPSIS, ID, LBRACE, LPAREN, STAR, THIS}" name="CaptureList">
   <sequence first="{#, AMP, ASSIGN, COMMA, ELLIPSIS, ID, LBRACE, LPAREN, STAR, THIS}">
    <action first="{#, AMP, ASSIGN, ELLIPSIS, ID, LBRACE, LPAREN, STAR, THIS}">
     <nonterminal first="{#, AMP, ASSIGN, ELLIPSIS, ID, LBRACE, LPAREN, STAR, THIS}" ruleName="Capture"/>
    </action>
    <kleene first="{#, COMMA}">
     <group first="{COMMA}">
      <sequence first="{COMMA}">
       <action first="{COMMA}">
        <nonterminal first="{COMMA}" ruleName="Comma"/>
       </action>
       <action first="{#, AMP, ASSIGN, ELLIPSIS, ID, LBRACE, LPAREN, STAR, THIS}">
        <nonterminal first="{#, AMP, ASSIGN, ELLIPSIS, ID, LBRACE, LPAREN, STAR, THIS}" ruleName="Capture"/>
       </action>
      </sequence>
     </group>
    </kleene>
   </sequence>
  </rule>
  <rule first="{#, AMP, ASSIGN, ELLIPSIS, ID, LBRACE, LPAREN, STAR, THIS}" name="Capture">
   <choice first="{#, AMP, ASSIGN, ELLIPSIS, ID, LBRACE, LPAREN, STAR, THIS}">
    <action first="{#, AMP, ASSIGN, ELLIPSIS, ID, LBRACE, LPAREN}">
     <nonterminal first="{#, AMP, ASSIGN, ELLIPSIS, ID, LBRACE, LPAREN}" ruleName="InitCapture"/>
    </action>
    <action first="{#, AMP, ELLIPSIS, ID, STAR, THIS}">
     <nonterminal first="{#, AMP, ELLIPSIS, ID, STAR, THIS}" ruleName="SimpleCapture"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, AMP, ASSIGN, ELLIPSIS, ID, LBRACE, LPAREN}" name="InitCapture">
   <action first="{#, AMP, ASSIGN, ELLIPSIS, ID, LBRACE, LPAREN}">
    <group first="{#, AMP, ASSIGN, ELLIPSIS, ID, LBRACE, LPAREN}">
     <sequence first="{#, AMP, ASSIGN, ELLIPSIS, ID, LBRACE, LPAREN}">
      <sequence first="{#, AMP, ELLIPSIS, ID}">
       <sequence first="{#, AMP, ELLIPSIS}">
        <optional first="{#, AMP}">
         <group first="{AMP}">
          <action first="{AMP}">
           <token first="{AMP}" name="AMP"/>
          </action>
         </group>
        </optional>
        <optional first="{#, ELLIPSIS}">
         <group first="{ELLIPSIS}">
          <action first="{ELLIPSIS}">
           <nonterminal first="{ELLIPSIS}" ruleName="Ellipsis"/>
          </action>
         </group>
        </optional>
       </sequence>
       <action first="{ID}">
        <nonterminal first="{ID}" ruleName="Identifier"/>
       </action>
      </sequence>
      <nonterminal first="{ASSIGN, LBRACE, LPAREN}" ruleName="Initializer"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, ELLIPSIS, ID, STAR, THIS}" name="SimpleCapture">
   <action first="{#, AMP, ELLIPSIS, ID, STAR, THIS}">
    <group first="{#, AMP, ELLIPSIS, ID, STAR, THIS}">
     <choice first="{#, AMP, ELLIPSIS, ID, STAR, THIS}">
      <choice first="{STAR, THIS}">
       <sequence first="{STAR}">
        <action first="{STAR}">
         <token first="{STAR}" name="STAR"/>
        </action>
        <action first="{THIS}">
         <token first="{THIS}" name="THIS"/>
        </action>
       </sequence>
       <action first="{THIS}">
        <token first="{THIS}" name="THIS"/>
       </action>
      </choice>
      <group first="{#, AMP, ELLIPSIS, ID}">
       <sequence first="{#, AMP, ELLIPSIS, ID}">
        <sequence first="{#, AMP, ID}">
         <optional first="{#, AMP}">
          <group first="{AMP}">
           <action first="{AMP}">
            <token first="{AMP}" name="AMP"/>
           </action>
          </group>
         </optional>
         <action first="{ID}">
          <nonterminal first="{ID}" ruleName="Identifier"/>
         </action>
        </sequence>
        <optional first="{#, ELLIPSIS}">
         <nonterminal first="{ELLIPSIS}" ruleName="Ellipsis"/>
        </optional>
       </sequence>
      </group>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{#, ALIGNAS, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, NOEXCEPT, REQUIRES, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}" name="LambdaDeclarator">
   <action first="{#, ALIGNAS, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, NOEXCEPT, REQUIRES, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
    <group first="{#, ALIGNAS, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, NOEXCEPT, REQUIRES, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
     <sequence first="{#, ALIGNAS, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, NOEXCEPT, REQUIRES, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
      <sequence first="{#, ALIGNAS, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, NOEXCEPT, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
       <optional first="{#, LPAREN}">
        <group first="{LPAREN}">
         <sequence first="{LPAREN}">
          <sequence first="{LPAREN}">
           <action first="{LPAREN}">
            <token first="{LPAREN}" name="LPAREN"/>
           </action>
           <nonterminal first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}" ruleName="ParameterDeclarationClause"/>
          </sequence>
          <action first="{RPAREN}">
           <token first="{RPAREN}" name="RPAREN"/>
          </action>
         </sequence>
        </group>
       </optional>
       <action first="{#, ALIGNAS, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, MUTABLE, NOEXCEPT, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
        <nonterminal first="{#, ALIGNAS, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, MUTABLE, NOEXCEPT, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}" ruleName="LambdaSpecifiers"/>
       </action>
      </sequence>
      <optional first="{#, REQUIRES}">
       <nonterminal first="{REQUIRES}" ruleName="RequiresClause"/>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, ALIGNAS, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, MUTABLE, NOEXCEPT, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}" name="LambdaSpecifiers">
   <action first="{#, ALIGNAS, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, MUTABLE, NOEXCEPT, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
    <group first="{#, ALIGNAS, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, MUTABLE, NOEXCEPT, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
     <sequence first="{#, ALIGNAS, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, MUTABLE, NOEXCEPT, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
      <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, MUTABLE, NOEXCEPT, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
       <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, MUTABLE, NOEXCEPT, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
        <optional first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
         <group first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
          <action first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
           <nonterminal first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}" ruleName="DeclSpecifierSeq"/>
          </action>
         </group>
        </optional>
        <optional first="{#, NOEXCEPT}">
         <group first="{NOEXCEPT}">
          <action first="{NOEXCEPT}">
           <nonterminal first="{NOEXCEPT}" ruleName="NoexceptSpecifier"/>
          </action>
         </group>
        </optional>
       </sequence>
       <optional first="{#, ALIGNAS, LBRACKET}">
        <group first="{ALIGNAS, LBRACKET}">
         <action first="{ALIGNAS, LBRACKET}">
          <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
         </action>
        </group>
       </optional>
      </sequence>
      <optional first="{#, ARROW}">
       <group first="{ARROW}">
        <action first="{ARROW}">
         <nonterminal first="{ARROW}" ruleName="TrailingReturnType"/>
        </action>
       </group>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{LANGLE}" name="LambdaTemplateParams">
   <action first="{LANGLE}">
    <group first="{LANGLE}">
     <sequence first="{LANGLE}">
      <action first="{LANGLE}">
       <nonterminal first="{LANGLE}" ruleName="TemplateParameterList"/>
      </action>
      <optional first="{#, REQUIRES}">
       <nonterminal first="{REQUIRES}" ruleName="RequiresClause"/>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
 </grammar>
</parserFile>
