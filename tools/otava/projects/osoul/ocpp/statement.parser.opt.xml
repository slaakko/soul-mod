<parserFile>
 <grammar name="StatementParser">
  <rule first="{#, #, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, SEMICOLON, ID, TILDE, PIPE, LBRACE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, AUTO, REGISTER, STATIC, EXTERN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, NAMESPACE, BOOL, REINTERPRET_CAST, THIS, NEW, MUTABLE, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, CASE, IF, FLOAT, SWITCH, TRUE, FOR, BREAK, WHILE, INT, CONTINUE, RETURN, GOTO, LONG, CHAR, TYPEID, DO, CHAR16T, UNSIGNED, WCHART, CONST, USING, FALSE, DEFAULT, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF, SIZEOF, STATIC_CAST, CONST_CAST}" name="Statement">
   <choice first="{#, #, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, SEMICOLON, ID, TILDE, PIPE, LBRACE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, AUTO, REGISTER, STATIC, EXTERN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, NAMESPACE, BOOL, REINTERPRET_CAST, THIS, NEW, MUTABLE, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, CASE, IF, FLOAT, SWITCH, TRUE, FOR, BREAK, WHILE, INT, CONTINUE, RETURN, GOTO, LONG, CHAR, TYPEID, DO, CHAR16T, UNSIGNED, WCHART, CONST, USING, FALSE, DEFAULT, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF, SIZEOF, STATIC_CAST, CONST_CAST}">
    <choice first="{#, #, #, #, AMP, SEMICOLON, ID, LBRACE, COLON_COLON, STAR, AUTO, REGISTER, STATIC, EXTERN, CHAR8T, NAMESPACE, BOOL, MUTABLE, VOLATILE, OPERATOR, VOID, CASE, IF, FLOAT, SWITCH, FOR, BREAK, WHILE, INT, CONTINUE, RETURN, GOTO, LONG, CHAR, DO, CHAR16T, UNSIGNED, WCHART, CONST, USING, DEFAULT, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF}">
     <switch first="{SEMICOLON, ID, LBRACE, CASE, IF, SWITCH, FOR, BREAK, WHILE, CONTINUE, RETURN, GOTO, DO, DEFAULT}">
      <case first="{ID, CASE, DEFAULT}">
       <action first="{ID, CASE, DEFAULT}">
        <nonterminal first="{ID, CASE, DEFAULT}" ruleName="LabeledStatement"/>
       </action>
      </case>
      <case first="{SEMICOLON}">
       <action first="{SEMICOLON}">
        <nonterminal first="{SEMICOLON}" ruleName="EmptyStatement"/>
       </action>
      </case>
      <case first="{LBRACE}">
       <action first="{LBRACE}">
        <nonterminal first="{LBRACE}" ruleName="CompoundStatement"/>
       </action>
      </case>
      <case first="{IF, SWITCH}">
       <action first="{IF, SWITCH}">
        <nonterminal first="{IF, SWITCH}" ruleName="SelectionStatement"/>
       </action>
      </case>
      <case first="{FOR, WHILE, DO}">
       <action first="{FOR, WHILE, DO}">
        <nonterminal first="{FOR, WHILE, DO}" ruleName="IterationStatement"/>
       </action>
      </case>
      <case first="{BREAK, CONTINUE, RETURN, GOTO}">
       <action first="{BREAK, CONTINUE, RETURN, GOTO}">
        <nonterminal first="{BREAK, CONTINUE, RETURN, GOTO}" ruleName="JumpStatement"/>
       </action>
      </case>
     </switch>
     <action first="{#, #, #, #, AMP, SEMICOLON, ID, COLON_COLON, STAR, AUTO, REGISTER, STATIC, EXTERN, CHAR8T, NAMESPACE, BOOL, MUTABLE, VOLATILE, OPERATOR, VOID, FLOAT, INT, LONG, CHAR, CHAR16T, UNSIGNED, WCHART, CONST, USING, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF}">
      <nonterminal first="{#, #, #, #, AMP, SEMICOLON, ID, COLON_COLON, STAR, AUTO, REGISTER, STATIC, EXTERN, CHAR8T, NAMESPACE, BOOL, MUTABLE, VOLATILE, OPERATOR, VOID, FLOAT, INT, LONG, CHAR, CHAR16T, UNSIGNED, WCHART, CONST, USING, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF}" ruleName="DeclarationStatement"/>
     </action>
    </choice>
    <action first="{#, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}">
     <nonterminal first="{#, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}" ruleName="ExpressionStatement"/>
    </action>
   </choice>
  </rule>
  <rule first="{ID, CASE, DEFAULT}" name="LabeledStatement">
   <switch first="{ID, CASE, DEFAULT}">
    <case first="{ID}">
     <sequence first="{ID}">
      <sequence first="{ID}">
       <action first="{ID}">
        <token first="{ID}" name="ID"/>
       </action>
       <token first="{COLON}" name="COLON"/>
      </sequence>
      <action first="{#, #, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, SEMICOLON, ID, TILDE, PIPE, LBRACE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, AUTO, REGISTER, STATIC, EXTERN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, NAMESPACE, BOOL, REINTERPRET_CAST, THIS, NEW, MUTABLE, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, CASE, IF, FLOAT, SWITCH, TRUE, FOR, BREAK, WHILE, INT, CONTINUE, RETURN, GOTO, LONG, CHAR, TYPEID, DO, CHAR16T, UNSIGNED, WCHART, CONST, USING, FALSE, DEFAULT, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF, SIZEOF, STATIC_CAST, CONST_CAST}">
       <nonterminal first="{#, #, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, SEMICOLON, ID, TILDE, PIPE, LBRACE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, AUTO, REGISTER, STATIC, EXTERN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, NAMESPACE, BOOL, REINTERPRET_CAST, THIS, NEW, MUTABLE, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, CASE, IF, FLOAT, SWITCH, TRUE, FOR, BREAK, WHILE, INT, CONTINUE, RETURN, GOTO, LONG, CHAR, TYPEID, DO, CHAR16T, UNSIGNED, WCHART, CONST, USING, FALSE, DEFAULT, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF, SIZEOF, STATIC_CAST, CONST_CAST}" ruleName="Statement"/>
      </action>
     </sequence>
    </case>
    <case first="{CASE}">
     <sequence first="{CASE}">
      <sequence first="{CASE}">
       <sequence first="{CASE}">
        <token first="{CASE}" name="CASE"/>
        <nonterminal first="{#, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}" ruleName="ConstantExpression"/>
       </sequence>
       <token first="{COLON}" name="COLON"/>
      </sequence>
      <action first="{#, #, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, SEMICOLON, ID, TILDE, PIPE, LBRACE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, AUTO, REGISTER, STATIC, EXTERN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, NAMESPACE, BOOL, REINTERPRET_CAST, THIS, NEW, MUTABLE, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, CASE, IF, FLOAT, SWITCH, TRUE, FOR, BREAK, WHILE, INT, CONTINUE, RETURN, GOTO, LONG, CHAR, TYPEID, DO, CHAR16T, UNSIGNED, WCHART, CONST, USING, FALSE, DEFAULT, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF, SIZEOF, STATIC_CAST, CONST_CAST}">
       <nonterminal first="{#, #, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, SEMICOLON, ID, TILDE, PIPE, LBRACE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, AUTO, REGISTER, STATIC, EXTERN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, NAMESPACE, BOOL, REINTERPRET_CAST, THIS, NEW, MUTABLE, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, CASE, IF, FLOAT, SWITCH, TRUE, FOR, BREAK, WHILE, INT, CONTINUE, RETURN, GOTO, LONG, CHAR, TYPEID, DO, CHAR16T, UNSIGNED, WCHART, CONST, USING, FALSE, DEFAULT, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF, SIZEOF, STATIC_CAST, CONST_CAST}" ruleName="Statement"/>
      </action>
     </sequence>
    </case>
    <case first="{DEFAULT}">
     <sequence first="{DEFAULT}">
      <sequence first="{DEFAULT}">
       <token first="{DEFAULT}" name="DEFAULT"/>
       <token first="{COLON}" name="COLON"/>
      </sequence>
      <action first="{#, #, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, SEMICOLON, ID, TILDE, PIPE, LBRACE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, AUTO, REGISTER, STATIC, EXTERN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, NAMESPACE, BOOL, REINTERPRET_CAST, THIS, NEW, MUTABLE, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, CASE, IF, FLOAT, SWITCH, TRUE, FOR, BREAK, WHILE, INT, CONTINUE, RETURN, GOTO, LONG, CHAR, TYPEID, DO, CHAR16T, UNSIGNED, WCHART, CONST, USING, FALSE, DEFAULT, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF, SIZEOF, STATIC_CAST, CONST_CAST}">
       <nonterminal first="{#, #, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, SEMICOLON, ID, TILDE, PIPE, LBRACE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, AUTO, REGISTER, STATIC, EXTERN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, NAMESPACE, BOOL, REINTERPRET_CAST, THIS, NEW, MUTABLE, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, CASE, IF, FLOAT, SWITCH, TRUE, FOR, BREAK, WHILE, INT, CONTINUE, RETURN, GOTO, LONG, CHAR, TYPEID, DO, CHAR16T, UNSIGNED, WCHART, CONST, USING, FALSE, DEFAULT, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF, SIZEOF, STATIC_CAST, CONST_CAST}" ruleName="Statement"/>
      </action>
     </sequence>
    </case>
   </switch>
  </rule>
  <rule first="{SEMICOLON}" name="EmptyStatement">
   <action first="{SEMICOLON}">
    <token first="{SEMICOLON}" name="SEMICOLON"/>
   </action>
  </rule>
  <rule first="{LBRACE}" name="CompoundStatement">
   <action first="{LBRACE}">
    <group first="{LBRACE}">
     <sequence first="{LBRACE}">
      <sequence first="{LBRACE}">
       <action first="{LBRACE}">
        <token first="{LBRACE}" name="LBRACE"/>
       </action>
       <kleene first="{#, #, #, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, SEMICOLON, ID, TILDE, PIPE, LBRACE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, AUTO, REGISTER, STATIC, EXTERN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, NAMESPACE, BOOL, REINTERPRET_CAST, THIS, NEW, MUTABLE, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, CASE, IF, FLOAT, SWITCH, TRUE, FOR, BREAK, WHILE, INT, CONTINUE, RETURN, GOTO, LONG, CHAR, TYPEID, DO, CHAR16T, UNSIGNED, WCHART, CONST, USING, FALSE, DEFAULT, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF, SIZEOF, STATIC_CAST, CONST_CAST}">
        <group first="{#, #, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, SEMICOLON, ID, TILDE, PIPE, LBRACE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, AUTO, REGISTER, STATIC, EXTERN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, NAMESPACE, BOOL, REINTERPRET_CAST, THIS, NEW, MUTABLE, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, CASE, IF, FLOAT, SWITCH, TRUE, FOR, BREAK, WHILE, INT, CONTINUE, RETURN, GOTO, LONG, CHAR, TYPEID, DO, CHAR16T, UNSIGNED, WCHART, CONST, USING, FALSE, DEFAULT, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF, SIZEOF, STATIC_CAST, CONST_CAST}">
         <action first="{#, #, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, SEMICOLON, ID, TILDE, PIPE, LBRACE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, AUTO, REGISTER, STATIC, EXTERN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, NAMESPACE, BOOL, REINTERPRET_CAST, THIS, NEW, MUTABLE, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, CASE, IF, FLOAT, SWITCH, TRUE, FOR, BREAK, WHILE, INT, CONTINUE, RETURN, GOTO, LONG, CHAR, TYPEID, DO, CHAR16T, UNSIGNED, WCHART, CONST, USING, FALSE, DEFAULT, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF, SIZEOF, STATIC_CAST, CONST_CAST}">
          <nonterminal first="{#, #, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, SEMICOLON, ID, TILDE, PIPE, LBRACE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, AUTO, REGISTER, STATIC, EXTERN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, NAMESPACE, BOOL, REINTERPRET_CAST, THIS, NEW, MUTABLE, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, CASE, IF, FLOAT, SWITCH, TRUE, FOR, BREAK, WHILE, INT, CONTINUE, RETURN, GOTO, LONG, CHAR, TYPEID, DO, CHAR16T, UNSIGNED, WCHART, CONST, USING, FALSE, DEFAULT, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF, SIZEOF, STATIC_CAST, CONST_CAST}" ruleName="Statement"/>
         </action>
        </group>
       </kleene>
      </sequence>
      <token first="{RBRACE}" name="RBRACE"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{IF, SWITCH}" name="SelectionStatement">
   <switch first="{IF, SWITCH}">
    <case first="{IF}">
     <action first="{IF}">
      <nonterminal first="{IF}" ruleName="IfStatement"/>
     </action>
    </case>
    <case first="{SWITCH}">
     <action first="{SWITCH}">
      <nonterminal first="{SWITCH}" ruleName="SwitchStatement"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{IF}" name="IfStatement">
   <action first="{IF}">
    <group first="{IF}">
     <sequence first="{IF}">
      <sequence first="{IF}">
       <sequence first="{IF}">
        <sequence first="{IF}">
         <sequence first="{IF}">
          <token first="{IF}" name="IF"/>
          <token first="{LPAREN}" name="LPAREN"/>
         </sequence>
         <nonterminal first="{#, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}" ruleName="Condition"/>
        </sequence>
        <token first="{RPAREN}" name="RPAREN"/>
       </sequence>
       <nonterminal first="{#, #, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, SEMICOLON, ID, TILDE, PIPE, LBRACE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, AUTO, REGISTER, STATIC, EXTERN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, NAMESPACE, BOOL, REINTERPRET_CAST, THIS, NEW, MUTABLE, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, CASE, IF, FLOAT, SWITCH, TRUE, FOR, BREAK, WHILE, INT, CONTINUE, RETURN, GOTO, LONG, CHAR, TYPEID, DO, CHAR16T, UNSIGNED, WCHART, CONST, USING, FALSE, DEFAULT, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF, SIZEOF, STATIC_CAST, CONST_CAST}" ruleName="Statement"/>
      </sequence>
      <optional first="{#, ELSE}">
       <group first="{ELSE}">
        <sequence first="{ELSE}">
         <token first="{ELSE}" name="ELSE"/>
         <nonterminal first="{#, #, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, SEMICOLON, ID, TILDE, PIPE, LBRACE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, AUTO, REGISTER, STATIC, EXTERN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, NAMESPACE, BOOL, REINTERPRET_CAST, THIS, NEW, MUTABLE, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, CASE, IF, FLOAT, SWITCH, TRUE, FOR, BREAK, WHILE, INT, CONTINUE, RETURN, GOTO, LONG, CHAR, TYPEID, DO, CHAR16T, UNSIGNED, WCHART, CONST, USING, FALSE, DEFAULT, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF, SIZEOF, STATIC_CAST, CONST_CAST}" ruleName="Statement"/>
        </sequence>
       </group>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{SWITCH}" name="SwitchStatement">
   <action first="{SWITCH}">
    <group first="{SWITCH}">
     <sequence first="{SWITCH}">
      <sequence first="{SWITCH}">
       <sequence first="{SWITCH}">
        <sequence first="{SWITCH}">
         <token first="{SWITCH}" name="SWITCH"/>
         <token first="{LPAREN}" name="LPAREN"/>
        </sequence>
        <nonterminal first="{#, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}" ruleName="Condition"/>
       </sequence>
       <token first="{RPAREN}" name="RPAREN"/>
      </sequence>
      <nonterminal first="{#, #, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, SEMICOLON, ID, TILDE, PIPE, LBRACE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, AUTO, REGISTER, STATIC, EXTERN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, NAMESPACE, BOOL, REINTERPRET_CAST, THIS, NEW, MUTABLE, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, CASE, IF, FLOAT, SWITCH, TRUE, FOR, BREAK, WHILE, INT, CONTINUE, RETURN, GOTO, LONG, CHAR, TYPEID, DO, CHAR16T, UNSIGNED, WCHART, CONST, USING, FALSE, DEFAULT, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF, SIZEOF, STATIC_CAST, CONST_CAST}" ruleName="Statement"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{FOR, WHILE, DO}" name="IterationStatement">
   <choice first="{FOR, WHILE, DO}">
    <switch first="{FOR, WHILE, DO}">
     <case first="{WHILE}">
      <action first="{WHILE}">
       <nonterminal first="{WHILE}" ruleName="WhileStatement"/>
      </action>
     </case>
     <case first="{DO}">
      <action first="{DO}">
       <nonterminal first="{DO}" ruleName="DoStatement"/>
      </action>
     </case>
     <case first="{FOR}">
      <action first="{FOR}">
       <nonterminal first="{FOR}" ruleName="RangeForStatement"/>
      </action>
     </case>
    </switch>
    <action first="{FOR}">
     <nonterminal first="{FOR}" ruleName="ForStatement"/>
    </action>
   </choice>
  </rule>
  <rule first="{WHILE}" name="WhileStatement">
   <action first="{WHILE}">
    <group first="{WHILE}">
     <sequence first="{WHILE}">
      <sequence first="{WHILE}">
       <sequence first="{WHILE}">
        <sequence first="{WHILE}">
         <token first="{WHILE}" name="WHILE"/>
         <token first="{LPAREN}" name="LPAREN"/>
        </sequence>
        <nonterminal first="{#, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}" ruleName="Condition"/>
       </sequence>
       <token first="{RPAREN}" name="RPAREN"/>
      </sequence>
      <nonterminal first="{#, #, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, SEMICOLON, ID, TILDE, PIPE, LBRACE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, AUTO, REGISTER, STATIC, EXTERN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, NAMESPACE, BOOL, REINTERPRET_CAST, THIS, NEW, MUTABLE, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, CASE, IF, FLOAT, SWITCH, TRUE, FOR, BREAK, WHILE, INT, CONTINUE, RETURN, GOTO, LONG, CHAR, TYPEID, DO, CHAR16T, UNSIGNED, WCHART, CONST, USING, FALSE, DEFAULT, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF, SIZEOF, STATIC_CAST, CONST_CAST}" ruleName="Statement"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{DO}" name="DoStatement">
   <action first="{DO}">
    <group first="{DO}">
     <sequence first="{DO}">
      <sequence first="{DO}">
       <sequence first="{DO}">
        <sequence first="{DO}">
         <sequence first="{DO}">
          <sequence first="{DO}">
           <token first="{DO}" name="DO"/>
           <nonterminal first="{#, #, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, SEMICOLON, ID, TILDE, PIPE, LBRACE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, AUTO, REGISTER, STATIC, EXTERN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, NAMESPACE, BOOL, REINTERPRET_CAST, THIS, NEW, MUTABLE, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, CASE, IF, FLOAT, SWITCH, TRUE, FOR, BREAK, WHILE, INT, CONTINUE, RETURN, GOTO, LONG, CHAR, TYPEID, DO, CHAR16T, UNSIGNED, WCHART, CONST, USING, FALSE, DEFAULT, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF, SIZEOF, STATIC_CAST, CONST_CAST}" ruleName="Statement"/>
          </sequence>
          <token first="{WHILE}" name="WHILE"/>
         </sequence>
         <token first="{LPAREN}" name="LPAREN"/>
        </sequence>
        <nonterminal first="{#, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}" ruleName="Expression"/>
       </sequence>
       <token first="{RPAREN}" name="RPAREN"/>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{FOR}" name="RangeForStatement">
   <action first="{FOR}">
    <group first="{FOR}">
     <sequence first="{FOR}">
      <sequence first="{FOR}">
       <sequence first="{FOR}">
        <sequence first="{FOR}">
         <sequence first="{FOR}">
          <sequence first="{FOR}">
           <token first="{FOR}" name="FOR"/>
           <token first="{LPAREN}" name="LPAREN"/>
          </sequence>
          <nonterminal first="{#, #, #, AMP, ID, COLON_COLON, STAR, AUTO, REGISTER, STATIC, EXTERN, CHAR8T, BOOL, MUTABLE, VOLATILE, OPERATOR, VOID, FLOAT, INT, LONG, CHAR, CHAR16T, UNSIGNED, WCHART, CONST, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF}" ruleName="ForRangeDeclaration"/>
         </sequence>
         <token first="{COLON}" name="COLON"/>
        </sequence>
        <nonterminal first="{#, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}" ruleName="Expression"/>
       </sequence>
       <token first="{RPAREN}" name="RPAREN"/>
      </sequence>
      <nonterminal first="{#, #, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, SEMICOLON, ID, TILDE, PIPE, LBRACE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, AUTO, REGISTER, STATIC, EXTERN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, NAMESPACE, BOOL, REINTERPRET_CAST, THIS, NEW, MUTABLE, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, CASE, IF, FLOAT, SWITCH, TRUE, FOR, BREAK, WHILE, INT, CONTINUE, RETURN, GOTO, LONG, CHAR, TYPEID, DO, CHAR16T, UNSIGNED, WCHART, CONST, USING, FALSE, DEFAULT, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF, SIZEOF, STATIC_CAST, CONST_CAST}" ruleName="Statement"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, #, #, AMP, ID, COLON_COLON, STAR, AUTO, REGISTER, STATIC, EXTERN, CHAR8T, BOOL, MUTABLE, VOLATILE, OPERATOR, VOID, FLOAT, INT, LONG, CHAR, CHAR16T, UNSIGNED, WCHART, CONST, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF}" name="ForRangeDeclaration">
   <action first="{#, #, #, AMP, ID, COLON_COLON, STAR, AUTO, REGISTER, STATIC, EXTERN, CHAR8T, BOOL, MUTABLE, VOLATILE, OPERATOR, VOID, FLOAT, INT, LONG, CHAR, CHAR16T, UNSIGNED, WCHART, CONST, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF}">
    <group first="{#, #, #, AMP, ID, COLON_COLON, STAR, AUTO, REGISTER, STATIC, EXTERN, CHAR8T, BOOL, MUTABLE, VOLATILE, OPERATOR, VOID, FLOAT, INT, LONG, CHAR, CHAR16T, UNSIGNED, WCHART, CONST, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF}">
     <sequence first="{#, #, #, AMP, ID, COLON_COLON, STAR, AUTO, REGISTER, STATIC, EXTERN, CHAR8T, BOOL, MUTABLE, VOLATILE, OPERATOR, VOID, FLOAT, INT, LONG, CHAR, CHAR16T, UNSIGNED, WCHART, CONST, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF}">
      <sequence first="{#, #, ID, COLON_COLON, AUTO, REGISTER, STATIC, EXTERN, CHAR8T, BOOL, MUTABLE, VOLATILE, VOID, FLOAT, INT, LONG, CHAR, CHAR16T, UNSIGNED, WCHART, CONST, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF}">
       <action first="{#}">
        <empty first="{#}"/>
       </action>
       <nonterminal first="{#, ID, COLON_COLON, AUTO, REGISTER, STATIC, EXTERN, CHAR8T, BOOL, MUTABLE, VOLATILE, VOID, FLOAT, INT, LONG, CHAR, CHAR16T, UNSIGNED, WCHART, CONST, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF}" ruleName="DeclSpecifierSeq"/>
      </sequence>
      <action first="{#, #, AMP, ID, COLON_COLON, STAR, OPERATOR}">
       <nonterminal first="{#, #, AMP, ID, COLON_COLON, STAR, OPERATOR}" ruleName="Declarator"/>
      </action>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{FOR}" name="ForStatement">
   <sequence first="{FOR}">
    <sequence first="{FOR}">
     <sequence first="{FOR}">
      <sequence first="{FOR}">
       <sequence first="{FOR}">
        <sequence first="{FOR}">
         <sequence first="{FOR}">
          <token first="{FOR}" name="FOR"/>
          <token first="{LPAREN}" name="LPAREN"/>
         </sequence>
         <nonterminal first="{#, #, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, SEMICOLON, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, AUTO, REGISTER, STATIC, EXTERN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, MUTABLE, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF, SIZEOF, STATIC_CAST, CONST_CAST}" ruleName="ForInitStatement"/>
        </sequence>
        <optional first="{#, #, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}">
         <nonterminal first="{#, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}" ruleName="Condition"/>
        </optional>
       </sequence>
       <token first="{SEMICOLON}" name="SEMICOLON"/>
      </sequence>
      <optional first="{#, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}">
       <nonterminal first="{#, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}" ruleName="Expression"/>
      </optional>
     </sequence>
     <token first="{RPAREN}" name="RPAREN"/>
    </sequence>
    <action first="{#, #, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, SEMICOLON, ID, TILDE, PIPE, LBRACE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, AUTO, REGISTER, STATIC, EXTERN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, NAMESPACE, BOOL, REINTERPRET_CAST, THIS, NEW, MUTABLE, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, CASE, IF, FLOAT, SWITCH, TRUE, FOR, BREAK, WHILE, INT, CONTINUE, RETURN, GOTO, LONG, CHAR, TYPEID, DO, CHAR16T, UNSIGNED, WCHART, CONST, USING, FALSE, DEFAULT, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF, SIZEOF, STATIC_CAST, CONST_CAST}">
     <nonterminal first="{#, #, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, SEMICOLON, ID, TILDE, PIPE, LBRACE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, AUTO, REGISTER, STATIC, EXTERN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, NAMESPACE, BOOL, REINTERPRET_CAST, THIS, NEW, MUTABLE, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, CASE, IF, FLOAT, SWITCH, TRUE, FOR, BREAK, WHILE, INT, CONTINUE, RETURN, GOTO, LONG, CHAR, TYPEID, DO, CHAR16T, UNSIGNED, WCHART, CONST, USING, FALSE, DEFAULT, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF, SIZEOF, STATIC_CAST, CONST_CAST}" ruleName="Statement"/>
    </action>
   </sequence>
  </rule>
  <rule first="{#, #, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, SEMICOLON, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, AUTO, REGISTER, STATIC, EXTERN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, MUTABLE, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF, SIZEOF, STATIC_CAST, CONST_CAST}" name="ForInitStatement">
   <choice first="{#, #, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, SEMICOLON, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, AUTO, REGISTER, STATIC, EXTERN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, MUTABLE, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF, SIZEOF, STATIC_CAST, CONST_CAST}">
    <switch first="{#, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, SEMICOLON, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}">
     <case first="{SEMICOLON}">
      <action first="{SEMICOLON}">
       <nonterminal first="{SEMICOLON}" ruleName="EmptyStatement"/>
      </action>
     </case>
     <case first="{#, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}">
      <action first="{#, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}">
       <nonterminal first="{#, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}" ruleName="ExpressionStatement"/>
      </action>
     </case>
    </switch>
    <action first="{#, #, #, #, AMP, SEMICOLON, ID, COLON_COLON, STAR, AUTO, REGISTER, STATIC, EXTERN, CHAR8T, BOOL, MUTABLE, VOLATILE, OPERATOR, VOID, FLOAT, INT, LONG, CHAR, CHAR16T, UNSIGNED, WCHART, CONST, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF}">
     <nonterminal first="{#, #, #, #, AMP, SEMICOLON, ID, COLON_COLON, STAR, AUTO, REGISTER, STATIC, EXTERN, CHAR8T, BOOL, MUTABLE, VOLATILE, OPERATOR, VOID, FLOAT, INT, LONG, CHAR, CHAR16T, UNSIGNED, WCHART, CONST, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF}" ruleName="SimpleDeclaration"/>
    </action>
   </choice>
  </rule>
  <rule first="{BREAK, CONTINUE, RETURN, GOTO}" name="JumpStatement">
   <switch first="{BREAK, CONTINUE, RETURN, GOTO}">
    <case first="{BREAK}">
     <action first="{BREAK}">
      <nonterminal first="{BREAK}" ruleName="BreakStatement"/>
     </action>
    </case>
    <case first="{CONTINUE}">
     <action first="{CONTINUE}">
      <nonterminal first="{CONTINUE}" ruleName="ContinueStatement"/>
     </action>
    </case>
    <case first="{RETURN}">
     <action first="{RETURN}">
      <nonterminal first="{RETURN}" ruleName="ReturnStatement"/>
     </action>
    </case>
    <case first="{GOTO}">
     <action first="{GOTO}">
      <nonterminal first="{GOTO}" ruleName="GotoStatement"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{BREAK}" name="BreakStatement">
   <action first="{BREAK}">
    <group first="{BREAK}">
     <sequence first="{BREAK}">
      <token first="{BREAK}" name="BREAK"/>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{CONTINUE}" name="ContinueStatement">
   <action first="{CONTINUE}">
    <group first="{CONTINUE}">
     <sequence first="{CONTINUE}">
      <token first="{CONTINUE}" name="CONTINUE"/>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{RETURN}" name="ReturnStatement">
   <action first="{RETURN}">
    <group first="{RETURN}">
     <sequence first="{RETURN}">
      <sequence first="{RETURN}">
       <token first="{RETURN}" name="RETURN"/>
       <optional first="{#, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}">
        <nonterminal first="{#, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}" ruleName="Expression"/>
       </optional>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{GOTO}" name="GotoStatement">
   <action first="{GOTO}">
    <group first="{GOTO}">
     <sequence first="{GOTO}">
      <sequence first="{GOTO}">
       <token first="{GOTO}" name="GOTO"/>
       <action first="{ID}">
        <token first="{ID}" name="ID"/>
       </action>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, #, #, #, AMP, SEMICOLON, ID, COLON_COLON, STAR, AUTO, REGISTER, STATIC, EXTERN, CHAR8T, NAMESPACE, BOOL, MUTABLE, VOLATILE, OPERATOR, VOID, FLOAT, INT, LONG, CHAR, CHAR16T, UNSIGNED, WCHART, CONST, USING, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF}" name="DeclarationStatement">
   <action first="{#, #, #, #, AMP, SEMICOLON, ID, COLON_COLON, STAR, AUTO, REGISTER, STATIC, EXTERN, CHAR8T, NAMESPACE, BOOL, MUTABLE, VOLATILE, OPERATOR, VOID, FLOAT, INT, LONG, CHAR, CHAR16T, UNSIGNED, WCHART, CONST, USING, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF}">
    <group first="{#, #, #, #, AMP, SEMICOLON, ID, COLON_COLON, STAR, AUTO, REGISTER, STATIC, EXTERN, CHAR8T, NAMESPACE, BOOL, MUTABLE, VOLATILE, OPERATOR, VOID, FLOAT, INT, LONG, CHAR, CHAR16T, UNSIGNED, WCHART, CONST, USING, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF}">
     <nonterminal first="{#, #, #, #, AMP, SEMICOLON, ID, COLON_COLON, STAR, AUTO, REGISTER, STATIC, EXTERN, CHAR8T, NAMESPACE, BOOL, MUTABLE, VOLATILE, OPERATOR, VOID, FLOAT, INT, LONG, CHAR, CHAR16T, UNSIGNED, WCHART, CONST, USING, CHAR32T, SHORT, SIGNED, DOUBLE, TYPEDEF}" ruleName="BlockDeclaration"/>
    </group>
   </action>
  </rule>
  <rule first="{#, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}" name="Condition">
   <group first="{#, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}">
    <choice first="{#, #, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}">
     <sequence first="{#, #, ID, COLON_COLON, CHAR8T, BOOL, VOLATILE, VOID, FLOAT, INT, LONG, CHAR, CHAR16T, UNSIGNED, WCHART, CONST, CHAR32T, SHORT, SIGNED, DOUBLE}">
      <sequence first="{#, #, ID, COLON_COLON, CHAR8T, BOOL, VOLATILE, VOID, FLOAT, INT, LONG, CHAR, CHAR16T, UNSIGNED, WCHART, CONST, CHAR32T, SHORT, SIGNED, DOUBLE}">
       <sequence first="{#, #, ID, COLON_COLON, CHAR8T, BOOL, VOLATILE, VOID, FLOAT, INT, LONG, CHAR, CHAR16T, UNSIGNED, WCHART, CONST, CHAR32T, SHORT, SIGNED, DOUBLE}">
        <nonterminal first="{#, #, ID, COLON_COLON, CHAR8T, BOOL, VOLATILE, VOID, FLOAT, INT, LONG, CHAR, CHAR16T, UNSIGNED, WCHART, CONST, CHAR32T, SHORT, SIGNED, DOUBLE}" ruleName="TypeId"/>
        <nonterminal first="{#, #, AMP, ID, COLON_COLON, STAR, OPERATOR}" ruleName="Declarator"/>
       </sequence>
       <token first="{ASSIGN}" name="ASSIGN"/>
      </sequence>
      <action first="{#, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}">
       <nonterminal first="{#, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}" ruleName="AssignmentExpression"/>
      </action>
     </sequence>
     <action first="{#, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}">
      <nonterminal first="{#, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}" ruleName="Expression"/>
     </action>
    </choice>
   </group>
  </rule>
  <rule first="{#, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}" name="ExpressionStatement">
   <action first="{#, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}">
    <group first="{#, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}">
     <sequence first="{#, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}">
      <nonterminal first="{#, #, FLOATING_LITERAL, DOT, CARET, STRING_LITERAL, COMMA, EXCLAMATION, LANGLE, CHAR_LITERAL, ARROW, QUEST, AMP, LBRACKET, ID, TILDE, PIPE, LPAREN, INTEGER_LITERAL, RANGLE, LEQ, SHIFT_LEFT, MINUS_MINUS, COLON_COLON, SHIFT_LEFT_ASSIGN, STAR, AND_ASSIGN, DISJUNCTION, XOR_ASSIGN, SHIFT_RIGHT_ASSIGN, GEQ, ARROW_STAR, EQ, NEQ, REM, MUL_ASSIGN, REM_ASSIGN, OR_ASSIGN, PLUS_PLUS, AMP_AMP, DOT_STAR, SHIFT_RIGHT, MINUS, DIV, ASSIGN, PLUS_ASSIGN, DIV_ASSIGN, PLUS, MINUS_ASSIGN, CHAR8T, BOOL, REINTERPRET_CAST, THIS, NEW, DELETE, VOLATILE, DYNAMIC_CAST, OPERATOR, VOID, NULLPTR, FLOAT, TRUE, INT, LONG, CHAR, TYPEID, CHAR16T, UNSIGNED, WCHART, CONST, FALSE, CHAR32T, SHORT, SIGNED, DOUBLE, SIZEOF, STATIC_CAST, CONST_CAST}" ruleName="Expression"/>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
 </grammar>
</parserFile>
