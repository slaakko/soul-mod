<parserFile>
 <grammar name="IntermediateParser">
  <rule first="{#, ID, TYPES, DATA, FUNCTION, EXTERN, INLINE, LINK_ONCE, METADATA, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, RBRACE, AT, EXCLAMATION, TYPEID}" name="IntermediateFile">
   <sequence first="{#, ID, TYPES, DATA, FUNCTION, EXTERN, INLINE, LINK_ONCE, METADATA, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, RBRACE, AT, EXCLAMATION, TYPEID}">
    <sequence first="{#, ID, TYPES, DATA, FUNCTION, EXTERN, INLINE, LINK_ONCE, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, RBRACE, AT, EXCLAMATION, TYPEID}">
     <sequence first="{#, TYPES, DATA}">
      <sequence first="{#, TYPES}">
       <action first="{#}">
        <empty first="{#}"/>
       </action>
       <optional first="{#, TYPES}">
        <nonterminal first="{TYPES}" ruleName="TypeDeclarations"/>
       </optional>
      </sequence>
      <optional first="{#, DATA}">
       <nonterminal first="{DATA}" ruleName="DataDefinitions"/>
      </optional>
     </sequence>
     <optional first="{#, ID, FUNCTION, EXTERN, INLINE, LINK_ONCE, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, RBRACE, AT, EXCLAMATION, TYPEID}">
      <nonterminal first="{#, ID, FUNCTION, EXTERN, INLINE, LINK_ONCE, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, RBRACE, AT, EXCLAMATION, TYPEID}" ruleName="FunctionDefinitions"/>
     </optional>
    </sequence>
    <optional first="{#, METADATA}">
     <nonterminal first="{METADATA}" ruleName="ParseMetadata"/>
    </optional>
   </sequence>
  </rule>
  <rule first="{TYPES}" name="TypeDeclarations">
   <sequence first="{TYPES}">
    <sequence first="{TYPES}">
     <sequence first="{TYPES}">
      <token first="{TYPES}" name="TYPES"/>
      <token first="{LBRACE}" name="LBRACE"/>
     </sequence>
     <kleene first="{#, TYPEID}">
      <nonterminal first="{TYPEID}" ruleName="TypeDeclaration"/>
     </kleene>
    </sequence>
    <action first="{RBRACE}">
     <token first="{RBRACE}" name="RBRACE"/>
    </action>
   </sequence>
  </rule>
  <rule first="{TYPEID}" name="TypeDeclaration">
   <sequence first="{TYPEID}">
    <sequence first="{TYPEID}">
     <sequence first="{TYPEID}">
      <action first="{TYPEID}">
       <nonterminal first="{TYPEID}" ruleName="TypeId"/>
      </action>
      <token first="{ASSIGN}" name="ASSIGN"/>
     </sequence>
     <token first="{TYPE}" name="TYPE"/>
    </sequence>
    <group first="{FUNCTION, LBRACE, LBRACKET}">
     <switch first="{FUNCTION, LBRACE, LBRACKET}">
      <case first="{LBRACE}">
       <nonterminal first="{LBRACE}" ruleName="ParseStructureType"/>
      </case>
      <case first="{LBRACKET}">
       <nonterminal first="{LBRACKET}" ruleName="ParseArrayType"/>
      </case>
      <case first="{FUNCTION}">
       <nonterminal first="{FUNCTION}" ruleName="ParseFunctionType"/>
      </case>
     </switch>
    </group>
   </sequence>
  </rule>
  <rule first="{TYPEID}" name="TypeId">
   <group first="{TYPEID}">
    <action first="{TYPEID}">
     <token first="{TYPEID}" name="TYPEID"/>
    </action>
   </group>
  </rule>
  <rule first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE}" name="FundamentalTypeId">
   <switch first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE}">
    <case first="{VOID}">
     <action first="{VOID}">
      <token first="{VOID}" name="VOID"/>
     </action>
    </case>
    <case first="{BOOL}">
     <action first="{BOOL}">
      <token first="{BOOL}" name="BOOL"/>
     </action>
    </case>
    <case first="{SBYTE}">
     <action first="{SBYTE}">
      <token first="{SBYTE}" name="SBYTE"/>
     </action>
    </case>
    <case first="{BYTE}">
     <action first="{BYTE}">
      <token first="{BYTE}" name="BYTE"/>
     </action>
    </case>
    <case first="{SHORT}">
     <action first="{SHORT}">
      <token first="{SHORT}" name="SHORT"/>
     </action>
    </case>
    <case first="{USHORT}">
     <action first="{USHORT}">
      <token first="{USHORT}" name="USHORT"/>
     </action>
    </case>
    <case first="{INT}">
     <action first="{INT}">
      <token first="{INT}" name="INT"/>
     </action>
    </case>
    <case first="{UINT}">
     <action first="{UINT}">
      <token first="{UINT}" name="UINT"/>
     </action>
    </case>
    <case first="{LONG}">
     <action first="{LONG}">
      <token first="{LONG}" name="LONG"/>
     </action>
    </case>
    <case first="{ULONG}">
     <action first="{ULONG}">
      <token first="{ULONG}" name="ULONG"/>
     </action>
    </case>
    <case first="{FLOAT}">
     <action first="{FLOAT}">
      <token first="{FLOAT}" name="FLOAT"/>
     </action>
    </case>
    <case first="{DOUBLE}">
     <action first="{DOUBLE}">
      <token first="{DOUBLE}" name="DOUBLE"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" name="ParseTypeRef">
   <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
    <group first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
     <sequence first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
      <group first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
       <switch first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
        <case first="{TYPEID}">
         <action first="{TYPEID}">
          <nonterminal first="{TYPEID}" ruleName="TypeId"/>
         </action>
        </case>
        <case first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE}">
         <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE}">
          <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE}" ruleName="FundamentalTypeId"/>
         </action>
        </case>
       </switch>
      </group>
      <kleene first="{#, AST}">
       <group first="{AST}">
        <action first="{AST}">
         <token first="{AST}" name="AST"/>
        </action>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{LBRACE}" name="ParseStructureType">
   <sequence first="{LBRACE}">
    <sequence first="{LBRACE}">
     <sequence first="{LBRACE}">
      <action first="{LBRACE}">
       <token first="{LBRACE}" name="LBRACE"/>
      </action>
      <optional first="{#, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
       <group first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
        <sequence first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
         <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
          <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseTypeRef"/>
         </action>
         <kleene first="{#, COMMA}">
          <group first="{COMMA}">
           <sequence first="{COMMA}">
            <token first="{COMMA}" name="COMMA"/>
            <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
             <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseTypeRef"/>
            </action>
           </sequence>
          </group>
         </kleene>
        </sequence>
       </group>
      </optional>
     </sequence>
     <token first="{RBRACE}" name="RBRACE"/>
    </sequence>
    <action first="{#, EXCLAMATION}">
     <group first="{#, EXCLAMATION}">
      <optional first="{#, EXCLAMATION}">
       <nonterminal first="{EXCLAMATION}" ruleName="ParseMetadataRef"/>
      </optional>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{LBRACKET}" name="ParseArrayType">
   <sequence first="{LBRACKET}">
    <sequence first="{LBRACKET}">
     <sequence first="{LBRACKET}">
      <sequence first="{LBRACKET}">
       <action first="{LBRACKET}">
        <token first="{LBRACKET}" name="LBRACKET"/>
       </action>
       <action first="{NUMBER}">
        <token first="{NUMBER}" name="NUMBER"/>
       </action>
      </sequence>
      <action first="{ID}">
       <token first="{ID}" name="ID"/>
      </action>
     </sequence>
     <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseTypeRef"/>
    </sequence>
    <action first="{RBRACKET}">
     <token first="{RBRACKET}" name="RBRACKET"/>
    </action>
   </sequence>
  </rule>
  <rule first="{FUNCTION}" name="ParseFunctionType">
   <sequence first="{FUNCTION}">
    <sequence first="{FUNCTION}">
     <sequence first="{FUNCTION}">
      <sequence first="{FUNCTION}">
       <action first="{FUNCTION}">
        <token first="{FUNCTION}" name="FUNCTION"/>
       </action>
       <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseTypeRef"/>
      </sequence>
      <token first="{LPAREN}" name="LPAREN"/>
     </sequence>
     <optional first="{#, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
      <group first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
       <sequence first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
        <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
         <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseTypeRef"/>
        </action>
        <kleene first="{#, COMMA}">
         <group first="{COMMA}">
          <sequence first="{COMMA}">
           <token first="{COMMA}" name="COMMA"/>
           <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
            <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseTypeRef"/>
           </action>
          </sequence>
         </group>
        </kleene>
       </sequence>
      </group>
     </optional>
    </sequence>
    <action first="{RPAREN}">
     <token first="{RPAREN}" name="RPAREN"/>
    </action>
   </sequence>
  </rule>
  <rule first="{DATA}" name="DataDefinitions">
   <sequence first="{DATA}">
    <sequence first="{DATA}">
     <sequence first="{DATA}">
      <token first="{DATA}" name="DATA"/>
      <token first="{LBRACE}" name="LBRACE"/>
     </sequence>
     <kleene first="{#, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
      <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="DataDefinition"/>
     </kleene>
    </sequence>
    <action first="{RBRACE}">
     <token first="{RBRACE}" name="RBRACE"/>
    </action>
   </sequence>
  </rule>
  <rule first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" name="DataDefinition">
   <sequence first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
    <sequence first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
     <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
      <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseTypeRef"/>
     </action>
     <action first="{ID}">
      <token first="{ID}" name="ID"/>
     </action>
    </sequence>
    <group first="{SEMICOLON, ASSIGN}">
     <switch first="{SEMICOLON, ASSIGN}">
      <case first="{SEMICOLON}">
       <action first="{SEMICOLON}">
        <token first="{SEMICOLON}" name="SEMICOLON"/>
       </action>
      </case>
      <case first="{ASSIGN}">
       <sequence first="{ASSIGN}">
        <token first="{ASSIGN}" name="ASSIGN"/>
        <action first="{ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}">
         <nonterminal first="{ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}" ruleName="Constant"/>
        </action>
       </sequence>
      </case>
     </switch>
    </group>
   </sequence>
  </rule>
  <rule first="{ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}" name="Constant">
   <choice first="{ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}">
    <choice first="{ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}">
     <choice first="{ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}">
      <switch first="{ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}">
       <case first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
        <choice first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
         <switch first="{BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE}">
          <case first="{BOOL}">
           <action first="{BOOL}">
            <nonterminal first="{BOOL}" ruleName="BoolConstant"/>
           </action>
          </case>
          <case first="{SBYTE}">
           <action first="{SBYTE}">
            <nonterminal first="{SBYTE}" ruleName="SByteConstant"/>
           </action>
          </case>
          <case first="{BYTE}">
           <action first="{BYTE}">
            <nonterminal first="{BYTE}" ruleName="ByteConstant"/>
           </action>
          </case>
          <case first="{SHORT}">
           <action first="{SHORT}">
            <nonterminal first="{SHORT}" ruleName="ShortConstant"/>
           </action>
          </case>
          <case first="{USHORT}">
           <action first="{USHORT}">
            <nonterminal first="{USHORT}" ruleName="UShortConstant"/>
           </action>
          </case>
          <case first="{INT}">
           <action first="{INT}">
            <nonterminal first="{INT}" ruleName="IntConstant"/>
           </action>
          </case>
          <case first="{UINT}">
           <action first="{UINT}">
            <nonterminal first="{UINT}" ruleName="UIntConstant"/>
           </action>
          </case>
          <case first="{LONG}">
           <action first="{LONG}">
            <nonterminal first="{LONG}" ruleName="LongConstant"/>
           </action>
          </case>
          <case first="{ULONG}">
           <action first="{ULONG}">
            <nonterminal first="{ULONG}" ruleName="ULongConstant"/>
           </action>
          </case>
          <case first="{FLOAT}">
           <action first="{FLOAT}">
            <nonterminal first="{FLOAT}" ruleName="FloatConstant"/>
           </action>
          </case>
          <case first="{DOUBLE}">
           <action first="{DOUBLE}">
            <nonterminal first="{DOUBLE}" ruleName="DoubleConstant"/>
           </action>
          </case>
         </switch>
         <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
          <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="AddressConstant"/>
         </action>
        </choice>
       </case>
       <case first="{LBRACKET}">
        <action first="{LBRACKET}">
         <nonterminal first="{LBRACKET}" ruleName="ArrayConstant"/>
        </action>
       </case>
       <case first="{LBRACE}">
        <action first="{LBRACE}">
         <nonterminal first="{LBRACE}" ruleName="StructureConstant"/>
        </action>
       </case>
       <case first="{STRING}">
        <action first="{STRING}">
         <nonterminal first="{STRING}" ruleName="StringConstant"/>
        </action>
       </case>
       <case first="{ID}">
        <action first="{ID}">
         <nonterminal first="{ID}" ruleName="StringArrayConstant"/>
        </action>
       </case>
      </switch>
      <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
       <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ConversionConstant"/>
      </action>
     </choice>
     <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
      <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ClsIdConstant"/>
     </action>
    </choice>
    <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
     <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="SymbolConstant"/>
    </action>
   </choice>
  </rule>
  <rule first="{BOOL}" name="BoolConstant">
   <sequence first="{BOOL}">
    <token first="{BOOL}" name="BOOL"/>
    <group first="{TRUE, FALSE}">
     <switch first="{TRUE, FALSE}">
      <case first="{TRUE}">
       <action first="{TRUE}">
        <token first="{TRUE}" name="TRUE"/>
       </action>
      </case>
      <case first="{FALSE}">
       <action first="{FALSE}">
        <token first="{FALSE}" name="FALSE"/>
       </action>
      </case>
     </switch>
    </group>
   </sequence>
  </rule>
  <rule first="{SBYTE}" name="SByteConstant">
   <sequence first="{SBYTE}">
    <token first="{SBYTE}" name="SBYTE"/>
    <action first="{NUMBER}">
     <token first="{NUMBER}" name="NUMBER"/>
    </action>
   </sequence>
  </rule>
  <rule first="{BYTE}" name="ByteConstant">
   <sequence first="{BYTE}">
    <token first="{BYTE}" name="BYTE"/>
    <action first="{NUMBER}">
     <token first="{NUMBER}" name="NUMBER"/>
    </action>
   </sequence>
  </rule>
  <rule first="{SHORT}" name="ShortConstant">
   <sequence first="{SHORT}">
    <token first="{SHORT}" name="SHORT"/>
    <action first="{NUMBER}">
     <token first="{NUMBER}" name="NUMBER"/>
    </action>
   </sequence>
  </rule>
  <rule first="{USHORT}" name="UShortConstant">
   <sequence first="{USHORT}">
    <token first="{USHORT}" name="USHORT"/>
    <action first="{NUMBER}">
     <token first="{NUMBER}" name="NUMBER"/>
    </action>
   </sequence>
  </rule>
  <rule first="{INT}" name="IntConstant">
   <sequence first="{INT}">
    <token first="{INT}" name="INT"/>
    <action first="{NUMBER}">
     <token first="{NUMBER}" name="NUMBER"/>
    </action>
   </sequence>
  </rule>
  <rule first="{UINT}" name="UIntConstant">
   <sequence first="{UINT}">
    <token first="{UINT}" name="UINT"/>
    <action first="{NUMBER}">
     <token first="{NUMBER}" name="NUMBER"/>
    </action>
   </sequence>
  </rule>
  <rule first="{LONG}" name="LongConstant">
   <sequence first="{LONG}">
    <token first="{LONG}" name="LONG"/>
    <action first="{NUMBER}">
     <token first="{NUMBER}" name="NUMBER"/>
    </action>
   </sequence>
  </rule>
  <rule first="{ULONG}" name="ULongConstant">
   <sequence first="{ULONG}">
    <token first="{ULONG}" name="ULONG"/>
    <action first="{NUMBER}">
     <token first="{NUMBER}" name="NUMBER"/>
    </action>
   </sequence>
  </rule>
  <rule first="{FLOAT}" name="FloatConstant">
   <sequence first="{FLOAT}">
    <token first="{FLOAT}" name="FLOAT"/>
    <action first="{NUMBER}">
     <token first="{NUMBER}" name="NUMBER"/>
    </action>
   </sequence>
  </rule>
  <rule first="{DOUBLE}" name="DoubleConstant">
   <sequence first="{DOUBLE}">
    <token first="{DOUBLE}" name="DOUBLE"/>
    <action first="{NUMBER}">
     <token first="{NUMBER}" name="NUMBER"/>
    </action>
   </sequence>
  </rule>
  <rule first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" name="AddressConstant">
   <sequence first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
    <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
     <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseTypeRef"/>
    </action>
    <group first="{ID, NULL_TOKEN}">
     <switch first="{ID, NULL_TOKEN}">
      <case first="{NULL_TOKEN}">
       <action first="{NULL_TOKEN}">
        <token first="{NULL_TOKEN}" name="NULL_TOKEN"/>
       </action>
      </case>
      <case first="{ID}">
       <action first="{ID}">
        <token first="{ID}" name="ID"/>
       </action>
      </case>
     </switch>
    </group>
   </sequence>
  </rule>
  <rule first="{LBRACKET}" name="ArrayConstant">
   <sequence first="{LBRACKET}">
    <sequence first="{LBRACKET}">
     <action first="{LBRACKET}">
      <token first="{LBRACKET}" name="LBRACKET"/>
     </action>
     <optional first="{#, ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}">
      <group first="{ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}">
       <sequence first="{ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}">
        <action first="{ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}">
         <nonterminal first="{ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}" ruleName="Constant"/>
        </action>
        <kleene first="{#, COMMA}">
         <group first="{COMMA}">
          <sequence first="{COMMA}">
           <token first="{COMMA}" name="COMMA"/>
           <action first="{ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}">
            <nonterminal first="{ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}" ruleName="Constant"/>
           </action>
          </sequence>
         </group>
        </kleene>
       </sequence>
      </group>
     </optional>
    </sequence>
    <action first="{RBRACKET}">
     <token first="{RBRACKET}" name="RBRACKET"/>
    </action>
   </sequence>
  </rule>
  <rule first="{LBRACE}" name="StructureConstant">
   <sequence first="{LBRACE}">
    <sequence first="{LBRACE}">
     <action first="{LBRACE}">
      <token first="{LBRACE}" name="LBRACE"/>
     </action>
     <optional first="{#, ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}">
      <group first="{ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}">
       <sequence first="{ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}">
        <action first="{ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}">
         <nonterminal first="{ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}" ruleName="Constant"/>
        </action>
        <kleene first="{#, COMMA}">
         <group first="{COMMA}">
          <sequence first="{COMMA}">
           <token first="{COMMA}" name="COMMA"/>
           <action first="{ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}">
            <nonterminal first="{ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}" ruleName="Constant"/>
           </action>
          </sequence>
         </group>
        </kleene>
       </sequence>
      </group>
     </optional>
    </sequence>
    <action first="{RBRACE}">
     <token first="{RBRACE}" name="RBRACE"/>
    </action>
   </sequence>
  </rule>
  <rule first="{STRING}" name="StringConstant">
   <action first="{STRING}">
    <token first="{STRING}" name="STRING"/>
   </action>
  </rule>
  <rule first="{ID}" name="StringArrayConstant">
   <sequence first="{ID}">
    <sequence first="{ID}">
     <sequence first="{ID}">
      <action first="{ID}">
       <nonterminal first="{ID}" ruleName="StringArrayPrefix"/>
      </action>
      <token first="{LBRACKET}" name="LBRACKET"/>
     </sequence>
     <optional first="{#, ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}">
      <group first="{ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}">
       <sequence first="{ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}">
        <action first="{ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}">
         <nonterminal first="{ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}" ruleName="Constant"/>
        </action>
        <kleene first="{#, COMMA}">
         <group first="{COMMA}">
          <sequence first="{COMMA}">
           <token first="{COMMA}" name="COMMA"/>
           <action first="{ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}">
            <nonterminal first="{ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}" ruleName="Constant"/>
           </action>
          </sequence>
         </group>
        </kleene>
       </sequence>
      </group>
     </optional>
    </sequence>
    <action first="{RBRACKET}">
     <token first="{RBRACKET}" name="RBRACKET"/>
    </action>
   </sequence>
  </rule>
  <rule first="{ID}" name="StringArrayPrefix">
   <action first="{ID}">
    <token first="{ID}" name="ID"/>
   </action>
  </rule>
  <rule first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" name="ConversionConstant">
   <sequence first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
    <sequence first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
     <sequence first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
      <sequence first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
       <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
        <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseTypeRef"/>
       </action>
       <token first="{CONV}" name="CONV"/>
      </sequence>
      <token first="{LPAREN}" name="LPAREN"/>
     </sequence>
     <nonterminal first="{ID, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, LBRACKET, TYPEID, STRING}" ruleName="Constant"/>
    </sequence>
    <action first="{RPAREN}">
     <token first="{RPAREN}" name="RPAREN"/>
    </action>
   </sequence>
  </rule>
  <rule first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" name="ClsIdConstant">
   <sequence first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
    <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
     <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseTypeRef"/>
    </action>
    <action first="{CLSID}">
     <token first="{CLSID}" name="CLSID"/>
    </action>
   </sequence>
  </rule>
  <rule first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" name="SymbolConstant">
   <sequence first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
    <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
     <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseTypeRef"/>
    </action>
    <action first="{AT}">
     <nonterminal first="{AT}" ruleName="ParseSymbolValue"/>
    </action>
   </sequence>
  </rule>
  <rule first="{ID, TRUE, FALSE, NULL_TOKEN, AT, DOLLAR, NUMBER}" name="ParseValue">
   <switch first="{ID, TRUE, FALSE, NULL_TOKEN, AT, DOLLAR, NUMBER}">
    <case first="{DOLLAR}">
     <action first="{DOLLAR}">
      <nonterminal first="{DOLLAR}" ruleName="ParseRegValue"/>
     </action>
    </case>
    <case first="{AT}">
     <action first="{AT}">
      <nonterminal first="{AT}" ruleName="ParseSymbolValue"/>
     </action>
    </case>
    <case first="{ID, TRUE, FALSE, NULL_TOKEN, NUMBER}">
     <action first="{ID, TRUE, FALSE, NULL_TOKEN, NUMBER}">
      <nonterminal first="{ID, TRUE, FALSE, NULL_TOKEN, NUMBER}" ruleName="LiteralValue"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{DOLLAR}" name="ParseRegValue">
   <sequence first="{DOLLAR}">
    <action first="{DOLLAR}">
     <token first="{DOLLAR}" name="DOLLAR"/>
    </action>
    <action first="{NUMBER}">
     <token first="{NUMBER}" name="NUMBER"/>
    </action>
   </sequence>
  </rule>
  <rule first="{DOLLAR}" name="ResultRegValue">
   <sequence first="{DOLLAR}">
    <action first="{DOLLAR}">
     <token first="{DOLLAR}" name="DOLLAR"/>
    </action>
    <action first="{NUMBER}">
     <token first="{NUMBER}" name="NUMBER"/>
    </action>
   </sequence>
  </rule>
  <rule first="{AT}" name="ParseSymbolValue">
   <sequence first="{AT}">
    <action first="{AT}">
     <token first="{AT}" name="AT"/>
    </action>
    <action first="{ID}">
     <token first="{ID}" name="ID"/>
    </action>
   </sequence>
  </rule>
  <rule first="{ID, TRUE, FALSE, NULL_TOKEN, NUMBER}" name="LiteralValue">
   <switch first="{ID, TRUE, FALSE, NULL_TOKEN, NUMBER}">
    <case first="{TRUE}">
     <action first="{TRUE}">
      <token first="{TRUE}" name="TRUE"/>
     </action>
    </case>
    <case first="{FALSE}">
     <action first="{FALSE}">
      <token first="{FALSE}" name="FALSE"/>
     </action>
    </case>
    <case first="{NULL_TOKEN}">
     <action first="{NULL_TOKEN}">
      <token first="{NULL_TOKEN}" name="NULL_TOKEN"/>
     </action>
    </case>
    <case first="{NUMBER}">
     <action first="{NUMBER}">
      <token first="{NUMBER}" name="NUMBER"/>
     </action>
    </case>
    <case first="{ID}">
     <action first="{ID}">
      <token first="{ID}" name="ID"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{#, ID, FUNCTION, EXTERN, INLINE, LINK_ONCE, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, RBRACE, AT, EXCLAMATION, TYPEID}" name="FunctionDefinitions">
   <kleene first="{#, ID, FUNCTION, EXTERN, INLINE, LINK_ONCE, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, RBRACE, AT, EXCLAMATION, TYPEID}">
    <group first="{#, ID, FUNCTION, EXTERN, INLINE, LINK_ONCE, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, RBRACE, AT, EXCLAMATION, TYPEID}">
     <choice first="{#, ID, FUNCTION, EXTERN, INLINE, LINK_ONCE, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, RBRACE, AT, EXCLAMATION, TYPEID}">
      <nonterminal first="{EXTERN}" ruleName="FunctionDeclaration"/>
      <nonterminal first="{#, ID, FUNCTION, INLINE, LINK_ONCE, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, RBRACE, AT, EXCLAMATION, TYPEID}" ruleName="FunctionDefinition"/>
     </choice>
    </group>
   </kleene>
  </rule>
  <rule first="{EXTERN}" name="FunctionDeclaration">
   <action first="{EXTERN}">
    <group first="{EXTERN}">
     <sequence first="{EXTERN}">
      <sequence first="{EXTERN}">
       <sequence first="{EXTERN}">
        <action first="{EXTERN}">
         <token first="{EXTERN}" name="EXTERN"/>
        </action>
        <token first="{FUNCTION}" name="FUNCTION"/>
       </sequence>
       <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
        <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseTypeRef"/>
       </action>
      </sequence>
      <action first="{ID}">
       <token first="{ID}" name="ID"/>
      </action>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, ID, FUNCTION, INLINE, LINK_ONCE, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, RBRACE, AT, EXCLAMATION, TYPEID}" name="FunctionDefinition">
   <sequence first="{#, ID, FUNCTION, INLINE, LINK_ONCE, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, RBRACE, AT, EXCLAMATION, TYPEID}">
    <sequence first="{#, ID, FUNCTION, INLINE, LINK_ONCE, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, AT, EXCLAMATION, TYPEID}">
     <sequence first="{#, ID, FUNCTION, INLINE, LINK_ONCE, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, LBRACE, EXCLAMATION, TYPEID}">
      <action first="{#, ID, FUNCTION, INLINE, LINK_ONCE, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, EXCLAMATION, TYPEID}">
       <nonterminal first="{#, ID, FUNCTION, INLINE, LINK_ONCE, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, EXCLAMATION, TYPEID}" ruleName="FunctionHeader"/>
      </action>
      <token first="{LBRACE}" name="LBRACE"/>
     </sequence>
     <kleene first="{#, AT}">
      <nonterminal first="{AT}" ruleName="ParseBasicBlock"/>
     </kleene>
    </sequence>
    <token first="{RBRACE}" name="RBRACE"/>
   </sequence>
  </rule>
  <rule first="{#, ID, FUNCTION, INLINE, LINK_ONCE, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, EXCLAMATION, TYPEID}" name="FunctionHeader">
   <action first="{#, ID, FUNCTION, INLINE, LINK_ONCE, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, EXCLAMATION, TYPEID}">
    <group first="{#, ID, FUNCTION, INLINE, LINK_ONCE, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, EXCLAMATION, TYPEID}">
     <sequence first="{#, ID, FUNCTION, INLINE, LINK_ONCE, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, EXCLAMATION, TYPEID}">
      <sequence first="{#, ID, FUNCTION, INLINE, LINK_ONCE, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
       <sequence first="{#, FUNCTION, INLINE, LINK_ONCE, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
        <sequence first="{#, FUNCTION, INLINE, LINK_ONCE}">
         <sequence first="{#, INLINE, LINK_ONCE}">
          <optional first="{#, INLINE}">
           <group first="{INLINE}">
            <action first="{INLINE}">
             <token first="{INLINE}" name="INLINE"/>
            </action>
           </group>
          </optional>
          <optional first="{#, LINK_ONCE}">
           <group first="{LINK_ONCE}">
            <action first="{LINK_ONCE}">
             <token first="{LINK_ONCE}" name="LINK_ONCE"/>
            </action>
           </group>
          </optional>
         </sequence>
         <action first="{FUNCTION}">
          <token first="{FUNCTION}" name="FUNCTION"/>
         </action>
        </sequence>
        <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
         <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseTypeRef"/>
        </action>
       </sequence>
       <action first="{ID}">
        <token first="{ID}" name="ID"/>
       </action>
      </sequence>
      <optional first="{#, EXCLAMATION}">
       <nonterminal first="{EXCLAMATION}" ruleName="ParseMetadataRef"/>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{AT}" name="ParseBasicBlock">
   <sequence first="{AT}">
    <action first="{AT}">
     <nonterminal first="{AT}" ruleName="Label"/>
    </action>
    <nonterminal first="{STORE, ARG, JMP, BRANCH, CALL, RET, SWITCH, NOP, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Instructions"/>
   </sequence>
  </rule>
  <rule first="{AT}" name="Label">
   <sequence first="{AT}">
    <token first="{AT}" name="AT"/>
    <action first="{NUMBER}">
     <token first="{NUMBER}" name="NUMBER"/>
    </action>
   </sequence>
  </rule>
  <rule first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" name="Operand">
   <sequence first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
    <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
     <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseTypeRef"/>
    </action>
    <action first="{ID, TRUE, FALSE, NULL_TOKEN, AT, DOLLAR, NUMBER}">
     <nonterminal first="{ID, TRUE, FALSE, NULL_TOKEN, AT, DOLLAR, NUMBER}" ruleName="ParseValue"/>
    </action>
   </sequence>
  </rule>
  <rule first="{STORE, ARG, JMP, BRANCH, CALL, RET, SWITCH, NOP, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" name="Instructions">
   <positive first="{STORE, ARG, JMP, BRANCH, CALL, RET, SWITCH, NOP, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
    <group first="{STORE, ARG, JMP, BRANCH, CALL, RET, SWITCH, NOP, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
     <action first="{STORE, ARG, JMP, BRANCH, CALL, RET, SWITCH, NOP, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
      <nonterminal first="{STORE, ARG, JMP, BRANCH, CALL, RET, SWITCH, NOP, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseInstruction"/>
     </action>
    </group>
   </positive>
  </rule>
  <rule first="{STORE, ARG, JMP, BRANCH, CALL, RET, SWITCH, NOP, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" name="ParseInstruction">
   <switch first="{STORE, ARG, JMP, BRANCH, CALL, RET, SWITCH, NOP, VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
    <case first="{STORE}">
     <action first="{STORE}">
      <nonterminal first="{STORE}" ruleName="ParseStoreInstruction"/>
     </action>
    </case>
    <case first="{ARG}">
     <action first="{ARG}">
      <nonterminal first="{ARG}" ruleName="ParseArgInstruction"/>
     </action>
    </case>
    <case first="{JMP}">
     <action first="{JMP}">
      <nonterminal first="{JMP}" ruleName="ParseJmpInstruction"/>
     </action>
    </case>
    <case first="{BRANCH}">
     <action first="{BRANCH}">
      <nonterminal first="{BRANCH}" ruleName="ParseBranchInstruction"/>
     </action>
    </case>
    <case first="{CALL}">
     <action first="{CALL}">
      <nonterminal first="{CALL}" ruleName="ParseProcedureCallInstruction"/>
     </action>
    </case>
    <case first="{RET}">
     <action first="{RET}">
      <nonterminal first="{RET}" ruleName="ParseRetInstruction"/>
     </action>
    </case>
    <case first="{SWITCH}">
     <action first="{SWITCH}">
      <nonterminal first="{SWITCH}" ruleName="ParseSwitchInstruction"/>
     </action>
    </case>
    <case first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
     <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
      <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseValueInstruction"/>
     </action>
    </case>
    <case first="{NOP}">
     <action first="{NOP}">
      <nonterminal first="{NOP}" ruleName="ParseNoOperationInstruction"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{STORE}" name="ParseStoreInstruction">
   <sequence first="{STORE}">
    <sequence first="{STORE}">
     <sequence first="{STORE}">
      <sequence first="{STORE}">
       <sequence first="{STORE}">
        <action first="{STORE}">
         <token first="{STORE}" name="STORE"/>
        </action>
        <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
         <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseTypeRef"/>
        </action>
       </sequence>
       <nonterminal first="{ID, TRUE, FALSE, NULL_TOKEN, AT, DOLLAR, NUMBER}" ruleName="ParseValue"/>
      </sequence>
      <token first="{COMMA}" name="COMMA"/>
     </sequence>
     <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
      <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseTypeRef"/>
     </action>
    </sequence>
    <action first="{ID, TRUE, FALSE, NULL_TOKEN, AT, DOLLAR, NUMBER}">
     <nonterminal first="{ID, TRUE, FALSE, NULL_TOKEN, AT, DOLLAR, NUMBER}" ruleName="ParseValue"/>
    </action>
   </sequence>
  </rule>
  <rule first="{ARG}" name="ParseArgInstruction">
   <sequence first="{ARG}">
    <sequence first="{ARG}">
     <action first="{ARG}">
      <token first="{ARG}" name="ARG"/>
     </action>
     <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
      <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseTypeRef"/>
     </action>
    </sequence>
    <action first="{ID, TRUE, FALSE, NULL_TOKEN, AT, DOLLAR, NUMBER}">
     <nonterminal first="{ID, TRUE, FALSE, NULL_TOKEN, AT, DOLLAR, NUMBER}" ruleName="ParseValue"/>
    </action>
   </sequence>
  </rule>
  <rule first="{JMP}" name="ParseJmpInstruction">
   <sequence first="{JMP}">
    <action first="{JMP}">
     <token first="{JMP}" name="JMP"/>
    </action>
    <action first="{AT}">
     <nonterminal first="{AT}" ruleName="Label"/>
    </action>
   </sequence>
  </rule>
  <rule first="{BRANCH}" name="ParseBranchInstruction">
   <sequence first="{BRANCH}">
    <sequence first="{BRANCH}">
     <sequence first="{BRANCH}">
      <sequence first="{BRANCH}">
       <sequence first="{BRANCH}">
        <sequence first="{BRANCH}">
         <action first="{BRANCH}">
          <token first="{BRANCH}" name="BRANCH"/>
         </action>
         <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
          <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseTypeRef"/>
         </action>
        </sequence>
        <nonterminal first="{ID, TRUE, FALSE, NULL_TOKEN, AT, DOLLAR, NUMBER}" ruleName="ParseValue"/>
       </sequence>
       <token first="{COMMA}" name="COMMA"/>
      </sequence>
      <nonterminal first="{AT}" ruleName="Label"/>
     </sequence>
     <token first="{COMMA}" name="COMMA"/>
    </sequence>
    <action first="{AT}">
     <nonterminal first="{AT}" ruleName="Label"/>
    </action>
   </sequence>
  </rule>
  <rule first="{CALL}" name="ParseProcedureCallInstruction">
   <sequence first="{CALL}">
    <sequence first="{CALL}">
     <action first="{CALL}">
      <token first="{CALL}" name="CALL"/>
     </action>
     <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
      <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseTypeRef"/>
     </action>
    </sequence>
    <action first="{ID, TRUE, FALSE, NULL_TOKEN, AT, DOLLAR, NUMBER}">
     <nonterminal first="{ID, TRUE, FALSE, NULL_TOKEN, AT, DOLLAR, NUMBER}" ruleName="ParseValue"/>
    </action>
   </sequence>
  </rule>
  <rule first="{RET}" name="ParseRetInstruction">
   <sequence first="{RET}">
    <action first="{RET}">
     <token first="{RET}" name="RET"/>
    </action>
    <group first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
     <choice first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
      <action first="{VOID}">
       <group first="{VOID}">
        <difference first="{VOID}">
         <token first="{VOID}" name="VOID"/>
         <group first="{}">
          <sequence first="{}">
           <token first="{}" name="VOID"/>
           <token first="{}" name="AST"/>
          </sequence>
         </group>
        </difference>
       </group>
      </action>
      <sequence first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
       <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
        <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseTypeRef"/>
       </action>
       <action first="{ID, TRUE, FALSE, NULL_TOKEN, AT, DOLLAR, NUMBER}">
        <nonterminal first="{ID, TRUE, FALSE, NULL_TOKEN, AT, DOLLAR, NUMBER}" ruleName="ParseValue"/>
       </action>
      </sequence>
     </choice>
    </group>
   </sequence>
  </rule>
  <rule first="{SWITCH}" name="ParseSwitchInstruction">
   <action first="{SWITCH}">
    <group first="{SWITCH}">
     <sequence first="{SWITCH}">
      <sequence first="{SWITCH}">
       <sequence first="{SWITCH}">
        <sequence first="{SWITCH}">
         <sequence first="{SWITCH}">
          <sequence first="{SWITCH}">
           <sequence first="{SWITCH}">
            <action first="{SWITCH}">
             <token first="{SWITCH}" name="SWITCH"/>
            </action>
            <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
             <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseTypeRef"/>
            </action>
           </sequence>
           <nonterminal first="{ID, TRUE, FALSE, NULL_TOKEN, AT, DOLLAR, NUMBER}" ruleName="ParseValue"/>
          </sequence>
          <action first="{AT}">
           <nonterminal first="{AT}" ruleName="Label"/>
          </action>
         </sequence>
         <token first="{COMMA}" name="COMMA"/>
        </sequence>
        <token first="{LBRACKET}" name="LBRACKET"/>
       </sequence>
       <group first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
        <list first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
         <sequence first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
          <group first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
           <sequence first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
            <sequence first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
             <sequence first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
              <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
               <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseTypeRef"/>
              </action>
              <nonterminal first="{ID, TRUE, FALSE, NULL_TOKEN, AT, DOLLAR, NUMBER}" ruleName="ParseValue"/>
             </sequence>
             <token first="{COMMA}" name="COMMA"/>
            </sequence>
            <action first="{AT}">
             <nonterminal first="{AT}" ruleName="Label"/>
            </action>
           </sequence>
          </group>
          <kleene first="{#, COLON}">
           <sequence first="{COLON}">
            <token first="{COLON}" name="COLON"/>
            <group first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
             <sequence first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
              <sequence first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
               <sequence first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
                <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
                 <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseTypeRef"/>
                </action>
                <nonterminal first="{ID, TRUE, FALSE, NULL_TOKEN, AT, DOLLAR, NUMBER}" ruleName="ParseValue"/>
               </sequence>
               <token first="{COMMA}" name="COMMA"/>
              </sequence>
              <action first="{AT}">
               <nonterminal first="{AT}" ruleName="Label"/>
              </action>
             </sequence>
            </group>
           </sequence>
          </kleene>
         </sequence>
        </list>
       </group>
      </sequence>
      <token first="{RBRACKET}" name="RBRACKET"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" name="ParseValueInstruction">
   <sequence first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
    <sequence first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
     <sequence first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
      <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
       <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseTypeRef"/>
      </action>
      <action first="{DOLLAR}">
       <nonterminal first="{DOLLAR}" ruleName="ResultRegValue"/>
      </action>
     </sequence>
     <token first="{ASSIGN}" name="ASSIGN"/>
    </sequence>
    <action first="{CALL, NOT, NEG, SIGNEXTEND, ZEROEXTEND, FPEXTEND, TRUNCATE, BITCAST, INTTOFLOAT, FLOATTOINT, INTTOPTR, PTRTOINT, ADD, SUB, MUL, DIV, MOD, AND, OR, XOR, SHL, SHR, EQUAL, LESS, PARAM, LOCAL, LOAD, ELEMADDR, PTROFFSET, PTRDIFF}">
     <nonterminal first="{CALL, NOT, NEG, SIGNEXTEND, ZEROEXTEND, FPEXTEND, TRUNCATE, BITCAST, INTTOFLOAT, FLOATTOINT, INTTOPTR, PTRTOINT, ADD, SUB, MUL, DIV, MOD, AND, OR, XOR, SHL, SHR, EQUAL, LESS, PARAM, LOCAL, LOAD, ELEMADDR, PTROFFSET, PTRDIFF}" ruleName="Operation"/>
    </action>
   </sequence>
  </rule>
  <rule first="{CALL, NOT, NEG, SIGNEXTEND, ZEROEXTEND, FPEXTEND, TRUNCATE, BITCAST, INTTOFLOAT, FLOATTOINT, INTTOPTR, PTRTOINT, ADD, SUB, MUL, DIV, MOD, AND, OR, XOR, SHL, SHR, EQUAL, LESS, PARAM, LOCAL, LOAD, ELEMADDR, PTROFFSET, PTRDIFF}" name="Operation">
   <switch first="{CALL, NOT, NEG, SIGNEXTEND, ZEROEXTEND, FPEXTEND, TRUNCATE, BITCAST, INTTOFLOAT, FLOATTOINT, INTTOPTR, PTRTOINT, ADD, SUB, MUL, DIV, MOD, AND, OR, XOR, SHL, SHR, EQUAL, LESS, PARAM, LOCAL, LOAD, ELEMADDR, PTROFFSET, PTRDIFF}">
    <case first="{NOT, NEG, SIGNEXTEND, ZEROEXTEND, FPEXTEND, TRUNCATE, BITCAST, INTTOFLOAT, FLOATTOINT, INTTOPTR, PTRTOINT}">
     <action first="{NOT, NEG, SIGNEXTEND, ZEROEXTEND, FPEXTEND, TRUNCATE, BITCAST, INTTOFLOAT, FLOATTOINT, INTTOPTR, PTRTOINT}">
      <nonterminal first="{NOT, NEG, SIGNEXTEND, ZEROEXTEND, FPEXTEND, TRUNCATE, BITCAST, INTTOFLOAT, FLOATTOINT, INTTOPTR, PTRTOINT}" ruleName="ParseUnaryInstruction"/>
     </action>
    </case>
    <case first="{ADD, SUB, MUL, DIV, MOD, AND, OR, XOR, SHL, SHR, EQUAL, LESS}">
     <action first="{ADD, SUB, MUL, DIV, MOD, AND, OR, XOR, SHL, SHR, EQUAL, LESS}">
      <nonterminal first="{ADD, SUB, MUL, DIV, MOD, AND, OR, XOR, SHL, SHR, EQUAL, LESS}" ruleName="ParseBinaryInstruction"/>
     </action>
    </case>
    <case first="{PARAM}">
     <action first="{PARAM}">
      <nonterminal first="{PARAM}" ruleName="ParseParamInstruction"/>
     </action>
    </case>
    <case first="{LOCAL}">
     <action first="{LOCAL}">
      <nonterminal first="{LOCAL}" ruleName="ParseLocalInstruction"/>
     </action>
    </case>
    <case first="{LOAD}">
     <action first="{LOAD}">
      <nonterminal first="{LOAD}" ruleName="ParseLoadInstruction"/>
     </action>
    </case>
    <case first="{ELEMADDR}">
     <action first="{ELEMADDR}">
      <nonterminal first="{ELEMADDR}" ruleName="ParseElemAddrInstruction"/>
     </action>
    </case>
    <case first="{PTROFFSET}">
     <action first="{PTROFFSET}">
      <nonterminal first="{PTROFFSET}" ruleName="ParsePtrOffsetInstruction"/>
     </action>
    </case>
    <case first="{PTRDIFF}">
     <action first="{PTRDIFF}">
      <nonterminal first="{PTRDIFF}" ruleName="ParsePtrDiffInstruction"/>
     </action>
    </case>
    <case first="{CALL}">
     <action first="{CALL}">
      <nonterminal first="{CALL}" ruleName="ParseFunctionCallInstruction"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{NOT, NEG, SIGNEXTEND, ZEROEXTEND, FPEXTEND, TRUNCATE, BITCAST, INTTOFLOAT, FLOATTOINT, INTTOPTR, PTRTOINT}" name="ParseUnaryInstruction">
   <switch first="{NOT, NEG, SIGNEXTEND, ZEROEXTEND, FPEXTEND, TRUNCATE, BITCAST, INTTOFLOAT, FLOATTOINT, INTTOPTR, PTRTOINT}">
    <case first="{NOT}">
     <sequence first="{NOT}">
      <action first="{NOT}">
       <token first="{NOT}" name="NOT"/>
      </action>
      <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
       <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
      </action>
     </sequence>
    </case>
    <case first="{NEG}">
     <sequence first="{NEG}">
      <action first="{NEG}">
       <token first="{NEG}" name="NEG"/>
      </action>
      <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
       <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
      </action>
     </sequence>
    </case>
    <case first="{SIGNEXTEND}">
     <sequence first="{SIGNEXTEND}">
      <action first="{SIGNEXTEND}">
       <token first="{SIGNEXTEND}" name="SIGNEXTEND"/>
      </action>
      <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
       <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
      </action>
     </sequence>
    </case>
    <case first="{ZEROEXTEND}">
     <sequence first="{ZEROEXTEND}">
      <action first="{ZEROEXTEND}">
       <token first="{ZEROEXTEND}" name="ZEROEXTEND"/>
      </action>
      <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
       <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
      </action>
     </sequence>
    </case>
    <case first="{FPEXTEND}">
     <sequence first="{FPEXTEND}">
      <action first="{FPEXTEND}">
       <token first="{FPEXTEND}" name="FPEXTEND"/>
      </action>
      <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
       <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
      </action>
     </sequence>
    </case>
    <case first="{TRUNCATE}">
     <sequence first="{TRUNCATE}">
      <action first="{TRUNCATE}">
       <token first="{TRUNCATE}" name="TRUNCATE"/>
      </action>
      <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
       <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
      </action>
     </sequence>
    </case>
    <case first="{BITCAST}">
     <sequence first="{BITCAST}">
      <action first="{BITCAST}">
       <token first="{BITCAST}" name="BITCAST"/>
      </action>
      <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
       <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
      </action>
     </sequence>
    </case>
    <case first="{INTTOFLOAT}">
     <sequence first="{INTTOFLOAT}">
      <action first="{INTTOFLOAT}">
       <token first="{INTTOFLOAT}" name="INTTOFLOAT"/>
      </action>
      <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
       <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
      </action>
     </sequence>
    </case>
    <case first="{FLOATTOINT}">
     <sequence first="{FLOATTOINT}">
      <action first="{FLOATTOINT}">
       <token first="{FLOATTOINT}" name="FLOATTOINT"/>
      </action>
      <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
       <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
      </action>
     </sequence>
    </case>
    <case first="{INTTOPTR}">
     <sequence first="{INTTOPTR}">
      <action first="{INTTOPTR}">
       <token first="{INTTOPTR}" name="INTTOPTR"/>
      </action>
      <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
       <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
      </action>
     </sequence>
    </case>
    <case first="{PTRTOINT}">
     <sequence first="{PTRTOINT}">
      <action first="{PTRTOINT}">
       <token first="{PTRTOINT}" name="PTRTOINT"/>
      </action>
      <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
       <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
      </action>
     </sequence>
    </case>
   </switch>
  </rule>
  <rule first="{ADD, SUB, MUL, DIV, MOD, AND, OR, XOR, SHL, SHR, EQUAL, LESS}" name="ParseBinaryInstruction">
   <switch first="{ADD, SUB, MUL, DIV, MOD, AND, OR, XOR, SHL, SHR, EQUAL, LESS}">
    <case first="{ADD}">
     <action first="{ADD}">
      <group first="{ADD}">
       <sequence first="{ADD}">
        <sequence first="{ADD}">
         <sequence first="{ADD}">
          <action first="{ADD}">
           <token first="{ADD}" name="ADD"/>
          </action>
          <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
         </sequence>
         <token first="{COMMA}" name="COMMA"/>
        </sequence>
        <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
       </sequence>
      </group>
     </action>
    </case>
    <case first="{SUB}">
     <action first="{SUB}">
      <group first="{SUB}">
       <sequence first="{SUB}">
        <sequence first="{SUB}">
         <sequence first="{SUB}">
          <action first="{SUB}">
           <token first="{SUB}" name="SUB"/>
          </action>
          <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
         </sequence>
         <token first="{COMMA}" name="COMMA"/>
        </sequence>
        <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
       </sequence>
      </group>
     </action>
    </case>
    <case first="{MUL}">
     <action first="{MUL}">
      <group first="{MUL}">
       <sequence first="{MUL}">
        <sequence first="{MUL}">
         <sequence first="{MUL}">
          <action first="{MUL}">
           <token first="{MUL}" name="MUL"/>
          </action>
          <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
         </sequence>
         <token first="{COMMA}" name="COMMA"/>
        </sequence>
        <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
       </sequence>
      </group>
     </action>
    </case>
    <case first="{DIV}">
     <action first="{DIV}">
      <group first="{DIV}">
       <sequence first="{DIV}">
        <sequence first="{DIV}">
         <sequence first="{DIV}">
          <action first="{DIV}">
           <token first="{DIV}" name="DIV"/>
          </action>
          <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
         </sequence>
         <token first="{COMMA}" name="COMMA"/>
        </sequence>
        <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
       </sequence>
      </group>
     </action>
    </case>
    <case first="{MOD}">
     <action first="{MOD}">
      <group first="{MOD}">
       <sequence first="{MOD}">
        <sequence first="{MOD}">
         <sequence first="{MOD}">
          <action first="{MOD}">
           <token first="{MOD}" name="MOD"/>
          </action>
          <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
         </sequence>
         <token first="{COMMA}" name="COMMA"/>
        </sequence>
        <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
       </sequence>
      </group>
     </action>
    </case>
    <case first="{AND}">
     <action first="{AND}">
      <group first="{AND}">
       <sequence first="{AND}">
        <sequence first="{AND}">
         <sequence first="{AND}">
          <action first="{AND}">
           <token first="{AND}" name="AND"/>
          </action>
          <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
         </sequence>
         <token first="{COMMA}" name="COMMA"/>
        </sequence>
        <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
       </sequence>
      </group>
     </action>
    </case>
    <case first="{OR}">
     <action first="{OR}">
      <group first="{OR}">
       <sequence first="{OR}">
        <sequence first="{OR}">
         <sequence first="{OR}">
          <action first="{OR}">
           <token first="{OR}" name="OR"/>
          </action>
          <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
         </sequence>
         <token first="{COMMA}" name="COMMA"/>
        </sequence>
        <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
       </sequence>
      </group>
     </action>
    </case>
    <case first="{XOR}">
     <action first="{XOR}">
      <group first="{XOR}">
       <sequence first="{XOR}">
        <sequence first="{XOR}">
         <sequence first="{XOR}">
          <action first="{XOR}">
           <token first="{XOR}" name="XOR"/>
          </action>
          <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
         </sequence>
         <token first="{COMMA}" name="COMMA"/>
        </sequence>
        <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
       </sequence>
      </group>
     </action>
    </case>
    <case first="{SHL}">
     <action first="{SHL}">
      <group first="{SHL}">
       <sequence first="{SHL}">
        <sequence first="{SHL}">
         <sequence first="{SHL}">
          <action first="{SHL}">
           <token first="{SHL}" name="SHL"/>
          </action>
          <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
         </sequence>
         <token first="{COMMA}" name="COMMA"/>
        </sequence>
        <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
       </sequence>
      </group>
     </action>
    </case>
    <case first="{SHR}">
     <action first="{SHR}">
      <group first="{SHR}">
       <sequence first="{SHR}">
        <sequence first="{SHR}">
         <sequence first="{SHR}">
          <action first="{SHR}">
           <token first="{SHR}" name="SHR"/>
          </action>
          <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
         </sequence>
         <token first="{COMMA}" name="COMMA"/>
        </sequence>
        <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
       </sequence>
      </group>
     </action>
    </case>
    <case first="{EQUAL}">
     <action first="{EQUAL}">
      <group first="{EQUAL}">
       <sequence first="{EQUAL}">
        <sequence first="{EQUAL}">
         <sequence first="{EQUAL}">
          <action first="{EQUAL}">
           <token first="{EQUAL}" name="EQUAL"/>
          </action>
          <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
         </sequence>
         <token first="{COMMA}" name="COMMA"/>
        </sequence>
        <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
       </sequence>
      </group>
     </action>
    </case>
    <case first="{LESS}">
     <action first="{LESS}">
      <group first="{LESS}">
       <sequence first="{LESS}">
        <sequence first="{LESS}">
         <sequence first="{LESS}">
          <action first="{LESS}">
           <token first="{LESS}" name="LESS"/>
          </action>
          <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
         </sequence>
         <token first="{COMMA}" name="COMMA"/>
        </sequence>
        <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
       </sequence>
      </group>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{PARAM}" name="ParseParamInstruction">
   <action first="{PARAM}">
    <token first="{PARAM}" name="PARAM"/>
   </action>
  </rule>
  <rule first="{LOCAL}" name="ParseLocalInstruction">
   <sequence first="{LOCAL}">
    <action first="{LOCAL}">
     <token first="{LOCAL}" name="LOCAL"/>
    </action>
    <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
     <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseTypeRef"/>
    </action>
   </sequence>
  </rule>
  <rule first="{LOAD}" name="ParseLoadInstruction">
   <sequence first="{LOAD}">
    <action first="{LOAD}">
     <token first="{LOAD}" name="LOAD"/>
    </action>
    <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
     <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
    </action>
   </sequence>
  </rule>
  <rule first="{ELEMADDR}" name="ParseElemAddrInstruction">
   <sequence first="{ELEMADDR}">
    <sequence first="{ELEMADDR}">
     <sequence first="{ELEMADDR}">
      <action first="{ELEMADDR}">
       <token first="{ELEMADDR}" name="ELEMADDR"/>
      </action>
      <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
     </sequence>
     <token first="{COMMA}" name="COMMA"/>
    </sequence>
    <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
     <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
    </action>
   </sequence>
  </rule>
  <rule first="{PTROFFSET}" name="ParsePtrOffsetInstruction">
   <sequence first="{PTROFFSET}">
    <sequence first="{PTROFFSET}">
     <sequence first="{PTROFFSET}">
      <action first="{PTROFFSET}">
       <token first="{PTROFFSET}" name="PTROFFSET"/>
      </action>
      <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
     </sequence>
     <token first="{COMMA}" name="COMMA"/>
    </sequence>
    <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
     <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
    </action>
   </sequence>
  </rule>
  <rule first="{PTRDIFF}" name="ParsePtrDiffInstruction">
   <sequence first="{PTRDIFF}">
    <sequence first="{PTRDIFF}">
     <sequence first="{PTRDIFF}">
      <action first="{PTRDIFF}">
       <token first="{PTRDIFF}" name="PTRDIFF"/>
      </action>
      <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
     </sequence>
     <token first="{COMMA}" name="COMMA"/>
    </sequence>
    <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
     <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="Operand"/>
    </action>
   </sequence>
  </rule>
  <rule first="{CALL}" name="ParseFunctionCallInstruction">
   <sequence first="{CALL}">
    <sequence first="{CALL}">
     <action first="{CALL}">
      <token first="{CALL}" name="CALL"/>
     </action>
     <action first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}">
      <nonterminal first="{VOID, BOOL, SBYTE, BYTE, SHORT, USHORT, INT, UINT, LONG, ULONG, FLOAT, DOUBLE, TYPEID}" ruleName="ParseTypeRef"/>
     </action>
    </sequence>
    <action first="{ID, TRUE, FALSE, NULL_TOKEN, AT, DOLLAR, NUMBER}">
     <nonterminal first="{ID, TRUE, FALSE, NULL_TOKEN, AT, DOLLAR, NUMBER}" ruleName="ParseValue"/>
    </action>
   </sequence>
  </rule>
  <rule first="{NOP}" name="ParseNoOperationInstruction">
   <action first="{NOP}">
    <token first="{NOP}" name="NOP"/>
   </action>
  </rule>
  <rule first="{METADATA}" name="ParseMetadata">
   <sequence first="{METADATA}">
    <sequence first="{METADATA}">
     <sequence first="{METADATA}">
      <token first="{METADATA}" name="METADATA"/>
      <token first="{LBRACE}" name="LBRACE"/>
     </sequence>
     <kleene first="{#, EXCLAMATION}">
      <nonterminal first="{EXCLAMATION}" ruleName="ParseMetadataStruct"/>
     </kleene>
    </sequence>
    <action first="{RBRACE}">
     <token first="{RBRACE}" name="RBRACE"/>
    </action>
   </sequence>
  </rule>
  <rule first="{EXCLAMATION}" name="ParseMetadataStruct">
   <sequence first="{EXCLAMATION}">
    <sequence first="{EXCLAMATION}">
     <sequence first="{EXCLAMATION}">
      <sequence first="{EXCLAMATION}">
       <sequence first="{EXCLAMATION}">
        <token first="{EXCLAMATION}" name="EXCLAMATION"/>
        <action first="{NUMBER}">
         <token first="{NUMBER}" name="NUMBER"/>
        </action>
       </sequence>
       <token first="{ASSIGN}" name="ASSIGN"/>
      </sequence>
      <token first="{LBRACE}" name="LBRACE"/>
     </sequence>
     <optional first="{#, ID}">
      <group first="{ID}">
       <sequence first="{ID}">
        <nonterminal first="{ID}" ruleName="ParseMetadataField"/>
        <kleene first="{#, COMMA}">
         <group first="{COMMA}">
          <sequence first="{COMMA}">
           <token first="{COMMA}" name="COMMA"/>
           <nonterminal first="{ID}" ruleName="ParseMetadataField"/>
          </sequence>
         </group>
        </kleene>
       </sequence>
      </group>
     </optional>
    </sequence>
    <token first="{RBRACE}" name="RBRACE"/>
   </sequence>
  </rule>
  <rule first="{ID}" name="ParseMetadataField">
   <sequence first="{ID}">
    <sequence first="{ID}">
     <action first="{ID}">
      <token first="{ID}" name="ID"/>
     </action>
     <token first="{COLON}" name="COLON"/>
    </sequence>
    <action first="{TRUE, FALSE, EXCLAMATION, STRING, NUMBER}">
     <nonterminal first="{TRUE, FALSE, EXCLAMATION, STRING, NUMBER}" ruleName="ParseMetadataItem"/>
    </action>
   </sequence>
  </rule>
  <rule first="{TRUE, FALSE, EXCLAMATION, STRING, NUMBER}" name="ParseMetadataItem">
   <switch first="{TRUE, FALSE, EXCLAMATION, STRING, NUMBER}">
    <case first="{TRUE, FALSE}">
     <action first="{TRUE, FALSE}">
      <nonterminal first="{TRUE, FALSE}" ruleName="ParseMetadataBool"/>
     </action>
    </case>
    <case first="{NUMBER}">
     <action first="{NUMBER}">
      <nonterminal first="{NUMBER}" ruleName="ParseMetadataLong"/>
     </action>
    </case>
    <case first="{STRING}">
     <action first="{STRING}">
      <nonterminal first="{STRING}" ruleName="ParseMetadataString"/>
     </action>
    </case>
    <case first="{EXCLAMATION}">
     <action first="{EXCLAMATION}">
      <nonterminal first="{EXCLAMATION}" ruleName="ParseMetadataRef"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{TRUE, FALSE}" name="ParseMetadataBool">
   <switch first="{TRUE, FALSE}">
    <case first="{TRUE}">
     <action first="{TRUE}">
      <token first="{TRUE}" name="TRUE"/>
     </action>
    </case>
    <case first="{FALSE}">
     <action first="{FALSE}">
      <token first="{FALSE}" name="FALSE"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{NUMBER}" name="ParseMetadataLong">
   <action first="{NUMBER}">
    <token first="{NUMBER}" name="NUMBER"/>
   </action>
  </rule>
  <rule first="{STRING}" name="ParseMetadataString">
   <action first="{STRING}">
    <token first="{STRING}" name="STRING"/>
   </action>
  </rule>
  <rule first="{EXCLAMATION}" name="ParseMetadataRef">
   <sequence first="{EXCLAMATION}">
    <token first="{EXCLAMATION}" name="EXCLAMATION"/>
    <action first="{NUMBER}">
     <token first="{NUMBER}" name="NUMBER"/>
    </action>
   </sequence>
  </rule>
 </grammar>
</parserFile>
