<parserFile>
 <grammar name="DeclaratorParser">
  <rule first="{#, #, #, ID, STAR, COLON_COLON, OPERATOR, AMP}" name="InitDeclaratorList">
   <action first="{#, #, #, ID, STAR, COLON_COLON, OPERATOR, AMP}">
    <group first="{#, #, #, ID, STAR, COLON_COLON, OPERATOR, AMP}">
     <sequence first="{#, #, #, ID, STAR, COLON_COLON, OPERATOR, AMP}">
      <action first="{#}">
       <empty first="{#}"/>
      </action>
      <group first="{#, #, ID, STAR, COLON_COLON, OPERATOR, AMP}">
       <list first="{#, #, ID, STAR, COLON_COLON, OPERATOR, AMP}">
        <sequence first="{#, #, ID, STAR, COLON_COLON, OPERATOR, AMP}">
         <action first="{#, #, ID, STAR, COLON_COLON, OPERATOR, AMP}">
          <nonterminal first="{#, #, ID, STAR, COLON_COLON, OPERATOR, AMP}" ruleName="InitDeclarator"/>
         </action>
         <kleene first="{#, COMMA}">
          <sequence first="{COMMA}">
           <token first="{COMMA}" name="COMMA"/>
           <action first="{#, #, ID, STAR, COLON_COLON, OPERATOR, AMP}">
            <nonterminal first="{#, #, ID, STAR, COLON_COLON, OPERATOR, AMP}" ruleName="InitDeclarator"/>
           </action>
          </sequence>
         </kleene>
        </sequence>
       </list>
      </group>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, #, ID, STAR, COLON_COLON, OPERATOR, AMP}" name="InitDeclarator">
   <action first="{#, #, ID, STAR, COLON_COLON, OPERATOR, AMP}">
    <group first="{#, #, ID, STAR, COLON_COLON, OPERATOR, AMP}">
     <sequence first="{#, #, ID, STAR, COLON_COLON, OPERATOR, AMP}">
      <nonterminal first="{#, #, ID, STAR, COLON_COLON, OPERATOR, AMP}" ruleName="Declarator"/>
      <optional first="{#, ASSIGN, LPAREN}">
       <nonterminal first="{ASSIGN, LPAREN}" ruleName="Initializer"/>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, #, ID, STAR, COLON_COLON, OPERATOR, AMP}" name="Declarator">
   <action first="{#, #, ID, STAR, COLON_COLON, OPERATOR, AMP}">
    <group first="{#, #, ID, STAR, COLON_COLON, OPERATOR, AMP}">
     <choice first="{#, #, ID, STAR, COLON_COLON, OPERATOR, AMP}">
      <action first="{#, #, ID, COLON_COLON, OPERATOR}">
       <nonterminal first="{#, #, ID, COLON_COLON, OPERATOR}" ruleName="DirectDeclarator"/>
      </action>
      <sequence first="{STAR, AMP}">
       <action first="{STAR, AMP}">
        <nonterminal first="{STAR, AMP}" ruleName="PtrOperator"/>
       </action>
       <action first="{#, #, ID, STAR, COLON_COLON, OPERATOR, AMP}">
        <nonterminal first="{#, #, ID, STAR, COLON_COLON, OPERATOR, AMP}" ruleName="Declarator"/>
       </action>
      </sequence>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{#, #, ID, COLON_COLON, OPERATOR}" name="DirectDeclarator">
   <action first="{#, #, ID, COLON_COLON, OPERATOR}">
    <group first="{#, #, ID, COLON_COLON, OPERATOR}">
     <sequence first="{#, #, ID, COLON_COLON, OPERATOR}">
      <action first="{#, #, ID, COLON_COLON, OPERATOR}">
       <nonterminal first="{#, #, ID, COLON_COLON, OPERATOR}" ruleName="DeclaratorId"/>
      </action>
      <kleene first="{#, LPAREN, LBRACKET}">
       <group first="{LPAREN, LBRACKET}">
        <choice first="{LPAREN, LBRACKET}">
         <choice first="{LBRACKET}">
          <sequence first="{LBRACKET}">
           <sequence first="{LBRACKET}">
            <token first="{LBRACKET}" name="LBRACKET"/>
            <nonterminal first="{CHAR_LITERAL, #, #, STRING_LITERAL, FLOATING_LITERAL, INTEGER_LITERAL, ID, DELETE, TRUE, FALSE, NULLPTR, NEW, LEQ, MINUS, PLUS_ASSIGN, SHIFT_RIGHT, DISJUNCTION, ARROW_STAR, NEQ, AMP_AMP, SHIFT_LEFT, DOT_STAR, STAR, DIV, PLUS_PLUS, REM, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, MINUS_ASSIGN, DIV_ASSIGN, EQ, REM_ASSIGN, GEQ, PLUS, STATIC_CAST, VOID, XOR_ASSIGN, SIZEOF, REINTERPRET_CAST, CONST_CAST, SHIFT_LEFT_ASSIGN, BOOL, INT, DOUBLE, VOLATILE, OR_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, OPERATOR, SIGNED, LONG, TYPEID, THIS, DYNAMIC_CAST, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT, COMMA, TILDE, LPAREN, LBRACKET, AMP, RANGLE, LANGLE, ARROW, EXCLAMATION, PIPE, QUEST, CARET, DOT}" ruleName="ConstantExpression"/>
           </sequence>
           <action first="{RBRACKET}">
            <token first="{RBRACKET}" name="RBRACKET"/>
           </action>
          </sequence>
          <sequence first="{LBRACKET}">
           <token first="{LBRACKET}" name="LBRACKET"/>
           <action first="{RBRACKET}">
            <token first="{RBRACKET}" name="RBRACKET"/>
           </action>
          </sequence>
         </choice>
         <sequence first="{LPAREN}">
          <sequence first="{LPAREN}">
           <token first="{LPAREN}" name="LPAREN"/>
           <nonterminal first="{#, #, ID, STAR, COLON_COLON, OPERATOR, AMP}" ruleName="Declarator"/>
          </sequence>
          <action first="{RPAREN}">
           <token first="{RPAREN}" name="RPAREN"/>
          </action>
         </sequence>
        </choice>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, #, ID, COLON_COLON, OPERATOR}" name="DeclaratorId">
   <choice first="{#, #, ID, COLON_COLON, OPERATOR}">
    <action first="{#, #, ID, COLON_COLON, OPERATOR}">
     <nonterminal first="{#, #, ID, COLON_COLON, OPERATOR}" ruleName="IdExpression"/>
    </action>
    <action first="{#, ID, COLON_COLON}">
     <nonterminal first="{#, ID, COLON_COLON}" ruleName="TypeName"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, #, ID, COLON_COLON, VOID, BOOL, INT, DOUBLE, VOLATILE, SIGNED, LONG, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT}" name="TypeId">
   <sequence first="{#, #, ID, COLON_COLON, VOID, BOOL, INT, DOUBLE, VOLATILE, SIGNED, LONG, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT}">
    <action first="{#}">
     <empty first="{#}"/>
    </action>
    <action first="{#, ID, COLON_COLON, VOID, BOOL, INT, DOUBLE, VOLATILE, SIGNED, LONG, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT}">
     <group first="{#, ID, COLON_COLON, VOID, BOOL, INT, DOUBLE, VOLATILE, SIGNED, LONG, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT}">
      <sequence first="{#, ID, COLON_COLON, VOID, BOOL, INT, DOUBLE, VOLATILE, SIGNED, LONG, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT}">
       <group first="{#, ID, COLON_COLON, VOID, BOOL, INT, DOUBLE, VOLATILE, SIGNED, LONG, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT}">
        <choice first="{#, ID, COLON_COLON, VOID, BOOL, INT, DOUBLE, VOLATILE, SIGNED, LONG, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT}">
         <nonterminal first="{VOID, BOOL, INT, DOUBLE, VOLATILE, SIGNED, LONG, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT}" ruleName="TypeSpecifierSeq"/>
         <action first="{#, ID, COLON_COLON}">
          <nonterminal first="{#, ID, COLON_COLON}" ruleName="TypeName"/>
         </action>
        </choice>
       </group>
       <optional first="{#, STAR, LPAREN, LBRACKET, AMP}">
        <group first="{STAR, LPAREN, LBRACKET, AMP}">
         <action first="{STAR, LPAREN, LBRACKET, AMP}">
          <nonterminal first="{STAR, LPAREN, LBRACKET, AMP}" ruleName="AbstractDeclarator"/>
         </action>
        </group>
       </optional>
      </sequence>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{#, #, ID, COLON_COLON, VOID, BOOL, INT, DOUBLE, VOLATILE, SIGNED, LONG, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT}" name="Type">
   <sequence first="{#, #, ID, COLON_COLON, VOID, BOOL, INT, DOUBLE, VOLATILE, SIGNED, LONG, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT}">
    <action first="{#}">
     <empty first="{#}"/>
    </action>
    <action first="{#, ID, COLON_COLON, VOID, BOOL, INT, DOUBLE, VOLATILE, SIGNED, LONG, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT}">
     <group first="{#, ID, COLON_COLON, VOID, BOOL, INT, DOUBLE, VOLATILE, SIGNED, LONG, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT}">
      <choice first="{#, ID, COLON_COLON, VOID, BOOL, INT, DOUBLE, VOLATILE, SIGNED, LONG, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT}">
       <positive first="{VOID, BOOL, INT, DOUBLE, VOLATILE, SIGNED, LONG, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT}">
        <group first="{VOID, BOOL, INT, DOUBLE, VOLATILE, SIGNED, LONG, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT}">
         <action first="{VOID, BOOL, INT, DOUBLE, VOLATILE, SIGNED, LONG, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT}">
          <nonterminal first="{VOID, BOOL, INT, DOUBLE, VOLATILE, SIGNED, LONG, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT}" ruleName="TypeSpecifier"/>
         </action>
        </group>
       </positive>
       <action first="{#, ID, COLON_COLON}">
        <nonterminal first="{#, ID, COLON_COLON}" ruleName="TypeName"/>
       </action>
      </choice>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{VOID, BOOL, INT, DOUBLE, VOLATILE, SIGNED, LONG, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT}" name="TypeSpecifierSeq">
   <positive first="{VOID, BOOL, INT, DOUBLE, VOLATILE, SIGNED, LONG, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT}">
    <group first="{VOID, BOOL, INT, DOUBLE, VOLATILE, SIGNED, LONG, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT}">
     <action first="{VOID, BOOL, INT, DOUBLE, VOLATILE, SIGNED, LONG, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT}">
      <nonterminal first="{VOID, BOOL, INT, DOUBLE, VOLATILE, SIGNED, LONG, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT}" ruleName="TypeSpecifier"/>
     </action>
    </group>
   </positive>
  </rule>
  <rule first="{STAR, LPAREN, LBRACKET, AMP}" name="AbstractDeclarator">
   <action first="{STAR, LPAREN, LBRACKET, AMP}">
    <group first="{STAR, LPAREN, LBRACKET, AMP}">
     <choice first="{STAR, LPAREN, LBRACKET, AMP}">
      <sequence first="{STAR, AMP}">
       <action first="{STAR, AMP}">
        <nonterminal first="{STAR, AMP}" ruleName="PtrOperator"/>
       </action>
       <optional first="{#, STAR, LPAREN, LBRACKET, AMP}">
        <group first="{STAR, LPAREN, LBRACKET, AMP}">
         <action first="{STAR, LPAREN, LBRACKET, AMP}">
          <nonterminal first="{STAR, LPAREN, LBRACKET, AMP}" ruleName="AbstractDeclarator"/>
         </action>
        </group>
       </optional>
      </sequence>
      <action first="{LPAREN, LBRACKET}">
       <nonterminal first="{LPAREN, LBRACKET}" ruleName="DirectAbstractDeclarator"/>
      </action>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{LPAREN, LBRACKET}" name="DirectAbstractDeclarator">
   <action first="{LPAREN, LBRACKET}">
    <group first="{LPAREN, LBRACKET}">
     <positive first="{LPAREN, LBRACKET}">
      <group first="{LPAREN, LBRACKET}">
       <choice first="{LPAREN, LBRACKET}">
        <choice first="{LBRACKET}">
         <sequence first="{LBRACKET}">
          <sequence first="{LBRACKET}">
           <token first="{LBRACKET}" name="LBRACKET"/>
           <nonterminal first="{CHAR_LITERAL, #, #, STRING_LITERAL, FLOATING_LITERAL, INTEGER_LITERAL, ID, DELETE, TRUE, FALSE, NULLPTR, NEW, LEQ, MINUS, PLUS_ASSIGN, SHIFT_RIGHT, DISJUNCTION, ARROW_STAR, NEQ, AMP_AMP, SHIFT_LEFT, DOT_STAR, STAR, DIV, PLUS_PLUS, REM, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, MINUS_ASSIGN, DIV_ASSIGN, EQ, REM_ASSIGN, GEQ, PLUS, STATIC_CAST, VOID, XOR_ASSIGN, SIZEOF, REINTERPRET_CAST, CONST_CAST, SHIFT_LEFT_ASSIGN, BOOL, INT, DOUBLE, VOLATILE, OR_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, OPERATOR, SIGNED, LONG, TYPEID, THIS, DYNAMIC_CAST, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT, COMMA, TILDE, LPAREN, LBRACKET, AMP, RANGLE, LANGLE, ARROW, EXCLAMATION, PIPE, QUEST, CARET, DOT}" ruleName="ConstantExpression"/>
          </sequence>
          <action first="{RBRACKET}">
           <token first="{RBRACKET}" name="RBRACKET"/>
          </action>
         </sequence>
         <sequence first="{LBRACKET}">
          <token first="{LBRACKET}" name="LBRACKET"/>
          <action first="{RBRACKET}">
           <token first="{RBRACKET}" name="RBRACKET"/>
          </action>
         </sequence>
        </choice>
        <sequence first="{LPAREN}">
         <sequence first="{LPAREN}">
          <token first="{LPAREN}" name="LPAREN"/>
          <nonterminal first="{STAR, LPAREN, LBRACKET, AMP}" ruleName="AbstractDeclarator"/>
         </sequence>
         <action first="{RPAREN}">
          <token first="{RPAREN}" name="RPAREN"/>
         </action>
        </sequence>
       </choice>
      </group>
     </positive>
    </group>
   </action>
  </rule>
  <rule first="{STAR, AMP}" name="PtrOperator">
   <action first="{STAR, AMP}">
    <group first="{STAR, AMP}">
     <choice first="{STAR, AMP}">
      <sequence first="{STAR}">
       <action first="{STAR}">
        <token first="{STAR}" name="STAR"/>
       </action>
       <optional first="{#, VOLATILE, CONST}">
        <group first="{VOLATILE, CONST}">
         <action first="{VOLATILE, CONST}">
          <nonterminal first="{VOLATILE, CONST}" ruleName="CVQualifierSeq"/>
         </action>
        </group>
       </optional>
      </sequence>
      <action first="{AMP}">
       <token first="{AMP}" name="AMP"/>
      </action>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{VOLATILE, CONST}" name="CVQualifierSeq">
   <action first="{VOLATILE, CONST}">
    <group first="{VOLATILE, CONST}">
     <positive first="{VOLATILE, CONST}">
      <group first="{VOLATILE, CONST}">
       <action first="{VOLATILE, CONST}">
        <nonterminal first="{VOLATILE, CONST}" ruleName="CVQualifier"/>
       </action>
      </group>
     </positive>
    </group>
   </action>
  </rule>
  <rule first="{ASSIGN, LPAREN}" name="Initializer">
   <action first="{ASSIGN, LPAREN}">
    <group first="{ASSIGN, LPAREN}">
     <choice first="{ASSIGN, LPAREN}">
      <sequence first="{ASSIGN}">
       <token first="{ASSIGN}" name="ASSIGN"/>
       <action first="{CHAR_LITERAL, #, #, STRING_LITERAL, FLOATING_LITERAL, INTEGER_LITERAL, ID, DELETE, TRUE, FALSE, NULLPTR, NEW, LEQ, MINUS, PLUS_ASSIGN, SHIFT_RIGHT, DISJUNCTION, ARROW_STAR, NEQ, AMP_AMP, SHIFT_LEFT, DOT_STAR, STAR, DIV, PLUS_PLUS, REM, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, MINUS_ASSIGN, DIV_ASSIGN, EQ, REM_ASSIGN, GEQ, PLUS, STATIC_CAST, VOID, XOR_ASSIGN, SIZEOF, REINTERPRET_CAST, CONST_CAST, SHIFT_LEFT_ASSIGN, BOOL, INT, DOUBLE, VOLATILE, OR_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, OPERATOR, SIGNED, LONG, TYPEID, THIS, DYNAMIC_CAST, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT, TILDE, LBRACE, LPAREN, LBRACKET, AMP, RANGLE, LANGLE, ARROW, EXCLAMATION, PIPE, QUEST, CARET, DOT}">
        <nonterminal first="{CHAR_LITERAL, #, #, STRING_LITERAL, FLOATING_LITERAL, INTEGER_LITERAL, ID, DELETE, TRUE, FALSE, NULLPTR, NEW, LEQ, MINUS, PLUS_ASSIGN, SHIFT_RIGHT, DISJUNCTION, ARROW_STAR, NEQ, AMP_AMP, SHIFT_LEFT, DOT_STAR, STAR, DIV, PLUS_PLUS, REM, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, MINUS_ASSIGN, DIV_ASSIGN, EQ, REM_ASSIGN, GEQ, PLUS, STATIC_CAST, VOID, XOR_ASSIGN, SIZEOF, REINTERPRET_CAST, CONST_CAST, SHIFT_LEFT_ASSIGN, BOOL, INT, DOUBLE, VOLATILE, OR_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, OPERATOR, SIGNED, LONG, TYPEID, THIS, DYNAMIC_CAST, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT, TILDE, LBRACE, LPAREN, LBRACKET, AMP, RANGLE, LANGLE, ARROW, EXCLAMATION, PIPE, QUEST, CARET, DOT}" ruleName="InitializerClause"/>
       </action>
      </sequence>
      <sequence first="{LPAREN}">
       <sequence first="{LPAREN}">
        <action first="{LPAREN}">
         <token first="{LPAREN}" name="LPAREN"/>
        </action>
        <nonterminal first="{CHAR_LITERAL, #, #, STRING_LITERAL, FLOATING_LITERAL, INTEGER_LITERAL, ID, DELETE, TRUE, FALSE, NULLPTR, NEW, LEQ, MINUS, PLUS_ASSIGN, SHIFT_RIGHT, DISJUNCTION, ARROW_STAR, NEQ, AMP_AMP, SHIFT_LEFT, DOT_STAR, STAR, DIV, PLUS_PLUS, REM, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, MINUS_ASSIGN, DIV_ASSIGN, EQ, REM_ASSIGN, GEQ, PLUS, STATIC_CAST, VOID, XOR_ASSIGN, SIZEOF, REINTERPRET_CAST, CONST_CAST, SHIFT_LEFT_ASSIGN, BOOL, INT, DOUBLE, VOLATILE, OR_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, OPERATOR, SIGNED, LONG, TYPEID, THIS, DYNAMIC_CAST, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT, COMMA, TILDE, LPAREN, LBRACKET, AMP, RANGLE, LANGLE, ARROW, EXCLAMATION, PIPE, QUEST, CARET, DOT}" ruleName="ExpressionList"/>
       </sequence>
       <token first="{RPAREN}" name="RPAREN"/>
      </sequence>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{CHAR_LITERAL, #, #, STRING_LITERAL, FLOATING_LITERAL, INTEGER_LITERAL, ID, DELETE, TRUE, FALSE, NULLPTR, NEW, LEQ, MINUS, PLUS_ASSIGN, SHIFT_RIGHT, DISJUNCTION, ARROW_STAR, NEQ, AMP_AMP, SHIFT_LEFT, DOT_STAR, STAR, DIV, PLUS_PLUS, REM, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, MINUS_ASSIGN, DIV_ASSIGN, EQ, REM_ASSIGN, GEQ, PLUS, STATIC_CAST, VOID, XOR_ASSIGN, SIZEOF, REINTERPRET_CAST, CONST_CAST, SHIFT_LEFT_ASSIGN, BOOL, INT, DOUBLE, VOLATILE, OR_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, OPERATOR, SIGNED, LONG, TYPEID, THIS, DYNAMIC_CAST, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT, TILDE, LBRACE, LPAREN, LBRACKET, AMP, RANGLE, LANGLE, ARROW, EXCLAMATION, PIPE, QUEST, CARET, DOT}" name="InitializerClause">
   <action first="{CHAR_LITERAL, #, #, STRING_LITERAL, FLOATING_LITERAL, INTEGER_LITERAL, ID, DELETE, TRUE, FALSE, NULLPTR, NEW, LEQ, MINUS, PLUS_ASSIGN, SHIFT_RIGHT, DISJUNCTION, ARROW_STAR, NEQ, AMP_AMP, SHIFT_LEFT, DOT_STAR, STAR, DIV, PLUS_PLUS, REM, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, MINUS_ASSIGN, DIV_ASSIGN, EQ, REM_ASSIGN, GEQ, PLUS, STATIC_CAST, VOID, XOR_ASSIGN, SIZEOF, REINTERPRET_CAST, CONST_CAST, SHIFT_LEFT_ASSIGN, BOOL, INT, DOUBLE, VOLATILE, OR_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, OPERATOR, SIGNED, LONG, TYPEID, THIS, DYNAMIC_CAST, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT, TILDE, LBRACE, LPAREN, LBRACKET, AMP, RANGLE, LANGLE, ARROW, EXCLAMATION, PIPE, QUEST, CARET, DOT}">
    <group first="{CHAR_LITERAL, #, #, STRING_LITERAL, FLOATING_LITERAL, INTEGER_LITERAL, ID, DELETE, TRUE, FALSE, NULLPTR, NEW, LEQ, MINUS, PLUS_ASSIGN, SHIFT_RIGHT, DISJUNCTION, ARROW_STAR, NEQ, AMP_AMP, SHIFT_LEFT, DOT_STAR, STAR, DIV, PLUS_PLUS, REM, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, MINUS_ASSIGN, DIV_ASSIGN, EQ, REM_ASSIGN, GEQ, PLUS, STATIC_CAST, VOID, XOR_ASSIGN, SIZEOF, REINTERPRET_CAST, CONST_CAST, SHIFT_LEFT_ASSIGN, BOOL, INT, DOUBLE, VOLATILE, OR_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, OPERATOR, SIGNED, LONG, TYPEID, THIS, DYNAMIC_CAST, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT, TILDE, LBRACE, LPAREN, LBRACKET, AMP, RANGLE, LANGLE, ARROW, EXCLAMATION, PIPE, QUEST, CARET, DOT}">
     <choice first="{CHAR_LITERAL, #, #, STRING_LITERAL, FLOATING_LITERAL, INTEGER_LITERAL, ID, DELETE, TRUE, FALSE, NULLPTR, NEW, LEQ, MINUS, PLUS_ASSIGN, SHIFT_RIGHT, DISJUNCTION, ARROW_STAR, NEQ, AMP_AMP, SHIFT_LEFT, DOT_STAR, STAR, DIV, PLUS_PLUS, REM, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, MINUS_ASSIGN, DIV_ASSIGN, EQ, REM_ASSIGN, GEQ, PLUS, STATIC_CAST, VOID, XOR_ASSIGN, SIZEOF, REINTERPRET_CAST, CONST_CAST, SHIFT_LEFT_ASSIGN, BOOL, INT, DOUBLE, VOLATILE, OR_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, OPERATOR, SIGNED, LONG, TYPEID, THIS, DYNAMIC_CAST, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT, TILDE, LBRACE, LPAREN, LBRACKET, AMP, RANGLE, LANGLE, ARROW, EXCLAMATION, PIPE, QUEST, CARET, DOT}">
      <choice first="{CHAR_LITERAL, #, #, STRING_LITERAL, FLOATING_LITERAL, INTEGER_LITERAL, ID, DELETE, TRUE, FALSE, NULLPTR, NEW, LEQ, MINUS, PLUS_ASSIGN, SHIFT_RIGHT, DISJUNCTION, ARROW_STAR, NEQ, AMP_AMP, SHIFT_LEFT, DOT_STAR, STAR, DIV, PLUS_PLUS, REM, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, MINUS_ASSIGN, DIV_ASSIGN, EQ, REM_ASSIGN, GEQ, PLUS, STATIC_CAST, VOID, XOR_ASSIGN, SIZEOF, REINTERPRET_CAST, CONST_CAST, SHIFT_LEFT_ASSIGN, BOOL, INT, DOUBLE, VOLATILE, OR_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, OPERATOR, SIGNED, LONG, TYPEID, THIS, DYNAMIC_CAST, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT, TILDE, LBRACE, LPAREN, LBRACKET, AMP, RANGLE, LANGLE, ARROW, EXCLAMATION, PIPE, QUEST, CARET, DOT}">
       <action first="{CHAR_LITERAL, #, #, STRING_LITERAL, FLOATING_LITERAL, INTEGER_LITERAL, ID, DELETE, TRUE, FALSE, NULLPTR, NEW, LEQ, MINUS, PLUS_ASSIGN, SHIFT_RIGHT, DISJUNCTION, ARROW_STAR, NEQ, AMP_AMP, SHIFT_LEFT, DOT_STAR, STAR, DIV, PLUS_PLUS, REM, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, MINUS_ASSIGN, DIV_ASSIGN, EQ, REM_ASSIGN, GEQ, PLUS, STATIC_CAST, VOID, XOR_ASSIGN, SIZEOF, REINTERPRET_CAST, CONST_CAST, SHIFT_LEFT_ASSIGN, BOOL, INT, DOUBLE, VOLATILE, OR_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, OPERATOR, SIGNED, LONG, TYPEID, THIS, DYNAMIC_CAST, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT, TILDE, LPAREN, LBRACKET, AMP, RANGLE, LANGLE, ARROW, EXCLAMATION, PIPE, QUEST, CARET, DOT}">
        <nonterminal first="{CHAR_LITERAL, #, #, STRING_LITERAL, FLOATING_LITERAL, INTEGER_LITERAL, ID, DELETE, TRUE, FALSE, NULLPTR, NEW, LEQ, MINUS, PLUS_ASSIGN, SHIFT_RIGHT, DISJUNCTION, ARROW_STAR, NEQ, AMP_AMP, SHIFT_LEFT, DOT_STAR, STAR, DIV, PLUS_PLUS, REM, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, MINUS_ASSIGN, DIV_ASSIGN, EQ, REM_ASSIGN, GEQ, PLUS, STATIC_CAST, VOID, XOR_ASSIGN, SIZEOF, REINTERPRET_CAST, CONST_CAST, SHIFT_LEFT_ASSIGN, BOOL, INT, DOUBLE, VOLATILE, OR_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, OPERATOR, SIGNED, LONG, TYPEID, THIS, DYNAMIC_CAST, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT, TILDE, LPAREN, LBRACKET, AMP, RANGLE, LANGLE, ARROW, EXCLAMATION, PIPE, QUEST, CARET, DOT}" ruleName="AssignmentExpression"/>
       </action>
       <sequence first="{LBRACE}">
        <sequence first="{LBRACE}">
         <action first="{LBRACE}">
          <token first="{LBRACE}" name="LBRACE"/>
         </action>
         <nonterminal first="{CHAR_LITERAL, #, #, STRING_LITERAL, FLOATING_LITERAL, INTEGER_LITERAL, ID, DELETE, TRUE, FALSE, NULLPTR, NEW, LEQ, MINUS, PLUS_ASSIGN, SHIFT_RIGHT, DISJUNCTION, ARROW_STAR, NEQ, AMP_AMP, SHIFT_LEFT, DOT_STAR, STAR, DIV, PLUS_PLUS, REM, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, MINUS_ASSIGN, DIV_ASSIGN, EQ, REM_ASSIGN, GEQ, PLUS, STATIC_CAST, VOID, XOR_ASSIGN, SIZEOF, REINTERPRET_CAST, CONST_CAST, SHIFT_LEFT_ASSIGN, BOOL, INT, DOUBLE, VOLATILE, OR_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, OPERATOR, SIGNED, LONG, TYPEID, THIS, DYNAMIC_CAST, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT, TILDE, LBRACE, LPAREN, LBRACKET, AMP, RANGLE, LANGLE, ARROW, EXCLAMATION, PIPE, QUEST, CARET, DOT}" ruleName="InitializerList"/>
        </sequence>
        <token first="{RBRACE}" name="RBRACE"/>
       </sequence>
      </choice>
      <sequence first="{LBRACE}">
       <token first="{LBRACE}" name="LBRACE"/>
       <action first="{RBRACE}">
        <token first="{RBRACE}" name="RBRACE"/>
       </action>
      </sequence>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{CHAR_LITERAL, #, #, STRING_LITERAL, FLOATING_LITERAL, INTEGER_LITERAL, ID, DELETE, TRUE, FALSE, NULLPTR, NEW, LEQ, MINUS, PLUS_ASSIGN, SHIFT_RIGHT, DISJUNCTION, ARROW_STAR, NEQ, AMP_AMP, SHIFT_LEFT, DOT_STAR, STAR, DIV, PLUS_PLUS, REM, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, MINUS_ASSIGN, DIV_ASSIGN, EQ, REM_ASSIGN, GEQ, PLUS, STATIC_CAST, VOID, XOR_ASSIGN, SIZEOF, REINTERPRET_CAST, CONST_CAST, SHIFT_LEFT_ASSIGN, BOOL, INT, DOUBLE, VOLATILE, OR_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, OPERATOR, SIGNED, LONG, TYPEID, THIS, DYNAMIC_CAST, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT, TILDE, LBRACE, LPAREN, LBRACKET, AMP, RANGLE, LANGLE, ARROW, EXCLAMATION, PIPE, QUEST, CARET, DOT}" name="InitializerList">
   <list first="{CHAR_LITERAL, #, #, STRING_LITERAL, FLOATING_LITERAL, INTEGER_LITERAL, ID, DELETE, TRUE, FALSE, NULLPTR, NEW, LEQ, MINUS, PLUS_ASSIGN, SHIFT_RIGHT, DISJUNCTION, ARROW_STAR, NEQ, AMP_AMP, SHIFT_LEFT, DOT_STAR, STAR, DIV, PLUS_PLUS, REM, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, MINUS_ASSIGN, DIV_ASSIGN, EQ, REM_ASSIGN, GEQ, PLUS, STATIC_CAST, VOID, XOR_ASSIGN, SIZEOF, REINTERPRET_CAST, CONST_CAST, SHIFT_LEFT_ASSIGN, BOOL, INT, DOUBLE, VOLATILE, OR_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, OPERATOR, SIGNED, LONG, TYPEID, THIS, DYNAMIC_CAST, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT, TILDE, LBRACE, LPAREN, LBRACKET, AMP, RANGLE, LANGLE, ARROW, EXCLAMATION, PIPE, QUEST, CARET, DOT}">
    <sequence first="{CHAR_LITERAL, #, #, STRING_LITERAL, FLOATING_LITERAL, INTEGER_LITERAL, ID, DELETE, TRUE, FALSE, NULLPTR, NEW, LEQ, MINUS, PLUS_ASSIGN, SHIFT_RIGHT, DISJUNCTION, ARROW_STAR, NEQ, AMP_AMP, SHIFT_LEFT, DOT_STAR, STAR, DIV, PLUS_PLUS, REM, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, MINUS_ASSIGN, DIV_ASSIGN, EQ, REM_ASSIGN, GEQ, PLUS, STATIC_CAST, VOID, XOR_ASSIGN, SIZEOF, REINTERPRET_CAST, CONST_CAST, SHIFT_LEFT_ASSIGN, BOOL, INT, DOUBLE, VOLATILE, OR_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, OPERATOR, SIGNED, LONG, TYPEID, THIS, DYNAMIC_CAST, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT, TILDE, LBRACE, LPAREN, LBRACKET, AMP, RANGLE, LANGLE, ARROW, EXCLAMATION, PIPE, QUEST, CARET, DOT}">
     <action first="{CHAR_LITERAL, #, #, STRING_LITERAL, FLOATING_LITERAL, INTEGER_LITERAL, ID, DELETE, TRUE, FALSE, NULLPTR, NEW, LEQ, MINUS, PLUS_ASSIGN, SHIFT_RIGHT, DISJUNCTION, ARROW_STAR, NEQ, AMP_AMP, SHIFT_LEFT, DOT_STAR, STAR, DIV, PLUS_PLUS, REM, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, MINUS_ASSIGN, DIV_ASSIGN, EQ, REM_ASSIGN, GEQ, PLUS, STATIC_CAST, VOID, XOR_ASSIGN, SIZEOF, REINTERPRET_CAST, CONST_CAST, SHIFT_LEFT_ASSIGN, BOOL, INT, DOUBLE, VOLATILE, OR_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, OPERATOR, SIGNED, LONG, TYPEID, THIS, DYNAMIC_CAST, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT, TILDE, LBRACE, LPAREN, LBRACKET, AMP, RANGLE, LANGLE, ARROW, EXCLAMATION, PIPE, QUEST, CARET, DOT}">
      <nonterminal first="{CHAR_LITERAL, #, #, STRING_LITERAL, FLOATING_LITERAL, INTEGER_LITERAL, ID, DELETE, TRUE, FALSE, NULLPTR, NEW, LEQ, MINUS, PLUS_ASSIGN, SHIFT_RIGHT, DISJUNCTION, ARROW_STAR, NEQ, AMP_AMP, SHIFT_LEFT, DOT_STAR, STAR, DIV, PLUS_PLUS, REM, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, MINUS_ASSIGN, DIV_ASSIGN, EQ, REM_ASSIGN, GEQ, PLUS, STATIC_CAST, VOID, XOR_ASSIGN, SIZEOF, REINTERPRET_CAST, CONST_CAST, SHIFT_LEFT_ASSIGN, BOOL, INT, DOUBLE, VOLATILE, OR_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, OPERATOR, SIGNED, LONG, TYPEID, THIS, DYNAMIC_CAST, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT, TILDE, LBRACE, LPAREN, LBRACKET, AMP, RANGLE, LANGLE, ARROW, EXCLAMATION, PIPE, QUEST, CARET, DOT}" ruleName="InitializerClause"/>
     </action>
     <kleene first="{#, COMMA}">
      <sequence first="{COMMA}">
       <token first="{COMMA}" name="COMMA"/>
       <action first="{CHAR_LITERAL, #, #, STRING_LITERAL, FLOATING_LITERAL, INTEGER_LITERAL, ID, DELETE, TRUE, FALSE, NULLPTR, NEW, LEQ, MINUS, PLUS_ASSIGN, SHIFT_RIGHT, DISJUNCTION, ARROW_STAR, NEQ, AMP_AMP, SHIFT_LEFT, DOT_STAR, STAR, DIV, PLUS_PLUS, REM, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, MINUS_ASSIGN, DIV_ASSIGN, EQ, REM_ASSIGN, GEQ, PLUS, STATIC_CAST, VOID, XOR_ASSIGN, SIZEOF, REINTERPRET_CAST, CONST_CAST, SHIFT_LEFT_ASSIGN, BOOL, INT, DOUBLE, VOLATILE, OR_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, OPERATOR, SIGNED, LONG, TYPEID, THIS, DYNAMIC_CAST, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT, TILDE, LBRACE, LPAREN, LBRACKET, AMP, RANGLE, LANGLE, ARROW, EXCLAMATION, PIPE, QUEST, CARET, DOT}">
        <nonterminal first="{CHAR_LITERAL, #, #, STRING_LITERAL, FLOATING_LITERAL, INTEGER_LITERAL, ID, DELETE, TRUE, FALSE, NULLPTR, NEW, LEQ, MINUS, PLUS_ASSIGN, SHIFT_RIGHT, DISJUNCTION, ARROW_STAR, NEQ, AMP_AMP, SHIFT_LEFT, DOT_STAR, STAR, DIV, PLUS_PLUS, REM, MINUS_MINUS, COLON_COLON, ASSIGN, MUL_ASSIGN, MINUS_ASSIGN, DIV_ASSIGN, EQ, REM_ASSIGN, GEQ, PLUS, STATIC_CAST, VOID, XOR_ASSIGN, SIZEOF, REINTERPRET_CAST, CONST_CAST, SHIFT_LEFT_ASSIGN, BOOL, INT, DOUBLE, VOLATILE, OR_ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, OPERATOR, SIGNED, LONG, TYPEID, THIS, DYNAMIC_CAST, SHORT, UNSIGNED, CHAR8T, CHAR16T, CHAR, CHAR32T, WCHART, CONST, FLOAT, TILDE, LBRACE, LPAREN, LBRACKET, AMP, RANGLE, LANGLE, ARROW, EXCLAMATION, PIPE, QUEST, CARET, DOT}" ruleName="InitializerClause"/>
       </action>
      </sequence>
     </kleene>
    </sequence>
   </list>
  </rule>
 </grammar>
</parserFile>
