<parserFile>
 <grammar name="DeclaratorParser">
  <rule first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #, #}" name="InitDeclaratorList">
   <action first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #, #}">
    <group first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #, #}">
     <sequence first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #, #}">
      <action first="{#}">
       <empty first="{#}"/>
      </action>
      <group first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #}">
       <list first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #}">
        <sequence first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #}">
         <action first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #}">
          <nonterminal first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #}" ruleName="InitDeclarator"/>
         </action>
         <kleene first="{COMMA, #}">
          <sequence first="{COMMA}">
           <token first="{COMMA}" name="COMMA"/>
           <action first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #}">
            <nonterminal first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #}" ruleName="InitDeclarator"/>
           </action>
          </sequence>
         </kleene>
        </sequence>
       </list>
      </group>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #}" name="InitDeclarator">
   <action first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #}">
    <group first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #}">
     <sequence first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #}">
      <nonterminal first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #}" ruleName="Declarator"/>
      <optional first="{ASSIGN, LPAREN, #}">
       <nonterminal first="{ASSIGN, LPAREN}" ruleName="Initializer"/>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #}" name="Declarator">
   <action first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #}">
    <group first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #}">
     <choice first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #}">
      <action first="{ID, COLON_COLON, OPERATOR, #, #}">
       <nonterminal first="{ID, COLON_COLON, OPERATOR, #, #}" ruleName="DirectDeclarator"/>
      </action>
      <sequence first="{STAR, AMP}">
       <action first="{STAR, AMP}">
        <nonterminal first="{STAR, AMP}" ruleName="PtrOperator"/>
       </action>
       <action first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #}">
        <nonterminal first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #}" ruleName="Declarator"/>
       </action>
      </sequence>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{ID, COLON_COLON, OPERATOR, #, #}" name="DirectDeclarator">
   <action first="{ID, COLON_COLON, OPERATOR, #, #}">
    <group first="{ID, COLON_COLON, OPERATOR, #, #}">
     <sequence first="{ID, COLON_COLON, OPERATOR, #, #}">
      <action first="{ID, COLON_COLON, OPERATOR, #, #}">
       <nonterminal first="{ID, COLON_COLON, OPERATOR, #, #}" ruleName="DeclaratorId"/>
      </action>
      <kleene first="{LBRACKET, LPAREN, #}">
       <group first="{LBRACKET, LPAREN}">
        <choice first="{LBRACKET, LPAREN}">
         <choice first="{LBRACKET}">
          <sequence first="{LBRACKET}">
           <sequence first="{LBRACKET}">
            <token first="{LBRACKET}" name="LBRACKET"/>
            <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #}" ruleName="ConstantExpression"/>
           </sequence>
           <action first="{RBRACKET}">
            <token first="{RBRACKET}" name="RBRACKET"/>
           </action>
          </sequence>
          <sequence first="{LBRACKET}">
           <token first="{LBRACKET}" name="LBRACKET"/>
           <action first="{RBRACKET}">
            <token first="{RBRACKET}" name="RBRACKET"/>
           </action>
          </sequence>
         </choice>
         <sequence first="{LPAREN}">
          <sequence first="{LPAREN}">
           <token first="{LPAREN}" name="LPAREN"/>
           <nonterminal first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #}" ruleName="Declarator"/>
          </sequence>
          <action first="{RPAREN}">
           <token first="{RPAREN}" name="RPAREN"/>
          </action>
         </sequence>
        </choice>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{ID, COLON_COLON, OPERATOR, #, #}" name="DeclaratorId">
   <choice first="{ID, COLON_COLON, OPERATOR, #, #}">
    <action first="{ID, COLON_COLON, OPERATOR, #, #}">
     <nonterminal first="{ID, COLON_COLON, OPERATOR, #, #}" ruleName="IdExpression"/>
    </action>
    <action first="{ID, COLON_COLON, #}">
     <nonterminal first="{ID, COLON_COLON, #}" ruleName="TypeName"/>
    </action>
   </choice>
  </rule>
  <rule first="{ID, UNSIGNED, VOLATILE, COLON_COLON, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #, #}" name="TypeId">
   <sequence first="{ID, UNSIGNED, VOLATILE, COLON_COLON, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #, #}">
    <action first="{#}">
     <empty first="{#}"/>
    </action>
    <action first="{ID, UNSIGNED, VOLATILE, COLON_COLON, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #}">
     <group first="{ID, UNSIGNED, VOLATILE, COLON_COLON, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #}">
      <sequence first="{ID, UNSIGNED, VOLATILE, COLON_COLON, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #}">
       <group first="{ID, UNSIGNED, VOLATILE, COLON_COLON, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #}">
        <choice first="{ID, UNSIGNED, VOLATILE, COLON_COLON, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #}">
         <nonterminal first="{UNSIGNED, VOLATILE, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T}" ruleName="TypeSpecifierSeq"/>
         <action first="{ID, COLON_COLON, #}">
          <nonterminal first="{ID, COLON_COLON, #}" ruleName="TypeName"/>
         </action>
        </choice>
       </group>
       <optional first="{STAR, LBRACKET, LPAREN, AMP, #}">
        <group first="{STAR, LBRACKET, LPAREN, AMP}">
         <action first="{STAR, LBRACKET, LPAREN, AMP}">
          <nonterminal first="{STAR, LBRACKET, LPAREN, AMP}" ruleName="AbstractDeclarator"/>
         </action>
        </group>
       </optional>
      </sequence>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{ID, UNSIGNED, VOLATILE, COLON_COLON, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #, #}" name="Type">
   <sequence first="{ID, UNSIGNED, VOLATILE, COLON_COLON, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #, #}">
    <action first="{#}">
     <empty first="{#}"/>
    </action>
    <action first="{ID, UNSIGNED, VOLATILE, COLON_COLON, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #}">
     <group first="{ID, UNSIGNED, VOLATILE, COLON_COLON, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #}">
      <choice first="{ID, UNSIGNED, VOLATILE, COLON_COLON, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #}">
       <positive first="{UNSIGNED, VOLATILE, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T}">
        <group first="{UNSIGNED, VOLATILE, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T}">
         <action first="{UNSIGNED, VOLATILE, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T}">
          <nonterminal first="{UNSIGNED, VOLATILE, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T}" ruleName="TypeSpecifier"/>
         </action>
        </group>
       </positive>
       <action first="{ID, COLON_COLON, #}">
        <nonterminal first="{ID, COLON_COLON, #}" ruleName="TypeName"/>
       </action>
      </choice>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{UNSIGNED, VOLATILE, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T}" name="TypeSpecifierSeq">
   <positive first="{UNSIGNED, VOLATILE, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T}">
    <group first="{UNSIGNED, VOLATILE, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T}">
     <action first="{UNSIGNED, VOLATILE, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T}">
      <nonterminal first="{UNSIGNED, VOLATILE, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T}" ruleName="TypeSpecifier"/>
     </action>
    </group>
   </positive>
  </rule>
  <rule first="{STAR, LBRACKET, LPAREN, AMP}" name="AbstractDeclarator">
   <action first="{STAR, LBRACKET, LPAREN, AMP}">
    <group first="{STAR, LBRACKET, LPAREN, AMP}">
     <choice first="{STAR, LBRACKET, LPAREN, AMP}">
      <sequence first="{STAR, AMP}">
       <action first="{STAR, AMP}">
        <nonterminal first="{STAR, AMP}" ruleName="PtrOperator"/>
       </action>
       <optional first="{STAR, LBRACKET, LPAREN, AMP, #}">
        <group first="{STAR, LBRACKET, LPAREN, AMP}">
         <action first="{STAR, LBRACKET, LPAREN, AMP}">
          <nonterminal first="{STAR, LBRACKET, LPAREN, AMP}" ruleName="AbstractDeclarator"/>
         </action>
        </group>
       </optional>
      </sequence>
      <action first="{LBRACKET, LPAREN}">
       <nonterminal first="{LBRACKET, LPAREN}" ruleName="DirectAbstractDeclarator"/>
      </action>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{LBRACKET, LPAREN}" name="DirectAbstractDeclarator">
   <action first="{LBRACKET, LPAREN}">
    <group first="{LBRACKET, LPAREN}">
     <positive first="{LBRACKET, LPAREN}">
      <group first="{LBRACKET, LPAREN}">
       <choice first="{LBRACKET, LPAREN}">
        <choice first="{LBRACKET}">
         <sequence first="{LBRACKET}">
          <sequence first="{LBRACKET}">
           <token first="{LBRACKET}" name="LBRACKET"/>
           <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #}" ruleName="ConstantExpression"/>
          </sequence>
          <action first="{RBRACKET}">
           <token first="{RBRACKET}" name="RBRACKET"/>
          </action>
         </sequence>
         <sequence first="{LBRACKET}">
          <token first="{LBRACKET}" name="LBRACKET"/>
          <action first="{RBRACKET}">
           <token first="{RBRACKET}" name="RBRACKET"/>
          </action>
         </sequence>
        </choice>
        <sequence first="{LPAREN}">
         <sequence first="{LPAREN}">
          <token first="{LPAREN}" name="LPAREN"/>
          <nonterminal first="{STAR, LBRACKET, LPAREN, AMP}" ruleName="AbstractDeclarator"/>
         </sequence>
         <action first="{RPAREN}">
          <token first="{RPAREN}" name="RPAREN"/>
         </action>
        </sequence>
       </choice>
      </group>
     </positive>
    </group>
   </action>
  </rule>
  <rule first="{STAR, AMP}" name="PtrOperator">
   <action first="{STAR, AMP}">
    <group first="{STAR, AMP}">
     <choice first="{STAR, AMP}">
      <sequence first="{STAR}">
       <action first="{STAR}">
        <token first="{STAR}" name="STAR"/>
       </action>
       <optional first="{VOLATILE, CONST, #}">
        <group first="{VOLATILE, CONST}">
         <action first="{VOLATILE, CONST}">
          <nonterminal first="{VOLATILE, CONST}" ruleName="CVQualifierSeq"/>
         </action>
        </group>
       </optional>
      </sequence>
      <action first="{AMP}">
       <token first="{AMP}" name="AMP"/>
      </action>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{VOLATILE, CONST}" name="CVQualifierSeq">
   <action first="{VOLATILE, CONST}">
    <group first="{VOLATILE, CONST}">
     <positive first="{VOLATILE, CONST}">
      <group first="{VOLATILE, CONST}">
       <action first="{VOLATILE, CONST}">
        <nonterminal first="{VOLATILE, CONST}" ruleName="CVQualifier"/>
       </action>
      </group>
     </positive>
    </group>
   </action>
  </rule>
  <rule first="{ASSIGN, LPAREN}" name="Initializer">
   <action first="{ASSIGN, LPAREN}">
    <group first="{ASSIGN, LPAREN}">
     <choice first="{ASSIGN, LPAREN}">
      <sequence first="{ASSIGN}">
       <token first="{ASSIGN}" name="ASSIGN"/>
       <action first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #}">
        <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #}" ruleName="InitializerClause"/>
       </action>
      </sequence>
      <sequence first="{LPAREN}">
       <sequence first="{LPAREN}">
        <action first="{LPAREN}">
         <token first="{LPAREN}" name="LPAREN"/>
        </action>
        <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #}" ruleName="ExpressionList"/>
       </sequence>
       <token first="{RPAREN}" name="RPAREN"/>
      </sequence>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #}" name="InitializerClause">
   <action first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #}">
    <group first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #}">
     <choice first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #}">
      <choice first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #}">
       <action first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #}">
        <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #}" ruleName="AssignmentExpression"/>
       </action>
       <sequence first="{LBRACE}">
        <sequence first="{LBRACE}">
         <action first="{LBRACE}">
          <token first="{LBRACE}" name="LBRACE"/>
         </action>
         <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #}" ruleName="InitializerList"/>
        </sequence>
        <token first="{RBRACE}" name="RBRACE"/>
       </sequence>
      </choice>
      <sequence first="{LBRACE}">
       <token first="{LBRACE}" name="LBRACE"/>
       <action first="{RBRACE}">
        <token first="{RBRACE}" name="RBRACE"/>
       </action>
      </sequence>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #}" name="InitializerList">
   <list first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #}">
    <sequence first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #}">
     <action first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #}">
      <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #}" ruleName="InitializerClause"/>
     </action>
     <kleene first="{COMMA, #}">
      <sequence first="{COMMA}">
       <token first="{COMMA}" name="COMMA"/>
       <action first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #}">
        <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #}" ruleName="InitializerClause"/>
       </action>
      </sequence>
     </kleene>
    </sequence>
   </list>
  </rule>
 </grammar>
</parserFile>
