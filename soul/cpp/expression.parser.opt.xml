<parserFile>
 <grammar name="ExpressionParser">
  <rule first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" name="Expression">
   <action first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
    <group first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
     <sequence first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
      <action first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
       <nonterminal first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="AssignmentExpression"/>
      </action>
      <kleene first="{#, COMMA}">
       <group first="{COMMA}">
        <sequence first="{COMMA}">
         <token first="{COMMA}" name="COMMA"/>
         <action first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
          <nonterminal first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="AssignmentExpression"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" name="ConstantExpression">
   <action first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
    <nonterminal first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="Expression"/>
   </action>
  </rule>
  <rule first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" name="AssignmentExpression">
   <choice first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
    <sequence first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
     <sequence first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
      <nonterminal first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, MINUS_MINUS, DISJUNCTION, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="LogicalOrExpression"/>
      <nonterminal first="{XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DIV_ASSIGN, MUL_ASSIGN, REM_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN}" ruleName="AssignmentOp"/>
     </sequence>
     <action first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
      <nonterminal first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="AssignmentExpression"/>
     </action>
    </sequence>
    <action first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, MINUS_MINUS, DISJUNCTION, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
     <nonterminal first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, MINUS_MINUS, DISJUNCTION, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="ConditionalExpression"/>
    </action>
   </choice>
  </rule>
  <rule first="{XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DIV_ASSIGN, MUL_ASSIGN, REM_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN}" name="AssignmentOp">
   <switch first="{XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DIV_ASSIGN, MUL_ASSIGN, REM_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, ASSIGN, SHIFT_RIGHT_ASSIGN, AND_ASSIGN}">
    <case first="{ASSIGN}">
     <action first="{ASSIGN}">
      <token first="{ASSIGN}" name="ASSIGN"/>
     </action>
    </case>
    <case first="{MUL_ASSIGN}">
     <action first="{MUL_ASSIGN}">
      <token first="{MUL_ASSIGN}" name="MUL_ASSIGN"/>
     </action>
    </case>
    <case first="{DIV_ASSIGN}">
     <action first="{DIV_ASSIGN}">
      <token first="{DIV_ASSIGN}" name="DIV_ASSIGN"/>
     </action>
    </case>
    <case first="{REM_ASSIGN}">
     <action first="{REM_ASSIGN}">
      <token first="{REM_ASSIGN}" name="REM_ASSIGN"/>
     </action>
    </case>
    <case first="{PLUS_ASSIGN}">
     <action first="{PLUS_ASSIGN}">
      <token first="{PLUS_ASSIGN}" name="PLUS_ASSIGN"/>
     </action>
    </case>
    <case first="{MINUS_ASSIGN}">
     <action first="{MINUS_ASSIGN}">
      <token first="{MINUS_ASSIGN}" name="MINUS_ASSIGN"/>
     </action>
    </case>
    <case first="{SHIFT_LEFT_ASSIGN}">
     <action first="{SHIFT_LEFT_ASSIGN}">
      <token first="{SHIFT_LEFT_ASSIGN}" name="SHIFT_LEFT_ASSIGN"/>
     </action>
    </case>
    <case first="{SHIFT_RIGHT_ASSIGN}">
     <action first="{SHIFT_RIGHT_ASSIGN}">
      <token first="{SHIFT_RIGHT_ASSIGN}" name="SHIFT_RIGHT_ASSIGN"/>
     </action>
    </case>
    <case first="{AND_ASSIGN}">
     <action first="{AND_ASSIGN}">
      <token first="{AND_ASSIGN}" name="AND_ASSIGN"/>
     </action>
    </case>
    <case first="{XOR_ASSIGN}">
     <action first="{XOR_ASSIGN}">
      <token first="{XOR_ASSIGN}" name="XOR_ASSIGN"/>
     </action>
    </case>
    <case first="{OR_ASSIGN}">
     <action first="{OR_ASSIGN}">
      <token first="{OR_ASSIGN}" name="OR_ASSIGN"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, MINUS_MINUS, DISJUNCTION, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" name="ConditionalExpression">
   <action first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, MINUS_MINUS, DISJUNCTION, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
    <group first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, MINUS_MINUS, DISJUNCTION, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
     <sequence first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, MINUS_MINUS, DISJUNCTION, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
      <action first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, MINUS_MINUS, DISJUNCTION, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
       <nonterminal first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, MINUS_MINUS, DISJUNCTION, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="LogicalOrExpression"/>
      </action>
      <optional first="{#, QUEST}">
       <group first="{QUEST}">
        <sequence first="{QUEST}">
         <sequence first="{QUEST}">
          <sequence first="{QUEST}">
           <token first="{QUEST}" name="QUEST"/>
           <nonterminal first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="Expression"/>
          </sequence>
          <token first="{COLON}" name="COLON"/>
         </sequence>
         <action first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
          <nonterminal first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="AssignmentExpression"/>
         </action>
        </sequence>
       </group>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, MINUS_MINUS, DISJUNCTION, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" name="LogicalOrExpression">
   <action first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, MINUS_MINUS, DISJUNCTION, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
    <group first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, MINUS_MINUS, DISJUNCTION, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
     <sequence first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, MINUS_MINUS, DISJUNCTION, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
      <action first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
       <nonterminal first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="LogicalAndExpression"/>
      </action>
      <kleene first="{#, DISJUNCTION}">
       <group first="{DISJUNCTION}">
        <sequence first="{DISJUNCTION}">
         <token first="{DISJUNCTION}" name="DISJUNCTION"/>
         <action first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
          <nonterminal first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="LogicalAndExpression"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" name="LogicalAndExpression">
   <action first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
    <group first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
     <sequence first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
      <action first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
       <nonterminal first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="InclusiveOrExpression"/>
      </action>
      <kleene first="{#, AMP_AMP}">
       <group first="{AMP_AMP}">
        <sequence first="{AMP_AMP}">
         <token first="{AMP_AMP}" name="AMP_AMP"/>
         <action first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
          <nonterminal first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="InclusiveOrExpression"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" name="InclusiveOrExpression">
   <action first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
    <group first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
     <sequence first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
      <action first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
       <nonterminal first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="ExclusiveOrExpression"/>
      </action>
      <kleene first="{#, PIPE}">
       <group first="{PIPE}">
        <sequence first="{PIPE}">
         <token first="{PIPE}" name="PIPE"/>
         <action first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
          <nonterminal first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="ExclusiveOrExpression"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" name="ExclusiveOrExpression">
   <action first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
    <group first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
     <sequence first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
      <action first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
       <nonterminal first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="AndExpression"/>
      </action>
      <kleene first="{#, CARET}">
       <group first="{CARET}">
        <sequence first="{CARET}">
         <token first="{CARET}" name="CARET"/>
         <action first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
          <nonterminal first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="AndExpression"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" name="AndExpression">
   <action first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
    <group first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
     <sequence first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
      <action first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
       <nonterminal first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="EqualityExpression"/>
      </action>
      <kleene first="{#, AMP}">
       <group first="{AMP}">
        <sequence first="{AMP}">
         <token first="{AMP}" name="AMP"/>
         <action first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
          <nonterminal first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="EqualityExpression"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" name="EqualityExpression">
   <action first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
    <group first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
     <sequence first="{#, #, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
      <action first="{#, #, DOT_STAR, ARROW_STAR, STAR, GEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
       <nonterminal first="{#, #, DOT_STAR, ARROW_STAR, STAR, GEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="RelationalExpression"/>
      </action>
      <kleene first="{#, EQ, NEQ}">
       <group first="{EQ, NEQ}">
        <sequence first="{EQ, NEQ}">
         <nonterminal first="{EQ, NEQ}" ruleName="EqOp"/>
         <action first="{#, #, DOT_STAR, ARROW_STAR, STAR, GEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
          <expectation first="{#, #, DOT_STAR, ARROW_STAR, STAR, GEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
           <nonterminal first="{#, #, DOT_STAR, ARROW_STAR, STAR, GEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="RelationalExpression"/>
          </expectation>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{EQ, NEQ}" name="EqOp">
   <switch first="{EQ, NEQ}">
    <case first="{EQ}">
     <action first="{EQ}">
      <token first="{EQ}" name="EQ"/>
     </action>
    </case>
    <case first="{NEQ}">
     <action first="{NEQ}">
      <token first="{NEQ}" name="NEQ"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{#, #, DOT_STAR, ARROW_STAR, STAR, GEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" name="RelationalExpression">
   <action first="{#, #, DOT_STAR, ARROW_STAR, STAR, GEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
    <group first="{#, #, DOT_STAR, ARROW_STAR, STAR, GEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
     <sequence first="{#, #, DOT_STAR, ARROW_STAR, STAR, GEQ, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, LEQ, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
      <action first="{#, #, DOT_STAR, ARROW_STAR, STAR, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
       <nonterminal first="{#, #, DOT_STAR, ARROW_STAR, STAR, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}" ruleName="ShiftExpression"/>
      </action>
      <kleene first="{#, GEQ, LEQ, RANGLE, LANGLE}">
       <group first="{GEQ, LEQ, RANGLE, LANGLE}">
        <sequence first="{GEQ, LEQ, RANGLE, LANGLE}">
         <nonterminal first="{GEQ, LEQ, RANGLE, LANGLE}" ruleName="RelOp"/>
         <action first="{#, #, DOT_STAR, ARROW_STAR, STAR, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
          <nonterminal first="{#, #, DOT_STAR, ARROW_STAR, STAR, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}" ruleName="ShiftExpression"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{GEQ, LEQ, RANGLE, LANGLE}" name="RelOp">
   <switch first="{GEQ, LEQ, RANGLE, LANGLE}">
    <case first="{LANGLE}">
     <action first="{LANGLE}">
      <token first="{LANGLE}" name="LANGLE"/>
     </action>
    </case>
    <case first="{RANGLE}">
     <action first="{RANGLE}">
      <token first="{RANGLE}" name="RANGLE"/>
     </action>
    </case>
    <case first="{LEQ}">
     <action first="{LEQ}">
      <token first="{LEQ}" name="LEQ"/>
     </action>
    </case>
    <case first="{GEQ}">
     <action first="{GEQ}">
      <token first="{GEQ}" name="GEQ"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{#, #, DOT_STAR, ARROW_STAR, STAR, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}" name="ShiftExpression">
   <action first="{#, #, DOT_STAR, ARROW_STAR, STAR, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
    <group first="{#, #, DOT_STAR, ARROW_STAR, STAR, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
     <sequence first="{#, #, DOT_STAR, ARROW_STAR, STAR, DIV, PLUS_PLUS, MINUS_MINUS, SHIFT_RIGHT, COLON_COLON, SHIFT_LEFT, PLUS, REM, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
      <action first="{#, #, DOT_STAR, ARROW_STAR, STAR, DIV, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, REM, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
       <nonterminal first="{#, #, DOT_STAR, ARROW_STAR, STAR, DIV, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, REM, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}" ruleName="AdditiveExpression"/>
      </action>
      <kleene first="{#, SHIFT_RIGHT, SHIFT_LEFT}">
       <group first="{SHIFT_RIGHT, SHIFT_LEFT}">
        <sequence first="{SHIFT_RIGHT, SHIFT_LEFT}">
         <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT}" ruleName="ShiftOp"/>
         <action first="{#, #, DOT_STAR, ARROW_STAR, STAR, DIV, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, REM, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
          <nonterminal first="{#, #, DOT_STAR, ARROW_STAR, STAR, DIV, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, REM, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}" ruleName="AdditiveExpression"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{SHIFT_RIGHT, SHIFT_LEFT}" name="ShiftOp">
   <switch first="{SHIFT_RIGHT, SHIFT_LEFT}">
    <case first="{SHIFT_LEFT}">
     <action first="{SHIFT_LEFT}">
      <token first="{SHIFT_LEFT}" name="SHIFT_LEFT"/>
     </action>
    </case>
    <case first="{SHIFT_RIGHT}">
     <action first="{SHIFT_RIGHT}">
      <token first="{SHIFT_RIGHT}" name="SHIFT_RIGHT"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{#, #, DOT_STAR, ARROW_STAR, STAR, DIV, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, REM, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}" name="AdditiveExpression">
   <action first="{#, #, DOT_STAR, ARROW_STAR, STAR, DIV, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, REM, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
    <group first="{#, #, DOT_STAR, ARROW_STAR, STAR, DIV, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, REM, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
     <sequence first="{#, #, DOT_STAR, ARROW_STAR, STAR, DIV, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, REM, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
      <action first="{#, #, DOT_STAR, ARROW_STAR, STAR, DIV, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, REM, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
       <nonterminal first="{#, #, DOT_STAR, ARROW_STAR, STAR, DIV, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, REM, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}" ruleName="MultiplicativeExpression"/>
      </action>
      <kleene first="{#, PLUS, MINUS}">
       <group first="{PLUS, MINUS}">
        <sequence first="{PLUS, MINUS}">
         <nonterminal first="{PLUS, MINUS}" ruleName="AddOp"/>
         <action first="{#, #, DOT_STAR, ARROW_STAR, STAR, DIV, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, REM, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
          <nonterminal first="{#, #, DOT_STAR, ARROW_STAR, STAR, DIV, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, REM, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}" ruleName="MultiplicativeExpression"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{PLUS, MINUS}" name="AddOp">
   <switch first="{PLUS, MINUS}">
    <case first="{PLUS}">
     <action first="{PLUS}">
      <token first="{PLUS}" name="PLUS"/>
     </action>
    </case>
    <case first="{MINUS}">
     <action first="{MINUS}">
      <token first="{MINUS}" name="MINUS"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{#, #, DOT_STAR, ARROW_STAR, STAR, DIV, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, REM, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}" name="MultiplicativeExpression">
   <action first="{#, #, DOT_STAR, ARROW_STAR, STAR, DIV, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, REM, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
    <group first="{#, #, DOT_STAR, ARROW_STAR, STAR, DIV, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, REM, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
     <sequence first="{#, #, DOT_STAR, ARROW_STAR, STAR, DIV, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, REM, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
      <action first="{#, #, DOT_STAR, ARROW_STAR, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
       <nonterminal first="{#, #, DOT_STAR, ARROW_STAR, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}" ruleName="PmExpression"/>
      </action>
      <kleene first="{#, STAR, DIV, REM}">
       <group first="{STAR, DIV, REM}">
        <sequence first="{STAR, DIV, REM}">
         <nonterminal first="{STAR, DIV, REM}" ruleName="MulOp"/>
         <action first="{#, #, DOT_STAR, ARROW_STAR, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
          <nonterminal first="{#, #, DOT_STAR, ARROW_STAR, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}" ruleName="PmExpression"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{STAR, DIV, REM}" name="MulOp">
   <switch first="{STAR, DIV, REM}">
    <case first="{STAR}">
     <action first="{STAR}">
      <token first="{STAR}" name="STAR"/>
     </action>
    </case>
    <case first="{DIV}">
     <action first="{DIV}">
      <token first="{DIV}" name="DIV"/>
     </action>
    </case>
    <case first="{REM}">
     <action first="{REM}">
      <token first="{REM}" name="REM"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{#, #, DOT_STAR, ARROW_STAR, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}" name="PmExpression">
   <action first="{#, #, DOT_STAR, ARROW_STAR, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
    <group first="{#, #, DOT_STAR, ARROW_STAR, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
     <sequence first="{#, #, DOT_STAR, ARROW_STAR, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
      <action first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
       <nonterminal first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}" ruleName="CastExpression"/>
      </action>
      <kleene first="{#, DOT_STAR, ARROW_STAR}">
       <group first="{DOT_STAR, ARROW_STAR}">
        <sequence first="{DOT_STAR, ARROW_STAR}">
         <nonterminal first="{DOT_STAR, ARROW_STAR}" ruleName="PmOp"/>
         <action first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
          <nonterminal first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}" ruleName="CastExpression"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{DOT_STAR, ARROW_STAR}" name="PmOp">
   <switch first="{DOT_STAR, ARROW_STAR}">
    <case first="{DOT_STAR}">
     <action first="{DOT_STAR}">
      <token first="{DOT_STAR}" name="DOT_STAR"/>
     </action>
    </case>
    <case first="{ARROW_STAR}">
     <action first="{ARROW_STAR}">
      <token first="{ARROW_STAR}" name="ARROW_STAR"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}" name="CastExpression">
   <action first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
    <group first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
     <choice first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
      <sequence first="{LPAREN}">
       <sequence first="{LPAREN}">
        <sequence first="{LPAREN}">
         <token first="{LPAREN}" name="LPAREN"/>
         <nonterminal first="{#, #, COLON_COLON, CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, ID, VOID, CONST, DOUBLE, INT, BOOL, SIGNED, WCHART, VOLATILE, CHAR8T, FLOAT, LONG}" ruleName="TypeId"/>
        </sequence>
        <token first="{RPAREN}" name="RPAREN"/>
       </sequence>
       <action first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
        <nonterminal first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}" ruleName="CastExpression"/>
       </action>
      </sequence>
      <action first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
       <nonterminal first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}" ruleName="UnaryExpression"/>
      </action>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}" name="UnaryExpression">
   <action first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
    <group first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
     <choice first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
      <choice first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
       <choice first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, FLOATING_LITERAL, CHAR_LITERAL, DYNAMIC_CAST, DOT, REINTERPRET_CAST, ID, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, TRUE, STRING_LITERAL, LPAREN, STATIC_CAST, FALSE, OPERATOR, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
        <choice first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, FLOATING_LITERAL, CHAR_LITERAL, DYNAMIC_CAST, DOT, REINTERPRET_CAST, ID, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, TRUE, STRING_LITERAL, LPAREN, STATIC_CAST, FALSE, OPERATOR, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
         <choice first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, FLOATING_LITERAL, CHAR_LITERAL, DYNAMIC_CAST, DOT, REINTERPRET_CAST, ID, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, TRUE, STRING_LITERAL, LPAREN, STATIC_CAST, FALSE, OPERATOR, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
          <choice first="{#, #, PLUS_PLUS, MINUS_MINUS, COLON_COLON, FLOATING_LITERAL, CHAR_LITERAL, DYNAMIC_CAST, DOT, REINTERPRET_CAST, ID, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, TRUE, STRING_LITERAL, LPAREN, STATIC_CAST, FALSE, OPERATOR, ARROW, LBRACKET}">
           <choice first="{#, #, PLUS_PLUS, MINUS_MINUS, COLON_COLON, FLOATING_LITERAL, CHAR_LITERAL, DYNAMIC_CAST, DOT, REINTERPRET_CAST, ID, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, TRUE, STRING_LITERAL, LPAREN, STATIC_CAST, FALSE, OPERATOR, ARROW, LBRACKET}">
            <choice first="{#, #, PLUS_PLUS, MINUS_MINUS, COLON_COLON, FLOATING_LITERAL, CHAR_LITERAL, DYNAMIC_CAST, DOT, REINTERPRET_CAST, ID, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, TRUE, STRING_LITERAL, LPAREN, STATIC_CAST, FALSE, OPERATOR, ARROW, LBRACKET}">
             <action first="{#, #, PLUS_PLUS, MINUS_MINUS, COLON_COLON, FLOATING_LITERAL, CHAR_LITERAL, DOT, ID, THIS, NULLPTR, INTEGER_LITERAL, TRUE, STRING_LITERAL, LPAREN, FALSE, OPERATOR, ARROW, LBRACKET}">
              <nonterminal first="{#, #, PLUS_PLUS, MINUS_MINUS, COLON_COLON, FLOATING_LITERAL, CHAR_LITERAL, DOT, ID, THIS, NULLPTR, INTEGER_LITERAL, TRUE, STRING_LITERAL, LPAREN, FALSE, OPERATOR, ARROW, LBRACKET}" ruleName="PostfixExpression"/>
             </action>
             <action first="{DYNAMIC_CAST, REINTERPRET_CAST, CONST_CAST, TYPEID, STATIC_CAST}">
              <nonterminal first="{DYNAMIC_CAST, REINTERPRET_CAST, CONST_CAST, TYPEID, STATIC_CAST}" ruleName="PostCastExpression"/>
             </action>
            </choice>
            <sequence first="{PLUS_PLUS}">
             <token first="{PLUS_PLUS}" name="PLUS_PLUS"/>
             <action first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
              <nonterminal first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}" ruleName="UnaryExpression"/>
             </action>
            </sequence>
           </choice>
           <sequence first="{MINUS_MINUS}">
            <token first="{MINUS_MINUS}" name="MINUS_MINUS"/>
            <action first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
             <nonterminal first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}" ruleName="UnaryExpression"/>
            </action>
           </sequence>
          </choice>
          <sequence first="{STAR, PLUS, MINUS, AMP, TILDE, EXCLAMATION}">
           <nonterminal first="{STAR, PLUS, MINUS, AMP, TILDE, EXCLAMATION}" ruleName="UnaryOperator"/>
           <action first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
            <nonterminal first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}" ruleName="CastExpression"/>
           </action>
          </sequence>
         </choice>
         <sequence first="{SIZEOF}">
          <sequence first="{SIZEOF}">
           <sequence first="{SIZEOF}">
            <token first="{SIZEOF}" name="SIZEOF"/>
            <token first="{LPAREN}" name="LPAREN"/>
           </sequence>
           <nonterminal first="{#, #, COLON_COLON, CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, ID, VOID, CONST, DOUBLE, INT, BOOL, SIGNED, WCHART, VOLATILE, CHAR8T, FLOAT, LONG}" ruleName="TypeId"/>
          </sequence>
          <action first="{RPAREN}">
           <token first="{RPAREN}" name="RPAREN"/>
          </action>
         </sequence>
        </choice>
        <sequence first="{SIZEOF}">
         <token first="{SIZEOF}" name="SIZEOF"/>
         <action first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
          <nonterminal first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}" ruleName="UnaryExpression"/>
         </action>
        </sequence>
       </choice>
       <action first="{#, #, COLON_COLON, CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, ID, NEW, VOID, CONST, DOUBLE, INT, LPAREN, BOOL, SIGNED, WCHART, VOLATILE, CHAR8T, FLOAT, LONG}">
        <nonterminal first="{#, #, COLON_COLON, CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, ID, NEW, VOID, CONST, DOUBLE, INT, LPAREN, BOOL, SIGNED, WCHART, VOLATILE, CHAR8T, FLOAT, LONG}" ruleName="NewExpression"/>
       </action>
      </choice>
      <action first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
       <nonterminal first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}" ruleName="DeleteExpression"/>
      </action>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{STAR, PLUS, MINUS, AMP, TILDE, EXCLAMATION}" name="UnaryOperator">
   <switch first="{STAR, PLUS, MINUS, AMP, TILDE, EXCLAMATION}">
    <case first="{STAR}">
     <action first="{STAR}">
      <token first="{STAR}" name="STAR"/>
     </action>
    </case>
    <case first="{AMP}">
     <action first="{AMP}">
      <token first="{AMP}" name="AMP"/>
     </action>
    </case>
    <case first="{PLUS}">
     <action first="{PLUS}">
      <token first="{PLUS}" name="PLUS"/>
     </action>
    </case>
    <case first="{MINUS}">
     <action first="{MINUS}">
      <token first="{MINUS}" name="MINUS"/>
     </action>
    </case>
    <case first="{EXCLAMATION}">
     <action first="{EXCLAMATION}">
      <token first="{EXCLAMATION}" name="EXCLAMATION"/>
     </action>
    </case>
    <case first="{TILDE}">
     <action first="{TILDE}">
      <token first="{TILDE}" name="TILDE"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{#, #, PLUS_PLUS, MINUS_MINUS, COLON_COLON, FLOATING_LITERAL, CHAR_LITERAL, DOT, ID, THIS, NULLPTR, INTEGER_LITERAL, TRUE, STRING_LITERAL, LPAREN, FALSE, OPERATOR, ARROW, LBRACKET}" name="PostfixExpression">
   <action first="{#, #, PLUS_PLUS, MINUS_MINUS, COLON_COLON, FLOATING_LITERAL, CHAR_LITERAL, DOT, ID, THIS, NULLPTR, INTEGER_LITERAL, TRUE, STRING_LITERAL, LPAREN, FALSE, OPERATOR, ARROW, LBRACKET}">
    <group first="{#, #, PLUS_PLUS, MINUS_MINUS, COLON_COLON, FLOATING_LITERAL, CHAR_LITERAL, DOT, ID, THIS, NULLPTR, INTEGER_LITERAL, TRUE, STRING_LITERAL, LPAREN, FALSE, OPERATOR, ARROW, LBRACKET}">
     <sequence first="{#, #, PLUS_PLUS, MINUS_MINUS, COLON_COLON, FLOATING_LITERAL, CHAR_LITERAL, DOT, ID, THIS, NULLPTR, INTEGER_LITERAL, TRUE, STRING_LITERAL, LPAREN, FALSE, OPERATOR, ARROW, LBRACKET}">
      <action first="{#, #, COLON_COLON, FLOATING_LITERAL, CHAR_LITERAL, ID, THIS, NULLPTR, INTEGER_LITERAL, TRUE, STRING_LITERAL, LPAREN, FALSE, OPERATOR}">
       <nonterminal first="{#, #, COLON_COLON, FLOATING_LITERAL, CHAR_LITERAL, ID, THIS, NULLPTR, INTEGER_LITERAL, TRUE, STRING_LITERAL, LPAREN, FALSE, OPERATOR}" ruleName="PrimaryExpression"/>
      </action>
      <kleene first="{#, PLUS_PLUS, MINUS_MINUS, DOT, LPAREN, ARROW, LBRACKET}">
       <group first="{PLUS_PLUS, MINUS_MINUS, DOT, LPAREN, ARROW, LBRACKET}">
        <switch first="{PLUS_PLUS, MINUS_MINUS, DOT, LPAREN, ARROW, LBRACKET}">
         <case first="{LBRACKET}">
          <sequence first="{LBRACKET}">
           <sequence first="{LBRACKET}">
            <token first="{LBRACKET}" name="LBRACKET"/>
            <nonterminal first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="Expression"/>
           </sequence>
           <action first="{RBRACKET}">
            <token first="{RBRACKET}" name="RBRACKET"/>
           </action>
          </sequence>
         </case>
         <case first="{LPAREN}">
          <sequence first="{LPAREN}">
           <sequence first="{LPAREN}">
            <action first="{LPAREN}">
             <token first="{LPAREN}" name="LPAREN"/>
            </action>
            <optional first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
             <nonterminal first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="ExpressionList"/>
            </optional>
           </sequence>
           <token first="{RPAREN}" name="RPAREN"/>
          </sequence>
         </case>
         <case first="{DOT}">
          <sequence first="{DOT}">
           <token first="{DOT}" name="DOT"/>
           <action first="{#, #, COLON_COLON, ID, OPERATOR}">
            <nonterminal first="{#, #, COLON_COLON, ID, OPERATOR}" ruleName="IdExpression"/>
           </action>
          </sequence>
         </case>
         <case first="{ARROW}">
          <sequence first="{ARROW}">
           <token first="{ARROW}" name="ARROW"/>
           <action first="{#, #, COLON_COLON, ID, OPERATOR}">
            <nonterminal first="{#, #, COLON_COLON, ID, OPERATOR}" ruleName="IdExpression"/>
           </action>
          </sequence>
         </case>
         <case first="{PLUS_PLUS}">
          <action first="{PLUS_PLUS}">
           <token first="{PLUS_PLUS}" name="PLUS_PLUS"/>
          </action>
         </case>
         <case first="{MINUS_MINUS}">
          <action first="{MINUS_MINUS}">
           <token first="{MINUS_MINUS}" name="MINUS_MINUS"/>
          </action>
         </case>
        </switch>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{DYNAMIC_CAST, REINTERPRET_CAST, CONST_CAST, TYPEID, STATIC_CAST}" name="PostCastExpression">
   <group first="{DYNAMIC_CAST, REINTERPRET_CAST, CONST_CAST, TYPEID, STATIC_CAST}">
    <switch first="{DYNAMIC_CAST, REINTERPRET_CAST, CONST_CAST, TYPEID, STATIC_CAST}">
     <case first="{DYNAMIC_CAST, REINTERPRET_CAST, CONST_CAST, STATIC_CAST}">
      <sequence first="{DYNAMIC_CAST, REINTERPRET_CAST, CONST_CAST, STATIC_CAST}">
       <sequence first="{DYNAMIC_CAST, REINTERPRET_CAST, CONST_CAST, STATIC_CAST}">
        <sequence first="{DYNAMIC_CAST, REINTERPRET_CAST, CONST_CAST, STATIC_CAST}">
         <sequence first="{DYNAMIC_CAST, REINTERPRET_CAST, CONST_CAST, STATIC_CAST}">
          <sequence first="{DYNAMIC_CAST, REINTERPRET_CAST, CONST_CAST, STATIC_CAST}">
           <sequence first="{DYNAMIC_CAST, REINTERPRET_CAST, CONST_CAST, STATIC_CAST}">
            <group first="{DYNAMIC_CAST, REINTERPRET_CAST, CONST_CAST, STATIC_CAST}">
             <switch first="{DYNAMIC_CAST, REINTERPRET_CAST, CONST_CAST, STATIC_CAST}">
              <case first="{STATIC_CAST}">
               <action first="{STATIC_CAST}">
                <token first="{STATIC_CAST}" name="STATIC_CAST"/>
               </action>
              </case>
              <case first="{DYNAMIC_CAST}">
               <action first="{DYNAMIC_CAST}">
                <token first="{DYNAMIC_CAST}" name="DYNAMIC_CAST"/>
               </action>
              </case>
              <case first="{REINTERPRET_CAST}">
               <action first="{REINTERPRET_CAST}">
                <token first="{REINTERPRET_CAST}" name="REINTERPRET_CAST"/>
               </action>
              </case>
              <case first="{CONST_CAST}">
               <action first="{CONST_CAST}">
                <token first="{CONST_CAST}" name="CONST_CAST"/>
               </action>
              </case>
             </switch>
            </group>
            <token first="{LANGLE}" name="LANGLE"/>
           </sequence>
           <nonterminal first="{#, #, COLON_COLON, CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, ID, VOID, CONST, DOUBLE, INT, BOOL, SIGNED, WCHART, VOLATILE, CHAR8T, FLOAT, LONG}" ruleName="TypeId"/>
          </sequence>
          <token first="{RANGLE}" name="RANGLE"/>
         </sequence>
         <token first="{LPAREN}" name="LPAREN"/>
        </sequence>
        <nonterminal first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="Expression"/>
       </sequence>
       <action first="{RPAREN}">
        <token first="{RPAREN}" name="RPAREN"/>
       </action>
      </sequence>
     </case>
     <case first="{TYPEID}">
      <sequence first="{TYPEID}">
       <sequence first="{TYPEID}">
        <sequence first="{TYPEID}">
         <token first="{TYPEID}" name="TYPEID"/>
         <token first="{LPAREN}" name="LPAREN"/>
        </sequence>
        <nonterminal first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="Expression"/>
       </sequence>
       <action first="{RPAREN}">
        <token first="{RPAREN}" name="RPAREN"/>
       </action>
      </sequence>
     </case>
    </switch>
   </group>
  </rule>
  <rule first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" name="ExpressionList">
   <list first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
    <sequence first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
     <action first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
      <nonterminal first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="AssignmentExpression"/>
     </action>
     <kleene first="{#, COMMA}">
      <sequence first="{COMMA}">
       <token first="{COMMA}" name="COMMA"/>
       <action first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
        <nonterminal first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="AssignmentExpression"/>
       </action>
      </sequence>
     </kleene>
    </sequence>
   </list>
  </rule>
  <rule first="{#, #, COLON_COLON, FLOATING_LITERAL, CHAR_LITERAL, ID, THIS, NULLPTR, INTEGER_LITERAL, TRUE, STRING_LITERAL, LPAREN, FALSE, OPERATOR}" name="PrimaryExpression">
   <choice first="{#, #, COLON_COLON, FLOATING_LITERAL, CHAR_LITERAL, ID, THIS, NULLPTR, INTEGER_LITERAL, TRUE, STRING_LITERAL, LPAREN, FALSE, OPERATOR}">
    <switch first="{FLOATING_LITERAL, CHAR_LITERAL, THIS, NULLPTR, INTEGER_LITERAL, TRUE, STRING_LITERAL, LPAREN, FALSE}">
     <case first="{FLOATING_LITERAL, CHAR_LITERAL, NULLPTR, INTEGER_LITERAL, TRUE, STRING_LITERAL, FALSE}">
      <action first="{FLOATING_LITERAL, CHAR_LITERAL, NULLPTR, INTEGER_LITERAL, TRUE, STRING_LITERAL, FALSE}">
       <nonterminal first="{FLOATING_LITERAL, CHAR_LITERAL, NULLPTR, INTEGER_LITERAL, TRUE, STRING_LITERAL, FALSE}" ruleName="Literal"/>
      </action>
     </case>
     <case first="{THIS}">
      <action first="{THIS}">
       <token first="{THIS}" name="THIS"/>
      </action>
     </case>
     <case first="{LPAREN}">
      <sequence first="{LPAREN}">
       <sequence first="{LPAREN}">
        <token first="{LPAREN}" name="LPAREN"/>
        <nonterminal first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="Expression"/>
       </sequence>
       <action first="{RPAREN}">
        <token first="{RPAREN}" name="RPAREN"/>
       </action>
      </sequence>
     </case>
    </switch>
    <action first="{#, #, COLON_COLON, ID, OPERATOR}">
     <nonterminal first="{#, #, COLON_COLON, ID, OPERATOR}" ruleName="IdExpression"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, #, COLON_COLON, ID, OPERATOR}" name="IdExpression">
   <group first="{#, #, COLON_COLON, ID, OPERATOR}">
    <choice first="{#, #, COLON_COLON, ID, OPERATOR}">
     <choice first="{#, #, COLON_COLON, ID, OPERATOR}">
      <sequence first="{#, COLON_COLON, ID}">
       <sequence first="{#, COLON_COLON, ID}">
        <action first="{#, COLON_COLON, ID}">
         <nonterminal first="{#, COLON_COLON, ID}" ruleName="QualifiedCppId"/>
        </action>
        <token first="{COLON_COLON}" name="COLON_COLON"/>
       </sequence>
       <action first="{OPERATOR}">
        <nonterminal first="{OPERATOR}" ruleName="OperatorFunctionId"/>
       </action>
      </sequence>
      <sequence first="{#, COLON_COLON, OPERATOR}">
       <sequence first="{#, COLON_COLON}">
        <action first="{#}">
         <empty first="{#}"/>
        </action>
        <optional first="{#, COLON_COLON}">
         <group first="{COLON_COLON}">
          <action first="{COLON_COLON}">
           <token first="{COLON_COLON}" name="COLON_COLON"/>
          </action>
         </group>
        </optional>
       </sequence>
       <action first="{OPERATOR}">
        <nonterminal first="{OPERATOR}" ruleName="OperatorFunctionId"/>
       </action>
      </sequence>
     </choice>
     <action first="{#, COLON_COLON, ID}">
      <nonterminal first="{#, COLON_COLON, ID}" ruleName="QualifiedCppId"/>
     </action>
    </choice>
   </group>
  </rule>
  <rule first="{#, COLON_COLON, CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, ID, VOID, DOUBLE, INT, BOOL, SIGNED, WCHART, CHAR8T, FLOAT, LONG}" name="TypeSpecifierOrTypeName">
   <switch first="{#, COLON_COLON, CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, ID, VOID, DOUBLE, INT, BOOL, SIGNED, WCHART, CHAR8T, FLOAT, LONG}">
    <case first="{CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, VOID, DOUBLE, INT, BOOL, SIGNED, WCHART, CHAR8T, FLOAT, LONG}">
     <action first="{CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, VOID, DOUBLE, INT, BOOL, SIGNED, WCHART, CHAR8T, FLOAT, LONG}">
      <nonterminal first="{CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, VOID, DOUBLE, INT, BOOL, SIGNED, WCHART, CHAR8T, FLOAT, LONG}" ruleName="SimpleTypeSpecifier"/>
     </action>
    </case>
    <case first="{#, COLON_COLON, ID}">
     <action first="{#, COLON_COLON, ID}">
      <nonterminal first="{#, COLON_COLON, ID}" ruleName="TypeName"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{#, #, COLON_COLON, CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, ID, NEW, VOID, CONST, DOUBLE, INT, LPAREN, BOOL, SIGNED, WCHART, VOLATILE, CHAR8T, FLOAT, LONG}" name="NewExpression">
   <action first="{#, #, COLON_COLON, CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, ID, NEW, VOID, CONST, DOUBLE, INT, LPAREN, BOOL, SIGNED, WCHART, VOLATILE, CHAR8T, FLOAT, LONG}">
    <group first="{#, #, COLON_COLON, CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, ID, NEW, VOID, CONST, DOUBLE, INT, LPAREN, BOOL, SIGNED, WCHART, VOLATILE, CHAR8T, FLOAT, LONG}">
     <sequence first="{#, #, COLON_COLON, CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, ID, NEW, VOID, CONST, DOUBLE, INT, LPAREN, BOOL, SIGNED, WCHART, VOLATILE, CHAR8T, FLOAT, LONG}">
      <sequence first="{#, #, COLON_COLON, CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, ID, NEW, VOID, CONST, DOUBLE, INT, LPAREN, BOOL, SIGNED, WCHART, VOLATILE, CHAR8T, FLOAT, LONG}">
       <sequence first="{#, #, COLON_COLON, CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, ID, NEW, VOID, CONST, DOUBLE, INT, LPAREN, BOOL, SIGNED, WCHART, VOLATILE, CHAR8T, FLOAT, LONG}">
        <sequence first="{#, #, COLON_COLON, CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, ID, NEW, VOID, CONST, DOUBLE, INT, LPAREN, BOOL, SIGNED, WCHART, VOLATILE, CHAR8T, FLOAT, LONG}">
         <sequence first="{#, COLON_COLON, NEW, LPAREN}">
          <sequence first="{#, COLON_COLON, NEW, LPAREN}">
           <sequence first="{#, COLON_COLON, NEW}">
            <sequence first="{#, COLON_COLON, NEW}">
             <optional first="{#, COLON_COLON}">
              <group first="{COLON_COLON}">
               <action first="{COLON_COLON}">
                <token first="{COLON_COLON}" name="COLON_COLON"/>
               </action>
              </group>
             </optional>
             <action first="{NEW}">
              <token first="{NEW}" name="NEW"/>
             </action>
            </sequence>
            <action first="{#}">
             <empty first="{#}"/>
            </action>
           </sequence>
           <optional first="{#, LPAREN}">
            <nonterminal first="{LPAREN}" ruleName="NewPlacement"/>
           </optional>
          </sequence>
          <action first="{#}">
           <empty first="{#}"/>
          </action>
         </sequence>
         <group first="{#, #, COLON_COLON, CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, ID, VOID, CONST, DOUBLE, INT, LPAREN, BOOL, SIGNED, WCHART, VOLATILE, CHAR8T, FLOAT, LONG}">
          <choice first="{#, #, COLON_COLON, CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, ID, VOID, CONST, DOUBLE, INT, LPAREN, BOOL, SIGNED, WCHART, VOLATILE, CHAR8T, FLOAT, LONG}">
           <action first="{#, #, COLON_COLON, CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, ID, VOID, CONST, DOUBLE, INT, BOOL, SIGNED, WCHART, VOLATILE, CHAR8T, FLOAT, LONG}">
            <nonterminal first="{#, #, COLON_COLON, CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, ID, VOID, CONST, DOUBLE, INT, BOOL, SIGNED, WCHART, VOLATILE, CHAR8T, FLOAT, LONG}" ruleName="NewTypeId"/>
           </action>
           <sequence first="{LPAREN}">
            <sequence first="{LPAREN}">
             <token first="{LPAREN}" name="LPAREN"/>
             <nonterminal first="{#, #, COLON_COLON, CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, ID, VOID, CONST, DOUBLE, INT, BOOL, SIGNED, WCHART, VOLATILE, CHAR8T, FLOAT, LONG}" ruleName="TypeId"/>
            </sequence>
            <action first="{RPAREN}">
             <token first="{RPAREN}" name="RPAREN"/>
            </action>
           </sequence>
          </choice>
         </group>
        </sequence>
        <action first="{#}">
         <empty first="{#}"/>
        </action>
       </sequence>
       <optional first="{#, LPAREN}">
        <nonterminal first="{LPAREN}" ruleName="NewInitializer"/>
       </optional>
      </sequence>
      <action first="{#}">
       <empty first="{#}"/>
      </action>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{LPAREN}" name="NewPlacement">
   <sequence first="{LPAREN}">
    <sequence first="{LPAREN}">
     <token first="{LPAREN}" name="LPAREN"/>
     <nonterminal first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="ExpressionList"/>
    </sequence>
    <token first="{RPAREN}" name="RPAREN"/>
   </sequence>
  </rule>
  <rule first="{#, #, COLON_COLON, CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, ID, VOID, CONST, DOUBLE, INT, BOOL, SIGNED, WCHART, VOLATILE, CHAR8T, FLOAT, LONG}" name="NewTypeId">
   <sequence first="{#, #, COLON_COLON, CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, ID, VOID, CONST, DOUBLE, INT, BOOL, SIGNED, WCHART, VOLATILE, CHAR8T, FLOAT, LONG}">
    <action first="{#}">
     <empty first="{#}"/>
    </action>
    <action first="{#, COLON_COLON, CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, ID, VOID, CONST, DOUBLE, INT, BOOL, SIGNED, WCHART, VOLATILE, CHAR8T, FLOAT, LONG}">
     <group first="{#, COLON_COLON, CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, ID, VOID, CONST, DOUBLE, INT, BOOL, SIGNED, WCHART, VOLATILE, CHAR8T, FLOAT, LONG}">
      <sequence first="{#, COLON_COLON, CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, ID, VOID, CONST, DOUBLE, INT, BOOL, SIGNED, WCHART, VOLATILE, CHAR8T, FLOAT, LONG}">
       <group first="{#, COLON_COLON, CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, ID, VOID, CONST, DOUBLE, INT, BOOL, SIGNED, WCHART, VOLATILE, CHAR8T, FLOAT, LONG}">
        <switch first="{#, COLON_COLON, CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, ID, VOID, CONST, DOUBLE, INT, BOOL, SIGNED, WCHART, VOLATILE, CHAR8T, FLOAT, LONG}">
         <case first="{CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, VOID, CONST, DOUBLE, INT, BOOL, SIGNED, WCHART, VOLATILE, CHAR8T, FLOAT, LONG}">
          <nonterminal first="{CHAR, UNSIGNED, SHORT, CHAR16T, CHAR32T, VOID, CONST, DOUBLE, INT, BOOL, SIGNED, WCHART, VOLATILE, CHAR8T, FLOAT, LONG}" ruleName="TypeSpecifierSeq"/>
         </case>
         <case first="{#, COLON_COLON, ID}">
          <action first="{#, COLON_COLON, ID}">
           <nonterminal first="{#, COLON_COLON, ID}" ruleName="TypeName"/>
          </action>
         </case>
        </switch>
       </group>
       <optional first="{#, STAR, AMP, LBRACKET}">
        <group first="{STAR, AMP, LBRACKET}">
         <action first="{STAR, AMP, LBRACKET}">
          <nonterminal first="{STAR, AMP, LBRACKET}" ruleName="NewDeclarator"/>
         </action>
        </group>
       </optional>
      </sequence>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{STAR, AMP, LBRACKET}" name="NewDeclarator">
   <action first="{STAR, AMP, LBRACKET}">
    <group first="{STAR, AMP, LBRACKET}">
     <switch first="{STAR, AMP, LBRACKET}">
      <case first="{STAR, AMP}">
       <sequence first="{STAR, AMP}">
        <action first="{STAR, AMP}">
         <nonterminal first="{STAR, AMP}" ruleName="PtrOperator"/>
        </action>
        <optional first="{#, STAR, AMP, LBRACKET}">
         <group first="{STAR, AMP, LBRACKET}">
          <action first="{STAR, AMP, LBRACKET}">
           <nonterminal first="{STAR, AMP, LBRACKET}" ruleName="NewDeclarator"/>
          </action>
         </group>
        </optional>
       </sequence>
      </case>
      <case first="{LBRACKET}">
       <action first="{LBRACKET}">
        <nonterminal first="{LBRACKET}" ruleName="DirectNewDeclarator"/>
       </action>
      </case>
     </switch>
    </group>
   </action>
  </rule>
  <rule first="{LPAREN}" name="NewInitializer">
   <sequence first="{LPAREN}">
    <sequence first="{LPAREN}">
     <token first="{LPAREN}" name="LPAREN"/>
     <optional first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
      <nonterminal first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="ExpressionList"/>
     </optional>
    </sequence>
    <token first="{RPAREN}" name="RPAREN"/>
   </sequence>
  </rule>
  <rule first="{LBRACKET}" name="DirectNewDeclarator">
   <action first="{LBRACKET}">
    <group first="{LBRACKET}">
     <sequence first="{LBRACKET}">
      <sequence first="{LBRACKET}">
       <sequence first="{LBRACKET}">
        <action first="{LBRACKET}">
         <token first="{LBRACKET}" name="LBRACKET"/>
        </action>
        <action first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
         <nonterminal first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="Expression"/>
        </action>
       </sequence>
       <action first="{RBRACKET}">
        <token first="{RBRACKET}" name="RBRACKET"/>
       </action>
      </sequence>
      <kleene first="{#, LBRACKET}">
       <group first="{LBRACKET}">
        <sequence first="{LBRACKET}">
         <sequence first="{LBRACKET}">
          <token first="{LBRACKET}" name="LBRACKET"/>
          <nonterminal first="{#, #, XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, DOT_STAR, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, COLON_COLON, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, PIPE, QUEST, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="ConstantExpression"/>
         </sequence>
         <action first="{RBRACKET}">
          <token first="{RBRACKET}" name="RBRACKET"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}" name="DeleteExpression">
   <action first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
    <group first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
     <sequence first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}">
      <sequence first="{#, COLON_COLON, DELETE, LBRACKET}">
       <sequence first="{#, COLON_COLON, DELETE}">
        <optional first="{#, COLON_COLON}">
         <group first="{COLON_COLON}">
          <action first="{COLON_COLON}">
           <token first="{COLON_COLON}" name="COLON_COLON"/>
          </action>
         </group>
        </optional>
        <token first="{DELETE}" name="DELETE"/>
       </sequence>
       <optional first="{#, LBRACKET}">
        <group first="{LBRACKET}">
         <sequence first="{LBRACKET}">
          <token first="{LBRACKET}" name="LBRACKET"/>
          <action first="{RBRACKET}">
           <token first="{RBRACKET}" name="RBRACKET"/>
          </action>
         </sequence>
        </group>
       </optional>
      </sequence>
      <nonterminal first="{#, #, STAR, PLUS_PLUS, MINUS_MINUS, COLON_COLON, PLUS, MINUS, SIZEOF, CHAR, UNSIGNED, FLOATING_LITERAL, CHAR_LITERAL, SHORT, DYNAMIC_CAST, DOT, REINTERPRET_CAST, CHAR16T, DELETE, CHAR32T, ID, NEW, VOID, CONST, CONST_CAST, TYPEID, THIS, NULLPTR, INTEGER_LITERAL, DOUBLE, TRUE, INT, STRING_LITERAL, LPAREN, STATIC_CAST, BOOL, SIGNED, WCHART, VOLATILE, FALSE, OPERATOR, CHAR8T, FLOAT, LONG, AMP, TILDE, ARROW, EXCLAMATION, LBRACKET}" ruleName="CastExpression"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{OPERATOR}" name="OperatorFunctionId">
   <action first="{OPERATOR}">
    <group first="{OPERATOR}">
     <sequence first="{OPERATOR}">
      <action first="{OPERATOR}">
       <token first="{OPERATOR}" name="OPERATOR"/>
      </action>
      <action first="{XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, DELETE, NEW, LPAREN, AMP, PIPE, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
       <nonterminal first="{XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, DELETE, NEW, LPAREN, AMP, PIPE, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" ruleName="Operator"/>
      </action>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, DELETE, NEW, LPAREN, AMP, PIPE, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}" name="Operator">
   <group first="{XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, DELETE, NEW, LPAREN, AMP, PIPE, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
    <choice first="{XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, DELETE, NEW, LPAREN, AMP, PIPE, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
     <choice first="{XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, DELETE, NEW, LPAREN, AMP, PIPE, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
      <switch first="{XOR_ASSIGN, SHIFT_LEFT_ASSIGN, OR_ASSIGN, ARROW_STAR, EQ, STAR, GEQ, NEQ, DIV, PLUS_PLUS, AMP_AMP, DIV_ASSIGN, MUL_ASSIGN, MINUS_MINUS, REM_ASSIGN, PLUS_ASSIGN, DISJUNCTION, SHIFT_RIGHT, MINUS_ASSIGN, SHIFT_LEFT, PLUS, REM, ASSIGN, MINUS, LEQ, SHIFT_RIGHT_ASSIGN, AND_ASSIGN, DELETE, NEW, LPAREN, AMP, PIPE, TILDE, CARET, ARROW, COMMA, EXCLAMATION, RANGLE, LBRACKET, LANGLE}">
       <case first="{LBRACKET}">
        <sequence first="{LBRACKET}">
         <token first="{LBRACKET}" name="LBRACKET"/>
         <action first="{RBRACKET}">
          <token first="{RBRACKET}" name="RBRACKET"/>
         </action>
        </sequence>
       </case>
       <case first="{LPAREN}">
        <sequence first="{LPAREN}">
         <token first="{LPAREN}" name="LPAREN"/>
         <action first="{RPAREN}">
          <token first="{RPAREN}" name="RPAREN"/>
         </action>
        </sequence>
       </case>
       <case first="{ARROW_STAR}">
        <action first="{ARROW_STAR}">
         <token first="{ARROW_STAR}" name="ARROW_STAR"/>
        </action>
       </case>
       <case first="{ARROW}">
        <action first="{ARROW}">
         <token first="{ARROW}" name="ARROW"/>
        </action>
       </case>
       <case first="{COMMA}">
        <action first="{COMMA}">
         <token first="{COMMA}" name="COMMA"/>
        </action>
       </case>
       <case first="{MINUS_MINUS}">
        <action first="{MINUS_MINUS}">
         <token first="{MINUS_MINUS}" name="MINUS_MINUS"/>
        </action>
       </case>
       <case first="{PLUS_PLUS}">
        <action first="{PLUS_PLUS}">
         <token first="{PLUS_PLUS}" name="PLUS_PLUS"/>
        </action>
       </case>
       <case first="{DISJUNCTION}">
        <action first="{DISJUNCTION}">
         <token first="{DISJUNCTION}" name="DISJUNCTION"/>
        </action>
       </case>
       <case first="{AMP_AMP}">
        <action first="{AMP_AMP}">
         <token first="{AMP_AMP}" name="AMP_AMP"/>
        </action>
       </case>
       <case first="{LEQ}">
        <action first="{LEQ}">
         <token first="{LEQ}" name="LEQ"/>
        </action>
       </case>
       <case first="{GEQ}">
        <action first="{GEQ}">
         <token first="{GEQ}" name="GEQ"/>
        </action>
       </case>
       <case first="{NEQ}">
        <action first="{NEQ}">
         <token first="{NEQ}" name="NEQ"/>
        </action>
       </case>
       <case first="{EQ}">
        <action first="{EQ}">
         <token first="{EQ}" name="EQ"/>
        </action>
       </case>
       <case first="{SHIFT_LEFT_ASSIGN}">
        <action first="{SHIFT_LEFT_ASSIGN}">
         <token first="{SHIFT_LEFT_ASSIGN}" name="SHIFT_LEFT_ASSIGN"/>
        </action>
       </case>
       <case first="{SHIFT_RIGHT_ASSIGN}">
        <action first="{SHIFT_RIGHT_ASSIGN}">
         <token first="{SHIFT_RIGHT_ASSIGN}" name="SHIFT_RIGHT_ASSIGN"/>
        </action>
       </case>
       <case first="{SHIFT_LEFT}">
        <action first="{SHIFT_LEFT}">
         <token first="{SHIFT_LEFT}" name="SHIFT_LEFT"/>
        </action>
       </case>
       <case first="{SHIFT_RIGHT}">
        <action first="{SHIFT_RIGHT}">
         <token first="{SHIFT_RIGHT}" name="SHIFT_RIGHT"/>
        </action>
       </case>
       <case first="{OR_ASSIGN}">
        <action first="{OR_ASSIGN}">
         <token first="{OR_ASSIGN}" name="OR_ASSIGN"/>
        </action>
       </case>
       <case first="{AND_ASSIGN}">
        <action first="{AND_ASSIGN}">
         <token first="{AND_ASSIGN}" name="AND_ASSIGN"/>
        </action>
       </case>
       <case first="{XOR_ASSIGN}">
        <action first="{XOR_ASSIGN}">
         <token first="{XOR_ASSIGN}" name="XOR_ASSIGN"/>
        </action>
       </case>
       <case first="{REM_ASSIGN}">
        <action first="{REM_ASSIGN}">
         <token first="{REM_ASSIGN}" name="REM_ASSIGN"/>
        </action>
       </case>
       <case first="{DIV_ASSIGN}">
        <action first="{DIV_ASSIGN}">
         <token first="{DIV_ASSIGN}" name="DIV_ASSIGN"/>
        </action>
       </case>
       <case first="{MUL_ASSIGN}">
        <action first="{MUL_ASSIGN}">
         <token first="{MUL_ASSIGN}" name="MUL_ASSIGN"/>
        </action>
       </case>
       <case first="{MINUS_ASSIGN}">
        <action first="{MINUS_ASSIGN}">
         <token first="{MINUS_ASSIGN}" name="MINUS_ASSIGN"/>
        </action>
       </case>
       <case first="{PLUS_ASSIGN}">
        <action first="{PLUS_ASSIGN}">
         <token first="{PLUS_ASSIGN}" name="PLUS_ASSIGN"/>
        </action>
       </case>
       <case first="{LANGLE}">
        <action first="{LANGLE}">
         <token first="{LANGLE}" name="LANGLE"/>
        </action>
       </case>
       <case first="{RANGLE}">
        <action first="{RANGLE}">
         <token first="{RANGLE}" name="RANGLE"/>
        </action>
       </case>
       <case first="{ASSIGN}">
        <action first="{ASSIGN}">
         <token first="{ASSIGN}" name="ASSIGN"/>
        </action>
       </case>
       <case first="{EXCLAMATION}">
        <action first="{EXCLAMATION}">
         <token first="{EXCLAMATION}" name="EXCLAMATION"/>
        </action>
       </case>
       <case first="{TILDE}">
        <action first="{TILDE}">
         <token first="{TILDE}" name="TILDE"/>
        </action>
       </case>
       <case first="{AMP}">
        <action first="{AMP}">
         <token first="{AMP}" name="AMP"/>
        </action>
       </case>
       <case first="{CARET}">
        <action first="{CARET}">
         <token first="{CARET}" name="CARET"/>
        </action>
       </case>
       <case first="{PIPE}">
        <action first="{PIPE}">
         <token first="{PIPE}" name="PIPE"/>
        </action>
       </case>
       <case first="{REM}">
        <action first="{REM}">
         <token first="{REM}" name="REM"/>
        </action>
       </case>
       <case first="{DIV}">
        <action first="{DIV}">
         <token first="{DIV}" name="DIV"/>
        </action>
       </case>
       <case first="{STAR}">
        <action first="{STAR}">
         <token first="{STAR}" name="STAR"/>
        </action>
       </case>
       <case first="{MINUS}">
        <action first="{MINUS}">
         <token first="{MINUS}" name="MINUS"/>
        </action>
       </case>
       <case first="{PLUS}">
        <action first="{PLUS}">
         <token first="{PLUS}" name="PLUS"/>
        </action>
       </case>
       <case first="{NEW}">
        <sequence first="{NEW}">
         <sequence first="{NEW}">
          <token first="{NEW}" name="NEW"/>
          <token first="{LBRACKET}" name="LBRACKET"/>
         </sequence>
         <action first="{RBRACKET}">
          <token first="{RBRACKET}" name="RBRACKET"/>
         </action>
        </sequence>
       </case>
       <case first="{DELETE}">
        <sequence first="{DELETE}">
         <sequence first="{DELETE}">
          <token first="{DELETE}" name="DELETE"/>
          <token first="{LBRACKET}" name="LBRACKET"/>
         </sequence>
         <action first="{RBRACKET}">
          <token first="{RBRACKET}" name="RBRACKET"/>
         </action>
        </sequence>
       </case>
      </switch>
      <action first="{NEW}">
       <token first="{NEW}" name="NEW"/>
      </action>
     </choice>
     <action first="{DELETE}">
      <token first="{DELETE}" name="DELETE"/>
     </action>
    </choice>
   </group>
  </rule>
 </grammar>
</parserFile>
