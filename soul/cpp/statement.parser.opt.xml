<parserFile>
 <grammar name="StatementParser">
  <rule first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}" name="Statement">
   <choice first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}">
    <choice first="{#, #, #, #, AUTO, CONST, FLOAT, STAR, VOID, CHAR16T, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, OPERATOR, CHAR, INT, LONG, SIGNED, REGISTER, USING, CHAR8T, CHAR32T, COLON_COLON, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, CASE, DEFAULT, SEMICOLON, WHILE, BREAK, LBRACE, AMP, IF, DO, CONTINUE, FOR, ID, RETURN, SWITCH, GOTO}">
     <switch first="{CASE, DEFAULT, SEMICOLON, WHILE, BREAK, LBRACE, IF, DO, CONTINUE, FOR, ID, RETURN, SWITCH, GOTO}">
      <case first="{CASE, DEFAULT, ID}">
       <action first="{CASE, DEFAULT, ID}">
        <nonterminal first="{CASE, DEFAULT, ID}" ruleName="LabeledStatement"/>
       </action>
      </case>
      <case first="{SEMICOLON}">
       <action first="{SEMICOLON}">
        <nonterminal first="{SEMICOLON}" ruleName="EmptyStatement"/>
       </action>
      </case>
      <case first="{LBRACE}">
       <action first="{LBRACE}">
        <nonterminal first="{LBRACE}" ruleName="CompoundStatement"/>
       </action>
      </case>
      <case first="{IF, SWITCH}">
       <action first="{IF, SWITCH}">
        <nonterminal first="{IF, SWITCH}" ruleName="SelectionStatement"/>
       </action>
      </case>
      <case first="{WHILE, DO, FOR}">
       <action first="{WHILE, DO, FOR}">
        <nonterminal first="{WHILE, DO, FOR}" ruleName="IterationStatement"/>
       </action>
      </case>
      <case first="{BREAK, CONTINUE, RETURN, GOTO}">
       <action first="{BREAK, CONTINUE, RETURN, GOTO}">
        <nonterminal first="{BREAK, CONTINUE, RETURN, GOTO}" ruleName="JumpStatement"/>
       </action>
      </case>
     </switch>
     <action first="{#, #, #, #, AUTO, CONST, FLOAT, STAR, VOID, CHAR16T, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, OPERATOR, CHAR, INT, LONG, SIGNED, REGISTER, USING, CHAR8T, CHAR32T, COLON_COLON, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, SEMICOLON, AMP, ID}">
      <nonterminal first="{#, #, #, #, AUTO, CONST, FLOAT, STAR, VOID, CHAR16T, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, OPERATOR, CHAR, INT, LONG, SIGNED, REGISTER, USING, CHAR8T, CHAR32T, COLON_COLON, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, SEMICOLON, AMP, ID}" ruleName="DeclarationStatement"/>
     </action>
    </choice>
    <action first="{#, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}">
     <nonterminal first="{#, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}" ruleName="ExpressionStatement"/>
    </action>
   </choice>
  </rule>
  <rule first="{CASE, DEFAULT, ID}" name="LabeledStatement">
   <switch first="{CASE, DEFAULT, ID}">
    <case first="{ID}">
     <sequence first="{ID}">
      <sequence first="{ID}">
       <action first="{ID}">
        <token first="{ID}" name="ID"/>
       </action>
       <token first="{COLON}" name="COLON"/>
      </sequence>
      <action first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}">
       <expectation first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}">
        <nonterminal first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}" ruleName="Statement"/>
       </expectation>
      </action>
     </sequence>
    </case>
    <case first="{CASE}">
     <sequence first="{CASE}">
      <sequence first="{CASE}">
       <sequence first="{CASE}">
        <token first="{CASE}" name="CASE"/>
        <expectation first="{#, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}">
         <nonterminal first="{#, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}" ruleName="ConstantExpression"/>
        </expectation>
       </sequence>
       <expectation first="{COLON}">
        <token first="{COLON}" name="COLON"/>
       </expectation>
      </sequence>
      <action first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}">
       <expectation first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}">
        <nonterminal first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}" ruleName="Statement"/>
       </expectation>
      </action>
     </sequence>
    </case>
    <case first="{DEFAULT}">
     <sequence first="{DEFAULT}">
      <sequence first="{DEFAULT}">
       <token first="{DEFAULT}" name="DEFAULT"/>
       <expectation first="{COLON}">
        <token first="{COLON}" name="COLON"/>
       </expectation>
      </sequence>
      <action first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}">
       <expectation first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}">
        <nonterminal first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}" ruleName="Statement"/>
       </expectation>
      </action>
     </sequence>
    </case>
   </switch>
  </rule>
  <rule first="{SEMICOLON}" name="EmptyStatement">
   <action first="{SEMICOLON}">
    <token first="{SEMICOLON}" name="SEMICOLON"/>
   </action>
  </rule>
  <rule first="{LBRACE}" name="CompoundStatement">
   <action first="{LBRACE}">
    <group first="{LBRACE}">
     <sequence first="{LBRACE}">
      <sequence first="{LBRACE}">
       <action first="{LBRACE}">
        <token first="{LBRACE}" name="LBRACE"/>
       </action>
       <kleene first="{#, #, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}">
        <group first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}">
         <action first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}">
          <nonterminal first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}" ruleName="Statement"/>
         </action>
        </group>
       </kleene>
      </sequence>
      <expectation first="{RBRACE}">
       <token first="{RBRACE}" name="RBRACE"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{IF, SWITCH}" name="SelectionStatement">
   <switch first="{IF, SWITCH}">
    <case first="{IF}">
     <action first="{IF}">
      <nonterminal first="{IF}" ruleName="IfStatement"/>
     </action>
    </case>
    <case first="{SWITCH}">
     <action first="{SWITCH}">
      <nonterminal first="{SWITCH}" ruleName="SwitchStatement"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{IF}" name="IfStatement">
   <action first="{IF}">
    <group first="{IF}">
     <sequence first="{IF}">
      <sequence first="{IF}">
       <sequence first="{IF}">
        <sequence first="{IF}">
         <sequence first="{IF}">
          <token first="{IF}" name="IF"/>
          <expectation first="{LPAREN}">
           <token first="{LPAREN}" name="LPAREN"/>
          </expectation>
         </sequence>
         <expectation first="{#, #, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}">
          <nonterminal first="{#, #, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}" ruleName="Condition"/>
         </expectation>
        </sequence>
        <expectation first="{RPAREN}">
         <token first="{RPAREN}" name="RPAREN"/>
        </expectation>
       </sequence>
       <expectation first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}">
        <nonterminal first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}" ruleName="Statement"/>
       </expectation>
      </sequence>
      <optional first="{#, ELSE}">
       <group first="{ELSE}">
        <sequence first="{ELSE}">
         <token first="{ELSE}" name="ELSE"/>
         <nonterminal first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}" ruleName="Statement"/>
        </sequence>
       </group>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{SWITCH}" name="SwitchStatement">
   <action first="{SWITCH}">
    <group first="{SWITCH}">
     <sequence first="{SWITCH}">
      <sequence first="{SWITCH}">
       <sequence first="{SWITCH}">
        <sequence first="{SWITCH}">
         <token first="{SWITCH}" name="SWITCH"/>
         <expectation first="{LPAREN}">
          <token first="{LPAREN}" name="LPAREN"/>
         </expectation>
        </sequence>
        <expectation first="{#, #, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}">
         <nonterminal first="{#, #, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}" ruleName="Condition"/>
        </expectation>
       </sequence>
       <expectation first="{RPAREN}">
        <token first="{RPAREN}" name="RPAREN"/>
       </expectation>
      </sequence>
      <expectation first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}">
       <nonterminal first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}" ruleName="Statement"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{WHILE, DO, FOR}" name="IterationStatement">
   <choice first="{WHILE, DO, FOR}">
    <switch first="{WHILE, DO, FOR}">
     <case first="{WHILE}">
      <action first="{WHILE}">
       <nonterminal first="{WHILE}" ruleName="WhileStatement"/>
      </action>
     </case>
     <case first="{DO}">
      <action first="{DO}">
       <nonterminal first="{DO}" ruleName="DoStatement"/>
      </action>
     </case>
     <case first="{FOR}">
      <action first="{FOR}">
       <nonterminal first="{FOR}" ruleName="RangeForStatement"/>
      </action>
     </case>
    </switch>
    <action first="{FOR}">
     <nonterminal first="{FOR}" ruleName="ForStatement"/>
    </action>
   </choice>
  </rule>
  <rule first="{WHILE}" name="WhileStatement">
   <action first="{WHILE}">
    <group first="{WHILE}">
     <sequence first="{WHILE}">
      <sequence first="{WHILE}">
       <sequence first="{WHILE}">
        <sequence first="{WHILE}">
         <token first="{WHILE}" name="WHILE"/>
         <expectation first="{LPAREN}">
          <token first="{LPAREN}" name="LPAREN"/>
         </expectation>
        </sequence>
        <expectation first="{#, #, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}">
         <nonterminal first="{#, #, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}" ruleName="Condition"/>
        </expectation>
       </sequence>
       <expectation first="{RPAREN}">
        <token first="{RPAREN}" name="RPAREN"/>
       </expectation>
      </sequence>
      <expectation first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}">
       <nonterminal first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}" ruleName="Statement"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{DO}" name="DoStatement">
   <action first="{DO}">
    <group first="{DO}">
     <sequence first="{DO}">
      <sequence first="{DO}">
       <sequence first="{DO}">
        <sequence first="{DO}">
         <sequence first="{DO}">
          <sequence first="{DO}">
           <token first="{DO}" name="DO"/>
           <expectation first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}">
            <nonterminal first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}" ruleName="Statement"/>
           </expectation>
          </sequence>
          <expectation first="{WHILE}">
           <token first="{WHILE}" name="WHILE"/>
          </expectation>
         </sequence>
         <expectation first="{LPAREN}">
          <token first="{LPAREN}" name="LPAREN"/>
         </expectation>
        </sequence>
        <expectation first="{#, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}">
         <nonterminal first="{#, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}" ruleName="Expression"/>
        </expectation>
       </sequence>
       <expectation first="{RPAREN}">
        <token first="{RPAREN}" name="RPAREN"/>
       </expectation>
      </sequence>
      <expectation first="{SEMICOLON}">
       <token first="{SEMICOLON}" name="SEMICOLON"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{FOR}" name="RangeForStatement">
   <action first="{FOR}">
    <group first="{FOR}">
     <sequence first="{FOR}">
      <sequence first="{FOR}">
       <sequence first="{FOR}">
        <sequence first="{FOR}">
         <sequence first="{FOR}">
          <sequence first="{FOR}">
           <token first="{FOR}" name="FOR"/>
           <token first="{LPAREN}" name="LPAREN"/>
          </sequence>
          <nonterminal first="{#, #, #, AUTO, CONST, FLOAT, STAR, VOID, CHAR16T, TYPEDEF, MUTABLE, VOLATILE, BOOL, OPERATOR, CHAR, INT, LONG, SIGNED, REGISTER, CHAR8T, CHAR32T, COLON_COLON, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, AMP, ID}" ruleName="ForRangeDeclaration"/>
         </sequence>
         <token first="{COLON}" name="COLON"/>
        </sequence>
        <expectation first="{#, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}">
         <nonterminal first="{#, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}" ruleName="Expression"/>
        </expectation>
       </sequence>
       <expectation first="{RPAREN}">
        <token first="{RPAREN}" name="RPAREN"/>
       </expectation>
      </sequence>
      <expectation first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}">
       <nonterminal first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}" ruleName="Statement"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, #, #, AUTO, CONST, FLOAT, STAR, VOID, CHAR16T, TYPEDEF, MUTABLE, VOLATILE, BOOL, OPERATOR, CHAR, INT, LONG, SIGNED, REGISTER, CHAR8T, CHAR32T, COLON_COLON, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, AMP, ID}" name="ForRangeDeclaration">
   <action first="{#, #, #, AUTO, CONST, FLOAT, STAR, VOID, CHAR16T, TYPEDEF, MUTABLE, VOLATILE, BOOL, OPERATOR, CHAR, INT, LONG, SIGNED, REGISTER, CHAR8T, CHAR32T, COLON_COLON, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, AMP, ID}">
    <group first="{#, #, #, AUTO, CONST, FLOAT, STAR, VOID, CHAR16T, TYPEDEF, MUTABLE, VOLATILE, BOOL, OPERATOR, CHAR, INT, LONG, SIGNED, REGISTER, CHAR8T, CHAR32T, COLON_COLON, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, AMP, ID}">
     <sequence first="{#, #, #, AUTO, CONST, FLOAT, STAR, VOID, CHAR16T, TYPEDEF, MUTABLE, VOLATILE, BOOL, OPERATOR, CHAR, INT, LONG, SIGNED, REGISTER, CHAR8T, CHAR32T, COLON_COLON, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, AMP, ID}">
      <sequence first="{#, #, AUTO, CONST, FLOAT, VOID, CHAR16T, TYPEDEF, MUTABLE, VOLATILE, BOOL, CHAR, INT, LONG, SIGNED, REGISTER, CHAR8T, CHAR32T, COLON_COLON, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, ID}">
       <action first="{#}">
        <empty first="{#}"/>
       </action>
       <nonterminal first="{#, AUTO, CONST, FLOAT, VOID, CHAR16T, TYPEDEF, MUTABLE, VOLATILE, BOOL, CHAR, INT, LONG, SIGNED, REGISTER, CHAR8T, CHAR32T, COLON_COLON, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, ID}" ruleName="DeclSpecifierSeq"/>
      </sequence>
      <action first="{#, #, STAR, OPERATOR, COLON_COLON, AMP, ID}">
       <nonterminal first="{#, #, STAR, OPERATOR, COLON_COLON, AMP, ID}" ruleName="Declarator"/>
      </action>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{FOR}" name="ForStatement">
   <sequence first="{FOR}">
    <sequence first="{FOR}">
     <sequence first="{FOR}">
      <sequence first="{FOR}">
       <sequence first="{FOR}">
        <sequence first="{FOR}">
         <sequence first="{FOR}">
          <token first="{FOR}" name="FOR"/>
          <token first="{LPAREN}" name="LPAREN"/>
         </sequence>
         <nonterminal first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}" ruleName="ForInitStatement"/>
        </sequence>
        <optional first="{#, #, #, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}">
         <nonterminal first="{#, #, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}" ruleName="Condition"/>
        </optional>
       </sequence>
       <token first="{SEMICOLON}" name="SEMICOLON"/>
      </sequence>
      <optional first="{#, #, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}">
       <nonterminal first="{#, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}" ruleName="Expression"/>
      </optional>
     </sequence>
     <expectation first="{RPAREN}">
      <token first="{RPAREN}" name="RPAREN"/>
     </expectation>
    </sequence>
    <action first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}">
     <expectation first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}">
      <nonterminal first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, USING, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CASE, CARET, DEFAULT, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, WHILE, LBRACKET, BREAK, LBRACE, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, IF, DO, CONTINUE, FLOATING_LITERAL, FOR, COMMA, CHAR_LITERAL, NULLPTR, ID, RETURN, SWITCH, TILDE, GOTO}" ruleName="Statement"/>
     </expectation>
    </action>
   </sequence>
  </rule>
  <rule first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}" name="ForInitStatement">
   <choice first="{#, #, #, #, DISJUNCTION, AMP_AMP, AUTO, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, TYPEDEF, MUTABLE, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REGISTER, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}">
    <switch first="{#, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, SEMICOLON, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}">
     <case first="{SEMICOLON}">
      <action first="{SEMICOLON}">
       <nonterminal first="{SEMICOLON}" ruleName="EmptyStatement"/>
      </action>
     </case>
     <case first="{#, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}">
      <action first="{#, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}">
       <nonterminal first="{#, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}" ruleName="ExpressionStatement"/>
      </action>
     </case>
    </switch>
    <action first="{#, #, #, #, AUTO, CONST, FLOAT, STAR, VOID, CHAR16T, TYPEDEF, MUTABLE, VOLATILE, BOOL, OPERATOR, CHAR, INT, LONG, SIGNED, REGISTER, CHAR8T, CHAR32T, COLON_COLON, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, SEMICOLON, AMP, ID}">
     <nonterminal first="{#, #, #, #, AUTO, CONST, FLOAT, STAR, VOID, CHAR16T, TYPEDEF, MUTABLE, VOLATILE, BOOL, OPERATOR, CHAR, INT, LONG, SIGNED, REGISTER, CHAR8T, CHAR32T, COLON_COLON, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, SEMICOLON, AMP, ID}" ruleName="SimpleDeclaration"/>
    </action>
   </choice>
  </rule>
  <rule first="{BREAK, CONTINUE, RETURN, GOTO}" name="JumpStatement">
   <switch first="{BREAK, CONTINUE, RETURN, GOTO}">
    <case first="{BREAK}">
     <action first="{BREAK}">
      <nonterminal first="{BREAK}" ruleName="BreakStatement"/>
     </action>
    </case>
    <case first="{CONTINUE}">
     <action first="{CONTINUE}">
      <nonterminal first="{CONTINUE}" ruleName="ContinueStatement"/>
     </action>
    </case>
    <case first="{RETURN}">
     <action first="{RETURN}">
      <nonterminal first="{RETURN}" ruleName="ReturnStatement"/>
     </action>
    </case>
    <case first="{GOTO}">
     <action first="{GOTO}">
      <nonterminal first="{GOTO}" ruleName="GotoStatement"/>
     </action>
    </case>
   </switch>
  </rule>
  <rule first="{BREAK}" name="BreakStatement">
   <action first="{BREAK}">
    <group first="{BREAK}">
     <sequence first="{BREAK}">
      <token first="{BREAK}" name="BREAK"/>
      <expectation first="{SEMICOLON}">
       <token first="{SEMICOLON}" name="SEMICOLON"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{CONTINUE}" name="ContinueStatement">
   <action first="{CONTINUE}">
    <group first="{CONTINUE}">
     <sequence first="{CONTINUE}">
      <token first="{CONTINUE}" name="CONTINUE"/>
      <expectation first="{SEMICOLON}">
       <token first="{SEMICOLON}" name="SEMICOLON"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{RETURN}" name="ReturnStatement">
   <action first="{RETURN}">
    <group first="{RETURN}">
     <sequence first="{RETURN}">
      <sequence first="{RETURN}">
       <token first="{RETURN}" name="RETURN"/>
       <optional first="{#, #, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}">
        <nonterminal first="{#, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}" ruleName="Expression"/>
       </optional>
      </sequence>
      <expectation first="{SEMICOLON}">
       <token first="{SEMICOLON}" name="SEMICOLON"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{GOTO}" name="GotoStatement">
   <action first="{GOTO}">
    <group first="{GOTO}">
     <sequence first="{GOTO}">
      <sequence first="{GOTO}">
       <token first="{GOTO}" name="GOTO"/>
       <action first="{ID}">
        <expectation first="{ID}">
         <token first="{ID}" name="ID"/>
        </expectation>
       </action>
      </sequence>
      <expectation first="{SEMICOLON}">
       <token first="{SEMICOLON}" name="SEMICOLON"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, #, #, #, AUTO, CONST, FLOAT, STAR, VOID, CHAR16T, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, OPERATOR, CHAR, INT, LONG, SIGNED, REGISTER, USING, CHAR8T, CHAR32T, COLON_COLON, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, SEMICOLON, AMP, ID}" name="DeclarationStatement">
   <action first="{#, #, #, #, AUTO, CONST, FLOAT, STAR, VOID, CHAR16T, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, OPERATOR, CHAR, INT, LONG, SIGNED, REGISTER, USING, CHAR8T, CHAR32T, COLON_COLON, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, SEMICOLON, AMP, ID}">
    <group first="{#, #, #, #, AUTO, CONST, FLOAT, STAR, VOID, CHAR16T, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, OPERATOR, CHAR, INT, LONG, SIGNED, REGISTER, USING, CHAR8T, CHAR32T, COLON_COLON, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, SEMICOLON, AMP, ID}">
     <nonterminal first="{#, #, #, #, AUTO, CONST, FLOAT, STAR, VOID, CHAR16T, TYPEDEF, MUTABLE, NAMESPACE, VOLATILE, BOOL, OPERATOR, CHAR, INT, LONG, SIGNED, REGISTER, USING, CHAR8T, CHAR32T, COLON_COLON, STATIC, EXTERN, UNSIGNED, WCHART, DOUBLE, SHORT, SEMICOLON, AMP, ID}" ruleName="BlockDeclaration"/>
    </group>
   </action>
  </rule>
  <rule first="{#, #, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}" name="Condition">
   <group first="{#, #, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}">
    <choice first="{#, #, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}">
     <sequence first="{#, #, CONST, FLOAT, VOID, CHAR16T, VOLATILE, BOOL, CHAR, INT, LONG, SIGNED, CHAR8T, CHAR32T, COLON_COLON, UNSIGNED, WCHART, DOUBLE, SHORT, ID}">
      <sequence first="{#, #, CONST, FLOAT, VOID, CHAR16T, VOLATILE, BOOL, CHAR, INT, LONG, SIGNED, CHAR8T, CHAR32T, COLON_COLON, UNSIGNED, WCHART, DOUBLE, SHORT, ID}">
       <sequence first="{#, #, CONST, FLOAT, VOID, CHAR16T, VOLATILE, BOOL, CHAR, INT, LONG, SIGNED, CHAR8T, CHAR32T, COLON_COLON, UNSIGNED, WCHART, DOUBLE, SHORT, ID}">
        <nonterminal first="{#, #, CONST, FLOAT, VOID, CHAR16T, VOLATILE, BOOL, CHAR, INT, LONG, SIGNED, CHAR8T, CHAR32T, COLON_COLON, UNSIGNED, WCHART, DOUBLE, SHORT, ID}" ruleName="TypeId"/>
        <nonterminal first="{#, #, STAR, OPERATOR, COLON_COLON, AMP, ID}" ruleName="Declarator"/>
       </sequence>
       <token first="{ASSIGN}" name="ASSIGN"/>
      </sequence>
      <action first="{#, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, CHAR_LITERAL, NULLPTR, ID, TILDE}">
       <nonterminal first="{#, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, CHAR_LITERAL, NULLPTR, ID, TILDE}" ruleName="AssignmentExpression"/>
      </action>
     </sequence>
     <action first="{#, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}">
      <nonterminal first="{#, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}" ruleName="Expression"/>
     </action>
    </choice>
   </group>
  </rule>
  <rule first="{#, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}" name="ExpressionStatement">
   <action first="{#, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}">
    <group first="{#, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}">
     <sequence first="{#, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}">
      <nonterminal first="{#, #, DISJUNCTION, AMP_AMP, SHIFT_RIGHT_ASSIGN, CONST, FLOAT, STAR, SHIFT_LEFT_ASSIGN, MUL_ASSIGN, MINUS, OR_ASSIGN, VOID, SHIFT_LEFT, CHAR16T, MINUS_MINUS, VOLATILE, BOOL, SIZEOF, OPERATOR, CHAR, INT, LEQ, STATIC_CAST, PLUS_PLUS, PLUS_ASSIGN, PLUS, LONG, SIGNED, CONST_CAST, REM_ASSIGN, XOR_ASSIGN, TYPEID, AND_ASSIGN, CHAR8T, REM, CHAR32T, DYNAMIC_CAST, REINTERPRET_CAST, THIS, COLON_COLON, EQ, GEQ, ASSIGN, ARROW_STAR, UNSIGNED, WCHART, DOUBLE, SHORT, NEQ, SHIFT_RIGHT, DIV, DOT_STAR, DIV_ASSIGN, MINUS_ASSIGN, CARET, FALSE, DOT, EXCLAMATION, DELETE, LPAREN, ARROW, LANGLE, LBRACKET, INTEGER_LITERAL, RANGLE, PIPE, AMP, STRING_LITERAL, QUEST, NEW, TRUE, FLOATING_LITERAL, COMMA, CHAR_LITERAL, NULLPTR, ID, TILDE}" ruleName="Expression"/>
      <expectation first="{SEMICOLON}">
       <token first="{SEMICOLON}" name="SEMICOLON"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
 </grammar>
</parserFile>
