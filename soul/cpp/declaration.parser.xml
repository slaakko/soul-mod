<parserFile>
 <grammar name="DeclarationParser">
  <rule first="{#, ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, USING, STATIC, COLON_COLON, EXTERN, STAR, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, NAMESPACE, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, OPERATOR, CHAR, SHORT, CHAR32T, SEMICOLON, AMP, #, #, #}" name="BlockDeclaration">
   <choice first="{#, ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, USING, STATIC, COLON_COLON, EXTERN, STAR, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, NAMESPACE, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, OPERATOR, CHAR, SHORT, CHAR32T, SEMICOLON, AMP, #, #, #}">
    <choice first="{USING, NAMESPACE}">
     <choice first="{USING, NAMESPACE}">
      <action first="{NAMESPACE}">
       <nonterminal first="{NAMESPACE}" ruleName="NamespaceAliasDefinition"/>
      </action>
      <action first="{USING}">
       <nonterminal first="{USING}" ruleName="UsingDirective"/>
      </action>
     </choice>
     <action first="{USING}">
      <nonterminal first="{USING}" ruleName="UsingDeclaration"/>
     </action>
    </choice>
    <action first="{#, ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, COLON_COLON, EXTERN, STAR, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, OPERATOR, CHAR, SHORT, CHAR32T, SEMICOLON, AMP, #, #, #}">
     <nonterminal first="{#, ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, COLON_COLON, EXTERN, STAR, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, OPERATOR, CHAR, SHORT, CHAR32T, SEMICOLON, AMP, #, #, #}" ruleName="SimpleDeclaration"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, COLON_COLON, EXTERN, STAR, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, OPERATOR, CHAR, SHORT, CHAR32T, SEMICOLON, AMP, #, #, #}" name="SimpleDeclaration">
   <sequence first="{#, ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, COLON_COLON, EXTERN, STAR, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, OPERATOR, CHAR, SHORT, CHAR32T, SEMICOLON, AMP, #, #, #}">
    <sequence first="{#, ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, COLON_COLON, EXTERN, STAR, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, OPERATOR, CHAR, SHORT, CHAR32T, AMP, #, #, #}">
     <sequence first="{#, ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, COLON_COLON, EXTERN, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #}">
      <action first="{#}">
       <empty first="{#}"/>
      </action>
      <optional first="{#, ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, COLON_COLON, EXTERN, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #}">
       <group first="{ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, COLON_COLON, EXTERN, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #}">
        <nonterminal first="{ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, COLON_COLON, EXTERN, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #}" ruleName="DeclSpecifierSeq"/>
       </group>
      </optional>
     </sequence>
     <optional first="{#, ID, COLON_COLON, STAR, OPERATOR, AMP, #, #, #}">
      <group first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #, #}">
       <action first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #, #}">
        <nonterminal first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #, #}" ruleName="InitDeclaratorList"/>
       </action>
      </group>
     </optional>
    </sequence>
    <action first="{SEMICOLON}">
     <token first="{SEMICOLON}" name="SEMICOLON"/>
    </action>
   </sequence>
  </rule>
  <rule first="{ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, COLON_COLON, EXTERN, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #}" name="DeclSpecifierSeq">
   <group first="{ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, COLON_COLON, EXTERN, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #}">
    <choice first="{ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, COLON_COLON, EXTERN, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #}">
     <positive first="{UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, EXTERN, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T}">
      <group first="{UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, EXTERN, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T}">
       <action first="{UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, EXTERN, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T}">
        <nonterminal first="{UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, EXTERN, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T}" ruleName="DeclSpecifier"/>
       </action>
      </group>
     </positive>
     <action first="{ID, COLON_COLON, #}">
      <nonterminal first="{ID, COLON_COLON, #}" ruleName="TypeName"/>
     </action>
    </choice>
   </group>
  </rule>
  <rule first="{UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, EXTERN, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T}" name="DeclSpecifier">
   <choice first="{UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, EXTERN, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T}">
    <choice first="{UNSIGNED, REGISTER, VOLATILE, STATIC, EXTERN, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T}">
     <action first="{REGISTER, STATIC, EXTERN, AUTO, MUTABLE}">
      <nonterminal first="{REGISTER, STATIC, EXTERN, AUTO, MUTABLE}" ruleName="StorageClassSpecifier"/>
     </action>
     <action first="{UNSIGNED, VOLATILE, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T}">
      <nonterminal first="{UNSIGNED, VOLATILE, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T}" ruleName="TypeSpecifier"/>
     </action>
    </choice>
    <action first="{TYPEDEF}">
     <nonterminal first="{TYPEDEF}" ruleName="Typedef"/>
    </action>
   </choice>
  </rule>
  <rule first="{REGISTER, STATIC, EXTERN, AUTO, MUTABLE}" name="StorageClassSpecifier">
   <choice first="{REGISTER, STATIC, EXTERN, AUTO, MUTABLE}">
    <choice first="{REGISTER, STATIC, EXTERN, AUTO}">
     <choice first="{REGISTER, STATIC, AUTO}">
      <choice first="{REGISTER, AUTO}">
       <action first="{AUTO}">
        <token first="{AUTO}" name="AUTO"/>
       </action>
       <action first="{REGISTER}">
        <token first="{REGISTER}" name="REGISTER"/>
       </action>
      </choice>
      <action first="{STATIC}">
       <token first="{STATIC}" name="STATIC"/>
      </action>
     </choice>
     <action first="{EXTERN}">
      <token first="{EXTERN}" name="EXTERN"/>
     </action>
    </choice>
    <action first="{MUTABLE}">
     <token first="{MUTABLE}" name="MUTABLE"/>
    </action>
   </choice>
  </rule>
  <rule first="{UNSIGNED, VOLATILE, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T}" name="TypeSpecifier">
   <choice first="{UNSIGNED, VOLATILE, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T}">
    <action first="{UNSIGNED, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T}">
     <nonterminal first="{UNSIGNED, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T}" ruleName="SimpleTypeSpecifier"/>
    </action>
    <action first="{VOLATILE, CONST}">
     <nonterminal first="{VOLATILE, CONST}" ruleName="CVQualifier"/>
    </action>
   </choice>
  </rule>
  <rule first="{UNSIGNED, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T}" name="SimpleTypeSpecifier">
   <choice first="{UNSIGNED, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T}">
    <choice first="{UNSIGNED, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CHAR8T, CHAR16T, CHAR, SHORT, CHAR32T}">
     <choice first="{UNSIGNED, BOOL, INT, SIGNED, LONG, FLOAT, WCHART, CHAR8T, CHAR16T, CHAR, SHORT, CHAR32T}">
      <choice first="{UNSIGNED, BOOL, INT, SIGNED, LONG, WCHART, CHAR8T, CHAR16T, CHAR, SHORT, CHAR32T}">
       <choice first="{BOOL, INT, SIGNED, LONG, WCHART, CHAR8T, CHAR16T, CHAR, SHORT, CHAR32T}">
        <choice first="{BOOL, INT, LONG, WCHART, CHAR8T, CHAR16T, CHAR, SHORT, CHAR32T}">
         <choice first="{BOOL, INT, WCHART, CHAR8T, CHAR16T, CHAR, SHORT, CHAR32T}">
          <choice first="{BOOL, WCHART, CHAR8T, CHAR16T, CHAR, SHORT, CHAR32T}">
           <choice first="{BOOL, WCHART, CHAR8T, CHAR16T, CHAR, CHAR32T}">
            <choice first="{WCHART, CHAR8T, CHAR16T, CHAR, CHAR32T}">
             <choice first="{CHAR8T, CHAR16T, CHAR, CHAR32T}">
              <choice first="{CHAR8T, CHAR16T, CHAR}">
               <choice first="{CHAR8T, CHAR}">
                <action first="{CHAR}">
                 <token first="{CHAR}" name="CHAR"/>
                </action>
                <action first="{CHAR8T}">
                 <token first="{CHAR8T}" name="CHAR8T"/>
                </action>
               </choice>
               <action first="{CHAR16T}">
                <token first="{CHAR16T}" name="CHAR16T"/>
               </action>
              </choice>
              <action first="{CHAR32T}">
               <token first="{CHAR32T}" name="CHAR32T"/>
              </action>
             </choice>
             <action first="{WCHART}">
              <token first="{WCHART}" name="WCHART"/>
             </action>
            </choice>
            <action first="{BOOL}">
             <token first="{BOOL}" name="BOOL"/>
            </action>
           </choice>
           <action first="{SHORT}">
            <token first="{SHORT}" name="SHORT"/>
           </action>
          </choice>
          <action first="{INT}">
           <token first="{INT}" name="INT"/>
          </action>
         </choice>
         <action first="{LONG}">
          <token first="{LONG}" name="LONG"/>
         </action>
        </choice>
        <action first="{SIGNED}">
         <token first="{SIGNED}" name="SIGNED"/>
        </action>
       </choice>
       <action first="{UNSIGNED}">
        <token first="{UNSIGNED}" name="UNSIGNED"/>
       </action>
      </choice>
      <action first="{FLOAT}">
       <token first="{FLOAT}" name="FLOAT"/>
      </action>
     </choice>
     <action first="{DOUBLE}">
      <token first="{DOUBLE}" name="DOUBLE"/>
     </action>
    </choice>
    <action first="{VOID}">
     <token first="{VOID}" name="VOID"/>
    </action>
   </choice>
  </rule>
  <rule first="{ID, COLON_COLON, #}" name="TypeName">
   <action first="{ID, COLON_COLON, #}">
    <group first="{ID, COLON_COLON, #}">
     <sequence first="{ID, COLON_COLON, #}">
      <action first="{ID, COLON_COLON, #}">
       <nonterminal first="{ID, COLON_COLON, #}" ruleName="QualifiedCppId"/>
      </action>
      <optional first="{#, LANGLE}">
       <group first="{LANGLE}">
        <sequence first="{LANGLE}">
         <sequence first="{LANGLE}">
          <action first="{LANGLE}">
           <token first="{LANGLE}" name="LANGLE"/>
          </action>
          <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #, #}" ruleName="TemplateArgumentList"/>
         </sequence>
         <action first="{RANGLE}">
          <token first="{RANGLE}" name="RANGLE"/>
         </action>
        </sequence>
       </group>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #, #}" name="TemplateArgumentList">
   <list first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
    <sequence first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
     <action first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
      <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #, #}" ruleName="TemplateArgument"/>
     </action>
     <kleene first="{#, COMMA}">
      <sequence first="{COMMA}">
       <token first="{COMMA}" name="COMMA"/>
       <action first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
        <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #, #}" ruleName="TemplateArgument"/>
       </action>
      </sequence>
     </kleene>
    </sequence>
   </list>
  </rule>
  <rule first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #, #}" name="TemplateArgument">
   <choice first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
    <action first="{ID, UNSIGNED, VOLATILE, COLON_COLON, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #, #}">
     <nonterminal first="{ID, UNSIGNED, VOLATILE, COLON_COLON, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #, #}" ruleName="TypeId"/>
    </action>
    <action first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #}">
     <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #}" ruleName="AssignmentExpression"/>
    </action>
   </choice>
  </rule>
  <rule first="{TYPEDEF}" name="Typedef">
   <action first="{TYPEDEF}">
    <token first="{TYPEDEF}" name="TYPEDEF"/>
   </action>
  </rule>
  <rule first="{VOLATILE, CONST}" name="CVQualifier">
   <choice first="{VOLATILE, CONST}">
    <action first="{CONST}">
     <token first="{CONST}" name="CONST"/>
    </action>
    <action first="{VOLATILE}">
     <token first="{VOLATILE}" name="VOLATILE"/>
    </action>
   </choice>
  </rule>
  <rule first="{NAMESPACE}" name="NamespaceAliasDefinition">
   <action first="{NAMESPACE}">
    <group first="{NAMESPACE}">
     <sequence first="{NAMESPACE}">
      <sequence first="{NAMESPACE}">
       <sequence first="{NAMESPACE}">
        <sequence first="{NAMESPACE}">
         <token first="{NAMESPACE}" name="NAMESPACE"/>
         <nonterminal first="{ID}" ruleName="CppIdentifier"/>
        </sequence>
        <token first="{ASSIGN}" name="ASSIGN"/>
       </sequence>
       <nonterminal first="{ID, COLON_COLON, #}" ruleName="QualifiedCppId"/>
      </sequence>
      <token first="{SEMICOLON}" name="SEMICOLON"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{USING}" name="UsingDeclaration">
   <sequence first="{USING}">
    <sequence first="{USING}">
     <token first="{USING}" name="USING"/>
     <nonterminal first="{ID, COLON_COLON, #}" ruleName="QualifiedCppId"/>
    </sequence>
    <action first="{SEMICOLON}">
     <token first="{SEMICOLON}" name="SEMICOLON"/>
    </action>
   </sequence>
  </rule>
  <rule first="{USING}" name="UsingDirective">
   <sequence first="{USING}">
    <sequence first="{USING}">
     <sequence first="{USING}">
      <token first="{USING}" name="USING"/>
      <token first="{NAMESPACE}" name="NAMESPACE"/>
     </sequence>
     <nonterminal first="{ID, COLON_COLON, #}" ruleName="QualifiedCppId"/>
    </sequence>
    <action first="{SEMICOLON}">
     <token first="{SEMICOLON}" name="SEMICOLON"/>
    </action>
   </sequence>
  </rule>
 </grammar>
</parserFile>
