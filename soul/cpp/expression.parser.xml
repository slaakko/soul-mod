<parserFile>
 <grammar name="ExpressionParser">
  <rule first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, COMMA, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}" name="Expression">
   <action first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, COMMA, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}">
    <group first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, COMMA, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}">
     <sequence first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, COMMA, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}">
      <action first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}">
       <nonterminal first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}" ruleName="AssignmentExpression"/>
      </action>
      <kleene first="{#, COMMA}">
       <group first="{COMMA}">
        <sequence first="{COMMA}">
         <token first="{COMMA}" name="COMMA"/>
         <action first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}">
          <nonterminal first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}" ruleName="AssignmentExpression"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, COMMA, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}" name="ConstantExpression">
   <action first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, COMMA, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}">
    <nonterminal first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, COMMA, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}" ruleName="Expression"/>
   </action>
  </rule>
  <rule first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}" name="AssignmentExpression">
   <choice first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}">
    <sequence first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}">
     <sequence first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}">
      <nonterminal first="{#, AMP, AMP_AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="LogicalOrExpression"/>
      <nonterminal first="{AND_ASSIGN, ASSIGN, DIV_ASSIGN, MINUS_ASSIGN, MUL_ASSIGN, OR_ASSIGN, PLUS_ASSIGN, REM_ASSIGN, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN, XOR_ASSIGN}" ruleName="AssignmentOp"/>
     </sequence>
     <action first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}">
      <expectation first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}">
       <nonterminal first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}" ruleName="AssignmentExpression"/>
      </expectation>
     </action>
    </sequence>
    <action first="{#, AMP, AMP_AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
     <nonterminal first="{#, AMP, AMP_AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="ConditionalExpression"/>
    </action>
   </choice>
  </rule>
  <rule first="{AND_ASSIGN, ASSIGN, DIV_ASSIGN, MINUS_ASSIGN, MUL_ASSIGN, OR_ASSIGN, PLUS_ASSIGN, REM_ASSIGN, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN, XOR_ASSIGN}" name="AssignmentOp">
   <choice first="{AND_ASSIGN, ASSIGN, DIV_ASSIGN, MINUS_ASSIGN, MUL_ASSIGN, OR_ASSIGN, PLUS_ASSIGN, REM_ASSIGN, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN, XOR_ASSIGN}">
    <choice first="{AND_ASSIGN, ASSIGN, DIV_ASSIGN, MINUS_ASSIGN, MUL_ASSIGN, PLUS_ASSIGN, REM_ASSIGN, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN, XOR_ASSIGN}">
     <choice first="{AND_ASSIGN, ASSIGN, DIV_ASSIGN, MINUS_ASSIGN, MUL_ASSIGN, PLUS_ASSIGN, REM_ASSIGN, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN}">
      <choice first="{ASSIGN, DIV_ASSIGN, MINUS_ASSIGN, MUL_ASSIGN, PLUS_ASSIGN, REM_ASSIGN, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN}">
       <choice first="{ASSIGN, DIV_ASSIGN, MINUS_ASSIGN, MUL_ASSIGN, PLUS_ASSIGN, REM_ASSIGN, SHIFT_LEFT_ASSIGN}">
        <choice first="{ASSIGN, DIV_ASSIGN, MINUS_ASSIGN, MUL_ASSIGN, PLUS_ASSIGN, REM_ASSIGN}">
         <choice first="{ASSIGN, DIV_ASSIGN, MUL_ASSIGN, PLUS_ASSIGN, REM_ASSIGN}">
          <choice first="{ASSIGN, DIV_ASSIGN, MUL_ASSIGN, REM_ASSIGN}">
           <choice first="{ASSIGN, DIV_ASSIGN, MUL_ASSIGN}">
            <choice first="{ASSIGN, MUL_ASSIGN}">
             <action first="{ASSIGN}">
              <token first="{ASSIGN}" name="ASSIGN"/>
             </action>
             <action first="{MUL_ASSIGN}">
              <token first="{MUL_ASSIGN}" name="MUL_ASSIGN"/>
             </action>
            </choice>
            <action first="{DIV_ASSIGN}">
             <token first="{DIV_ASSIGN}" name="DIV_ASSIGN"/>
            </action>
           </choice>
           <action first="{REM_ASSIGN}">
            <token first="{REM_ASSIGN}" name="REM_ASSIGN"/>
           </action>
          </choice>
          <action first="{PLUS_ASSIGN}">
           <token first="{PLUS_ASSIGN}" name="PLUS_ASSIGN"/>
          </action>
         </choice>
         <action first="{MINUS_ASSIGN}">
          <token first="{MINUS_ASSIGN}" name="MINUS_ASSIGN"/>
         </action>
        </choice>
        <action first="{SHIFT_LEFT_ASSIGN}">
         <token first="{SHIFT_LEFT_ASSIGN}" name="SHIFT_LEFT_ASSIGN"/>
        </action>
       </choice>
       <action first="{SHIFT_RIGHT_ASSIGN}">
        <token first="{SHIFT_RIGHT_ASSIGN}" name="SHIFT_RIGHT_ASSIGN"/>
       </action>
      </choice>
      <action first="{AND_ASSIGN}">
       <token first="{AND_ASSIGN}" name="AND_ASSIGN"/>
      </action>
     </choice>
     <action first="{XOR_ASSIGN}">
      <token first="{XOR_ASSIGN}" name="XOR_ASSIGN"/>
     </action>
    </choice>
    <action first="{OR_ASSIGN}">
     <token first="{OR_ASSIGN}" name="OR_ASSIGN"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, AMP, AMP_AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" name="ConditionalExpression">
   <action first="{#, AMP, AMP_AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
    <group first="{#, AMP, AMP_AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
     <sequence first="{#, AMP, AMP_AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
      <action first="{#, AMP, AMP_AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
       <nonterminal first="{#, AMP, AMP_AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="LogicalOrExpression"/>
      </action>
      <optional first="{#, QUEST}">
       <group first="{QUEST}">
        <sequence first="{QUEST}">
         <sequence first="{QUEST}">
          <sequence first="{QUEST}">
           <token first="{QUEST}" name="QUEST"/>
           <expectation first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, COMMA, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}">
            <nonterminal first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, COMMA, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}" ruleName="Expression"/>
           </expectation>
          </sequence>
          <token first="{COLON}" name="COLON"/>
         </sequence>
         <action first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}">
          <expectation first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}">
           <nonterminal first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}" ruleName="AssignmentExpression"/>
          </expectation>
         </action>
        </sequence>
       </group>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, AMP_AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" name="LogicalOrExpression">
   <action first="{#, AMP, AMP_AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
    <group first="{#, AMP, AMP_AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
     <sequence first="{#, AMP, AMP_AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
      <action first="{#, AMP, AMP_AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
       <nonterminal first="{#, AMP, AMP_AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="LogicalAndExpression"/>
      </action>
      <kleene first="{#, DISJUNCTION}">
       <group first="{DISJUNCTION}">
        <sequence first="{DISJUNCTION}">
         <token first="{DISJUNCTION}" name="DISJUNCTION"/>
         <action first="{#, AMP, AMP_AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
          <expectation first="{#, AMP, AMP_AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
           <nonterminal first="{#, AMP, AMP_AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="LogicalAndExpression"/>
          </expectation>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, AMP_AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" name="LogicalAndExpression">
   <action first="{#, AMP, AMP_AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
    <group first="{#, AMP, AMP_AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
     <sequence first="{#, AMP, AMP_AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
      <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
       <nonterminal first="{#, AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="InclusiveOrExpression"/>
      </action>
      <kleene first="{#, AMP_AMP}">
       <group first="{AMP_AMP}">
        <sequence first="{AMP_AMP}">
         <token first="{AMP_AMP}" name="AMP_AMP"/>
         <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
          <expectation first="{#, AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
           <nonterminal first="{#, AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="InclusiveOrExpression"/>
          </expectation>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" name="InclusiveOrExpression">
   <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
    <group first="{#, AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
     <sequence first="{#, AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PIPE, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
      <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
       <nonterminal first="{#, AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="ExclusiveOrExpression"/>
      </action>
      <kleene first="{#, PIPE}">
       <group first="{PIPE}">
        <sequence first="{PIPE}">
         <token first="{PIPE}" name="PIPE"/>
         <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
          <nonterminal first="{#, AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="ExclusiveOrExpression"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" name="ExclusiveOrExpression">
   <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
    <group first="{#, AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
     <sequence first="{#, AMP, ARROW, ARROW_STAR, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
      <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
       <nonterminal first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="AndExpression"/>
      </action>
      <kleene first="{#, CARET}">
       <group first="{CARET}">
        <sequence first="{CARET}">
         <token first="{CARET}" name="CARET"/>
         <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
          <expectation first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
           <nonterminal first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="AndExpression"/>
          </expectation>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" name="AndExpression">
   <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
    <group first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
     <sequence first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
      <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
       <nonterminal first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="EqualityExpression"/>
      </action>
      <kleene first="{#, AMP}">
       <group first="{AMP}">
        <sequence first="{AMP}">
         <token first="{AMP}" name="AMP"/>
         <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
          <expectation first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
           <nonterminal first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="EqualityExpression"/>
          </expectation>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" name="EqualityExpression">
   <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
    <group first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
     <sequence first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEQ, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
      <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
       <nonterminal first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="RelationalExpression"/>
      </action>
      <kleene first="{#, EQ, NEQ}">
       <group first="{EQ, NEQ}">
        <sequence first="{EQ, NEQ}">
         <nonterminal first="{EQ, NEQ}" ruleName="EqOp"/>
         <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
          <expectation first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
           <nonterminal first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="RelationalExpression"/>
          </expectation>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{EQ, NEQ}" name="EqOp">
   <choice first="{EQ, NEQ}">
    <action first="{EQ}">
     <token first="{EQ}" name="EQ"/>
    </action>
    <action first="{NEQ}">
     <token first="{NEQ}" name="NEQ"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" name="RelationalExpression">
   <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
    <group first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
     <sequence first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, RANGLE, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
      <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
       <nonterminal first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="ShiftExpression"/>
      </action>
      <kleene first="{#, GEQ, LANGLE, LEQ, RANGLE}">
       <group first="{GEQ, LANGLE, LEQ, RANGLE}">
        <sequence first="{GEQ, LANGLE, LEQ, RANGLE}">
         <nonterminal first="{GEQ, LANGLE, LEQ, RANGLE}" ruleName="RelOp"/>
         <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
          <expectation first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
           <nonterminal first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="ShiftExpression"/>
          </expectation>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{GEQ, LANGLE, LEQ, RANGLE}" name="RelOp">
   <choice first="{GEQ, LANGLE, LEQ, RANGLE}">
    <choice first="{LANGLE, LEQ, RANGLE}">
     <choice first="{LANGLE, RANGLE}">
      <action first="{LANGLE}">
       <token first="{LANGLE}" name="LANGLE"/>
      </action>
      <action first="{RANGLE}">
       <token first="{RANGLE}" name="RANGLE"/>
      </action>
     </choice>
     <action first="{LEQ}">
      <token first="{LEQ}" name="LEQ"/>
     </action>
    </choice>
    <action first="{GEQ}">
     <token first="{GEQ}" name="GEQ"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" name="ShiftExpression">
   <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
    <group first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
     <sequence first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHIFT_LEFT, SHIFT_RIGHT, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
      <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
       <nonterminal first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="AdditiveExpression"/>
      </action>
      <kleene first="{#, SHIFT_LEFT, SHIFT_RIGHT}">
       <group first="{SHIFT_LEFT, SHIFT_RIGHT}">
        <sequence first="{SHIFT_LEFT, SHIFT_RIGHT}">
         <nonterminal first="{SHIFT_LEFT, SHIFT_RIGHT}" ruleName="ShiftOp"/>
         <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
          <expectation first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
           <nonterminal first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="AdditiveExpression"/>
          </expectation>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{SHIFT_LEFT, SHIFT_RIGHT}" name="ShiftOp">
   <choice first="{SHIFT_LEFT, SHIFT_RIGHT}">
    <action first="{SHIFT_LEFT}">
     <token first="{SHIFT_LEFT}" name="SHIFT_LEFT"/>
    </action>
    <action first="{SHIFT_RIGHT}">
     <token first="{SHIFT_RIGHT}" name="SHIFT_RIGHT"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" name="AdditiveExpression">
   <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
    <group first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
     <sequence first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
      <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
       <nonterminal first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="MultiplicativeExpression"/>
      </action>
      <kleene first="{#, MINUS, PLUS}">
       <group first="{MINUS, PLUS}">
        <sequence first="{MINUS, PLUS}">
         <nonterminal first="{MINUS, PLUS}" ruleName="AddOp"/>
         <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
          <expectation first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
           <nonterminal first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="MultiplicativeExpression"/>
          </expectation>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{MINUS, PLUS}" name="AddOp">
   <choice first="{MINUS, PLUS}">
    <action first="{PLUS}">
     <token first="{PLUS}" name="PLUS"/>
    </action>
    <action first="{MINUS}">
     <token first="{MINUS}" name="MINUS"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" name="MultiplicativeExpression">
   <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
    <group first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
     <sequence first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DIV, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, REM, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
      <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
       <nonterminal first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="PmExpression"/>
      </action>
      <kleene first="{#, DIV, REM, STAR}">
       <group first="{DIV, REM, STAR}">
        <sequence first="{DIV, REM, STAR}">
         <nonterminal first="{DIV, REM, STAR}" ruleName="MulOp"/>
         <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
          <expectation first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
           <nonterminal first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="PmExpression"/>
          </expectation>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{DIV, REM, STAR}" name="MulOp">
   <choice first="{DIV, REM, STAR}">
    <choice first="{DIV, STAR}">
     <action first="{STAR}">
      <token first="{STAR}" name="STAR"/>
     </action>
     <action first="{DIV}">
      <token first="{DIV}" name="DIV"/>
     </action>
    </choice>
    <action first="{REM}">
     <token first="{REM}" name="REM"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" name="PmExpression">
   <action first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
    <group first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
     <sequence first="{#, AMP, ARROW, ARROW_STAR, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
      <action first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
       <nonterminal first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="CastExpression"/>
      </action>
      <kleene first="{#, ARROW_STAR, DOT_STAR}">
       <group first="{ARROW_STAR, DOT_STAR}">
        <sequence first="{ARROW_STAR, DOT_STAR}">
         <nonterminal first="{ARROW_STAR, DOT_STAR}" ruleName="PmOp"/>
         <action first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
          <nonterminal first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="CastExpression"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{ARROW_STAR, DOT_STAR}" name="PmOp">
   <choice first="{ARROW_STAR, DOT_STAR}">
    <action first="{DOT_STAR}">
     <token first="{DOT_STAR}" name="DOT_STAR"/>
    </action>
    <action first="{ARROW_STAR}">
     <token first="{ARROW_STAR}" name="ARROW_STAR"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" name="CastExpression">
   <action first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
    <group first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
     <choice first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
      <sequence first="{LPAREN}">
       <sequence first="{LPAREN}">
        <sequence first="{LPAREN}">
         <token first="{LPAREN}" name="LPAREN"/>
         <nonterminal first="{#, AMP, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, CONST, DOUBLE, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, SHORT, SIGNED, STAR, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="TypeId"/>
        </sequence>
        <token first="{RPAREN}" name="RPAREN"/>
       </sequence>
       <action first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
        <nonterminal first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="CastExpression"/>
       </action>
      </sequence>
      <action first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
       <nonterminal first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="UnaryExpression"/>
      </action>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" name="UnaryExpression">
   <action first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
    <group first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
     <choice first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
      <choice first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
       <choice first="{#, AMP, ARROW, CHAR_LITERAL, COLON_COLON, CONST_CAST, DOT, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOATING_LITERAL, ID, INTEGER_LITERAL, LBRACKET, LPAREN, MINUS, MINUS_MINUS, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID}">
        <choice first="{#, AMP, ARROW, CHAR_LITERAL, COLON_COLON, CONST_CAST, DOT, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOATING_LITERAL, ID, INTEGER_LITERAL, LBRACKET, LPAREN, MINUS, MINUS_MINUS, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID}">
         <choice first="{#, AMP, ARROW, CHAR_LITERAL, COLON_COLON, CONST_CAST, DOT, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOATING_LITERAL, ID, INTEGER_LITERAL, LBRACKET, LPAREN, MINUS, MINUS_MINUS, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID}">
          <choice first="{#, ARROW, CHAR_LITERAL, COLON_COLON, CONST_CAST, DOT, DYNAMIC_CAST, FALSE, FLOATING_LITERAL, ID, INTEGER_LITERAL, LBRACKET, LPAREN, MINUS_MINUS, NULLPTR, OPERATOR, PLUS_PLUS, REINTERPRET_CAST, STATIC_CAST, STRING_LITERAL, THIS, TRUE, TYPEID}">
           <choice first="{#, ARROW, CHAR_LITERAL, COLON_COLON, CONST_CAST, DOT, DYNAMIC_CAST, FALSE, FLOATING_LITERAL, ID, INTEGER_LITERAL, LBRACKET, LPAREN, MINUS_MINUS, NULLPTR, OPERATOR, PLUS_PLUS, REINTERPRET_CAST, STATIC_CAST, STRING_LITERAL, THIS, TRUE, TYPEID}">
            <choice first="{#, ARROW, CHAR_LITERAL, COLON_COLON, CONST_CAST, DOT, DYNAMIC_CAST, FALSE, FLOATING_LITERAL, ID, INTEGER_LITERAL, LBRACKET, LPAREN, MINUS_MINUS, NULLPTR, OPERATOR, PLUS_PLUS, REINTERPRET_CAST, STATIC_CAST, STRING_LITERAL, THIS, TRUE, TYPEID}">
             <action first="{#, ARROW, CHAR_LITERAL, COLON_COLON, DOT, FALSE, FLOATING_LITERAL, ID, INTEGER_LITERAL, LBRACKET, LPAREN, MINUS_MINUS, NULLPTR, OPERATOR, PLUS_PLUS, STRING_LITERAL, THIS, TRUE}">
              <nonterminal first="{#, ARROW, CHAR_LITERAL, COLON_COLON, DOT, FALSE, FLOATING_LITERAL, ID, INTEGER_LITERAL, LBRACKET, LPAREN, MINUS_MINUS, NULLPTR, OPERATOR, PLUS_PLUS, STRING_LITERAL, THIS, TRUE}" ruleName="PostfixExpression"/>
             </action>
             <action first="{CONST_CAST, DYNAMIC_CAST, REINTERPRET_CAST, STATIC_CAST, TYPEID}">
              <nonterminal first="{CONST_CAST, DYNAMIC_CAST, REINTERPRET_CAST, STATIC_CAST, TYPEID}" ruleName="PostCastExpression"/>
             </action>
            </choice>
            <sequence first="{PLUS_PLUS}">
             <token first="{PLUS_PLUS}" name="PLUS_PLUS"/>
             <action first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
              <expectation first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
               <nonterminal first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="UnaryExpression"/>
              </expectation>
             </action>
            </sequence>
           </choice>
           <sequence first="{MINUS_MINUS}">
            <token first="{MINUS_MINUS}" name="MINUS_MINUS"/>
            <action first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
             <expectation first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
              <nonterminal first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="UnaryExpression"/>
             </expectation>
            </action>
           </sequence>
          </choice>
          <sequence first="{AMP, EXCLAMATION, MINUS, PLUS, STAR, TILDE}">
           <nonterminal first="{AMP, EXCLAMATION, MINUS, PLUS, STAR, TILDE}" ruleName="UnaryOperator"/>
           <action first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
            <expectation first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
             <nonterminal first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="CastExpression"/>
            </expectation>
           </action>
          </sequence>
         </choice>
         <sequence first="{SIZEOF}">
          <sequence first="{SIZEOF}">
           <sequence first="{SIZEOF}">
            <token first="{SIZEOF}" name="SIZEOF"/>
            <token first="{LPAREN}" name="LPAREN"/>
           </sequence>
           <expectation first="{#, AMP, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, CONST, DOUBLE, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, SHORT, SIGNED, STAR, UNSIGNED, VOID, VOLATILE, WCHART}">
            <nonterminal first="{#, AMP, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, CONST, DOUBLE, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, SHORT, SIGNED, STAR, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="TypeId"/>
           </expectation>
          </sequence>
          <action first="{RPAREN}">
           <token first="{RPAREN}" name="RPAREN"/>
          </action>
         </sequence>
        </choice>
        <sequence first="{SIZEOF}">
         <token first="{SIZEOF}" name="SIZEOF"/>
         <action first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
          <expectation first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
           <nonterminal first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="UnaryExpression"/>
          </expectation>
         </action>
        </sequence>
       </choice>
       <action first="{#, AMP, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, CONST, DOUBLE, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, NEW, SHORT, SIGNED, STAR, UNSIGNED, VOID, VOLATILE, WCHART}">
        <nonterminal first="{#, AMP, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, CONST, DOUBLE, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, NEW, SHORT, SIGNED, STAR, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="NewExpression"/>
       </action>
      </choice>
      <action first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
       <nonterminal first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="DeleteExpression"/>
      </action>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{AMP, EXCLAMATION, MINUS, PLUS, STAR, TILDE}" name="UnaryOperator">
   <choice first="{AMP, EXCLAMATION, MINUS, PLUS, STAR, TILDE}">
    <choice first="{AMP, EXCLAMATION, MINUS, PLUS, STAR}">
     <choice first="{AMP, MINUS, PLUS, STAR}">
      <choice first="{AMP, PLUS, STAR}">
       <choice first="{AMP, STAR}">
        <action first="{STAR}">
         <token first="{STAR}" name="STAR"/>
        </action>
        <action first="{AMP}">
         <token first="{AMP}" name="AMP"/>
        </action>
       </choice>
       <action first="{PLUS}">
        <token first="{PLUS}" name="PLUS"/>
       </action>
      </choice>
      <action first="{MINUS}">
       <token first="{MINUS}" name="MINUS"/>
      </action>
     </choice>
     <action first="{EXCLAMATION}">
      <token first="{EXCLAMATION}" name="EXCLAMATION"/>
     </action>
    </choice>
    <action first="{TILDE}">
     <token first="{TILDE}" name="TILDE"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, ARROW, CHAR_LITERAL, COLON_COLON, DOT, FALSE, FLOATING_LITERAL, ID, INTEGER_LITERAL, LBRACKET, LPAREN, MINUS_MINUS, NULLPTR, OPERATOR, PLUS_PLUS, STRING_LITERAL, THIS, TRUE}" name="PostfixExpression">
   <action first="{#, ARROW, CHAR_LITERAL, COLON_COLON, DOT, FALSE, FLOATING_LITERAL, ID, INTEGER_LITERAL, LBRACKET, LPAREN, MINUS_MINUS, NULLPTR, OPERATOR, PLUS_PLUS, STRING_LITERAL, THIS, TRUE}">
    <group first="{#, ARROW, CHAR_LITERAL, COLON_COLON, DOT, FALSE, FLOATING_LITERAL, ID, INTEGER_LITERAL, LBRACKET, LPAREN, MINUS_MINUS, NULLPTR, OPERATOR, PLUS_PLUS, STRING_LITERAL, THIS, TRUE}">
     <sequence first="{#, ARROW, CHAR_LITERAL, COLON_COLON, DOT, FALSE, FLOATING_LITERAL, ID, INTEGER_LITERAL, LBRACKET, LPAREN, MINUS_MINUS, NULLPTR, OPERATOR, PLUS_PLUS, STRING_LITERAL, THIS, TRUE}">
      <action first="{#, CHAR_LITERAL, COLON_COLON, FALSE, FLOATING_LITERAL, ID, INTEGER_LITERAL, LPAREN, NULLPTR, OPERATOR, STRING_LITERAL, THIS, TRUE}">
       <nonterminal first="{#, CHAR_LITERAL, COLON_COLON, FALSE, FLOATING_LITERAL, ID, INTEGER_LITERAL, LPAREN, NULLPTR, OPERATOR, STRING_LITERAL, THIS, TRUE}" ruleName="PrimaryExpression"/>
      </action>
      <kleene first="{#, ARROW, DOT, LBRACKET, LPAREN, MINUS_MINUS, PLUS_PLUS}">
       <group first="{ARROW, DOT, LBRACKET, LPAREN, MINUS_MINUS, PLUS_PLUS}">
        <choice first="{ARROW, DOT, LBRACKET, LPAREN, MINUS_MINUS, PLUS_PLUS}">
         <choice first="{ARROW, DOT, LBRACKET, LPAREN, PLUS_PLUS}">
          <choice first="{ARROW, DOT, LBRACKET, LPAREN}">
           <choice first="{DOT, LBRACKET, LPAREN}">
            <choice first="{LBRACKET, LPAREN}">
             <sequence first="{LBRACKET}">
              <sequence first="{LBRACKET}">
               <token first="{LBRACKET}" name="LBRACKET"/>
               <nonterminal first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, COMMA, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}" ruleName="Expression"/>
              </sequence>
              <action first="{RBRACKET}">
               <expectation first="{RBRACKET}">
                <token first="{RBRACKET}" name="RBRACKET"/>
               </expectation>
              </action>
             </sequence>
             <sequence first="{LPAREN}">
              <sequence first="{LPAREN}">
               <action first="{LPAREN}">
                <token first="{LPAREN}" name="LPAREN"/>
               </action>
               <optional first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, COMMA, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}">
                <nonterminal first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, COMMA, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}" ruleName="ExpressionList"/>
               </optional>
              </sequence>
              <expectation first="{RPAREN}">
               <token first="{RPAREN}" name="RPAREN"/>
              </expectation>
             </sequence>
            </choice>
            <sequence first="{DOT}">
             <token first="{DOT}" name="DOT"/>
             <action first="{#, COLON_COLON, ID, OPERATOR}">
              <expectation first="{#, COLON_COLON, ID, OPERATOR}">
               <nonterminal first="{#, COLON_COLON, ID, OPERATOR}" ruleName="IdExpression"/>
              </expectation>
             </action>
            </sequence>
           </choice>
           <sequence first="{ARROW}">
            <token first="{ARROW}" name="ARROW"/>
            <action first="{#, COLON_COLON, ID, OPERATOR}">
             <expectation first="{#, COLON_COLON, ID, OPERATOR}">
              <nonterminal first="{#, COLON_COLON, ID, OPERATOR}" ruleName="IdExpression"/>
             </expectation>
            </action>
           </sequence>
          </choice>
          <action first="{PLUS_PLUS}">
           <token first="{PLUS_PLUS}" name="PLUS_PLUS"/>
          </action>
         </choice>
         <action first="{MINUS_MINUS}">
          <token first="{MINUS_MINUS}" name="MINUS_MINUS"/>
         </action>
        </choice>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{CONST_CAST, DYNAMIC_CAST, REINTERPRET_CAST, STATIC_CAST, TYPEID}" name="PostCastExpression">
   <group first="{CONST_CAST, DYNAMIC_CAST, REINTERPRET_CAST, STATIC_CAST, TYPEID}">
    <choice first="{CONST_CAST, DYNAMIC_CAST, REINTERPRET_CAST, STATIC_CAST, TYPEID}">
     <sequence first="{CONST_CAST, DYNAMIC_CAST, REINTERPRET_CAST, STATIC_CAST}">
      <sequence first="{CONST_CAST, DYNAMIC_CAST, REINTERPRET_CAST, STATIC_CAST}">
       <sequence first="{CONST_CAST, DYNAMIC_CAST, REINTERPRET_CAST, STATIC_CAST}">
        <sequence first="{CONST_CAST, DYNAMIC_CAST, REINTERPRET_CAST, STATIC_CAST}">
         <sequence first="{CONST_CAST, DYNAMIC_CAST, REINTERPRET_CAST, STATIC_CAST}">
          <sequence first="{CONST_CAST, DYNAMIC_CAST, REINTERPRET_CAST, STATIC_CAST}">
           <group first="{CONST_CAST, DYNAMIC_CAST, REINTERPRET_CAST, STATIC_CAST}">
            <choice first="{CONST_CAST, DYNAMIC_CAST, REINTERPRET_CAST, STATIC_CAST}">
             <choice first="{DYNAMIC_CAST, REINTERPRET_CAST, STATIC_CAST}">
              <choice first="{DYNAMIC_CAST, STATIC_CAST}">
               <action first="{STATIC_CAST}">
                <token first="{STATIC_CAST}" name="STATIC_CAST"/>
               </action>
               <action first="{DYNAMIC_CAST}">
                <token first="{DYNAMIC_CAST}" name="DYNAMIC_CAST"/>
               </action>
              </choice>
              <action first="{REINTERPRET_CAST}">
               <token first="{REINTERPRET_CAST}" name="REINTERPRET_CAST"/>
              </action>
             </choice>
             <action first="{CONST_CAST}">
              <token first="{CONST_CAST}" name="CONST_CAST"/>
             </action>
            </choice>
           </group>
           <expectation first="{LANGLE}">
            <token first="{LANGLE}" name="LANGLE"/>
           </expectation>
          </sequence>
          <expectation first="{#, AMP, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, CONST, DOUBLE, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, SHORT, SIGNED, STAR, UNSIGNED, VOID, VOLATILE, WCHART}">
           <nonterminal first="{#, AMP, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, CONST, DOUBLE, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, SHORT, SIGNED, STAR, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="TypeId"/>
          </expectation>
         </sequence>
         <expectation first="{RANGLE}">
          <token first="{RANGLE}" name="RANGLE"/>
         </expectation>
        </sequence>
        <expectation first="{LPAREN}">
         <token first="{LPAREN}" name="LPAREN"/>
        </expectation>
       </sequence>
       <expectation first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, COMMA, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}">
        <nonterminal first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, COMMA, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}" ruleName="Expression"/>
       </expectation>
      </sequence>
      <action first="{RPAREN}">
       <expectation first="{RPAREN}">
        <token first="{RPAREN}" name="RPAREN"/>
       </expectation>
      </action>
     </sequence>
     <sequence first="{TYPEID}">
      <sequence first="{TYPEID}">
       <sequence first="{TYPEID}">
        <token first="{TYPEID}" name="TYPEID"/>
        <expectation first="{LPAREN}">
         <token first="{LPAREN}" name="LPAREN"/>
        </expectation>
       </sequence>
       <expectation first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, COMMA, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}">
        <nonterminal first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, COMMA, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}" ruleName="Expression"/>
       </expectation>
      </sequence>
      <action first="{RPAREN}">
       <expectation first="{RPAREN}">
        <token first="{RPAREN}" name="RPAREN"/>
       </expectation>
      </action>
     </sequence>
    </choice>
   </group>
  </rule>
  <rule first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, COMMA, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}" name="ExpressionList">
   <list first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, COMMA, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}">
    <sequence first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, COMMA, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}">
     <action first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}">
      <nonterminal first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}" ruleName="AssignmentExpression"/>
     </action>
     <kleene first="{#, COMMA}">
      <sequence first="{COMMA}">
       <token first="{COMMA}" name="COMMA"/>
       <action first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}">
        <nonterminal first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}" ruleName="AssignmentExpression"/>
       </action>
      </sequence>
     </kleene>
    </sequence>
   </list>
  </rule>
  <rule first="{#, CHAR_LITERAL, COLON_COLON, FALSE, FLOATING_LITERAL, ID, INTEGER_LITERAL, LPAREN, NULLPTR, OPERATOR, STRING_LITERAL, THIS, TRUE}" name="PrimaryExpression">
   <choice first="{#, CHAR_LITERAL, COLON_COLON, FALSE, FLOATING_LITERAL, ID, INTEGER_LITERAL, LPAREN, NULLPTR, OPERATOR, STRING_LITERAL, THIS, TRUE}">
    <choice first="{CHAR_LITERAL, FALSE, FLOATING_LITERAL, INTEGER_LITERAL, LPAREN, NULLPTR, STRING_LITERAL, THIS, TRUE}">
     <choice first="{CHAR_LITERAL, FALSE, FLOATING_LITERAL, INTEGER_LITERAL, NULLPTR, STRING_LITERAL, THIS, TRUE}">
      <action first="{CHAR_LITERAL, FALSE, FLOATING_LITERAL, INTEGER_LITERAL, NULLPTR, STRING_LITERAL, TRUE}">
       <nonterminal first="{CHAR_LITERAL, FALSE, FLOATING_LITERAL, INTEGER_LITERAL, NULLPTR, STRING_LITERAL, TRUE}" ruleName="Literal"/>
      </action>
      <action first="{THIS}">
       <token first="{THIS}" name="THIS"/>
      </action>
     </choice>
     <sequence first="{LPAREN}">
      <sequence first="{LPAREN}">
       <token first="{LPAREN}" name="LPAREN"/>
       <nonterminal first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, COMMA, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}" ruleName="Expression"/>
      </sequence>
      <action first="{RPAREN}">
       <token first="{RPAREN}" name="RPAREN"/>
      </action>
     </sequence>
    </choice>
    <action first="{#, COLON_COLON, ID, OPERATOR}">
     <nonterminal first="{#, COLON_COLON, ID, OPERATOR}" ruleName="IdExpression"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, COLON_COLON, ID, OPERATOR}" name="IdExpression">
   <group first="{#, COLON_COLON, ID, OPERATOR}">
    <choice first="{#, COLON_COLON, ID, OPERATOR}">
     <choice first="{#, COLON_COLON, ID, OPERATOR}">
      <sequence first="{#, COLON_COLON, ID, OPERATOR}">
       <sequence first="{#, COLON_COLON, ID}">
        <action first="{#, COLON_COLON, ID}">
         <nonterminal first="{#, COLON_COLON, ID}" ruleName="QualifiedCppId"/>
        </action>
        <token first="{COLON_COLON}" name="COLON_COLON"/>
       </sequence>
       <action first="{OPERATOR}">
        <nonterminal first="{OPERATOR}" ruleName="OperatorFunctionId"/>
       </action>
      </sequence>
      <sequence first="{#, COLON_COLON, OPERATOR}">
       <sequence first="{#, COLON_COLON}">
        <action first="{#}">
         <empty first="{#}"/>
        </action>
        <optional first="{#, COLON_COLON}">
         <group first="{COLON_COLON}">
          <action first="{COLON_COLON}">
           <token first="{COLON_COLON}" name="COLON_COLON"/>
          </action>
         </group>
        </optional>
       </sequence>
       <action first="{OPERATOR}">
        <nonterminal first="{OPERATOR}" ruleName="OperatorFunctionId"/>
       </action>
      </sequence>
     </choice>
     <action first="{#, COLON_COLON, ID}">
      <nonterminal first="{#, COLON_COLON, ID}" ruleName="QualifiedCppId"/>
     </action>
    </choice>
   </group>
  </rule>
  <rule first="{#, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, DOUBLE, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, UNSIGNED, VOID, WCHART}" name="TypeSpecifierOrTypeName">
   <choice first="{#, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, DOUBLE, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, UNSIGNED, VOID, WCHART}">
    <action first="{BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, DOUBLE, FLOAT, INT, LONG, SHORT, SIGNED, UNSIGNED, VOID, WCHART}">
     <nonterminal first="{BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, DOUBLE, FLOAT, INT, LONG, SHORT, SIGNED, UNSIGNED, VOID, WCHART}" ruleName="SimpleTypeSpecifier"/>
    </action>
    <action first="{#, COLON_COLON, ID, LANGLE}">
     <nonterminal first="{#, COLON_COLON, ID, LANGLE}" ruleName="TypeName"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, AMP, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, CONST, DOUBLE, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, NEW, SHORT, SIGNED, STAR, UNSIGNED, VOID, VOLATILE, WCHART}" name="NewExpression">
   <action first="{#, AMP, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, CONST, DOUBLE, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, NEW, SHORT, SIGNED, STAR, UNSIGNED, VOID, VOLATILE, WCHART}">
    <group first="{#, AMP, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, CONST, DOUBLE, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, NEW, SHORT, SIGNED, STAR, UNSIGNED, VOID, VOLATILE, WCHART}">
     <sequence first="{#, AMP, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, CONST, DOUBLE, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, NEW, SHORT, SIGNED, STAR, UNSIGNED, VOID, VOLATILE, WCHART}">
      <sequence first="{#, AMP, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, CONST, DOUBLE, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, NEW, SHORT, SIGNED, STAR, UNSIGNED, VOID, VOLATILE, WCHART}">
       <sequence first="{#, AMP, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, CONST, DOUBLE, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, NEW, SHORT, SIGNED, STAR, UNSIGNED, VOID, VOLATILE, WCHART}">
        <sequence first="{#, AMP, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, CONST, DOUBLE, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, NEW, SHORT, SIGNED, STAR, UNSIGNED, VOID, VOLATILE, WCHART}">
         <sequence first="{#, COLON_COLON, LPAREN, NEW}">
          <sequence first="{#, COLON_COLON, LPAREN, NEW}">
           <sequence first="{#, COLON_COLON, NEW}">
            <sequence first="{#, COLON_COLON, NEW}">
             <optional first="{#, COLON_COLON}">
              <group first="{COLON_COLON}">
               <action first="{COLON_COLON}">
                <token first="{COLON_COLON}" name="COLON_COLON"/>
               </action>
              </group>
             </optional>
             <action first="{NEW}">
              <token first="{NEW}" name="NEW"/>
             </action>
            </sequence>
            <action first="{#}">
             <empty first="{#}"/>
            </action>
           </sequence>
           <optional first="{#, LPAREN}">
            <nonterminal first="{LPAREN}" ruleName="NewPlacement"/>
           </optional>
          </sequence>
          <action first="{#}">
           <empty first="{#}"/>
          </action>
         </sequence>
         <group first="{#, AMP, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, CONST, DOUBLE, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, SHORT, SIGNED, STAR, UNSIGNED, VOID, VOLATILE, WCHART}">
          <choice first="{#, AMP, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, CONST, DOUBLE, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, SHORT, SIGNED, STAR, UNSIGNED, VOID, VOLATILE, WCHART}">
           <action first="{#, AMP, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, CONST, DOUBLE, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, SHORT, SIGNED, STAR, UNSIGNED, VOID, VOLATILE, WCHART}">
            <nonterminal first="{#, AMP, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, CONST, DOUBLE, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, SHORT, SIGNED, STAR, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="NewTypeId"/>
           </action>
           <sequence first="{LPAREN}">
            <sequence first="{LPAREN}">
             <token first="{LPAREN}" name="LPAREN"/>
             <nonterminal first="{#, AMP, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, CONST, DOUBLE, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, SHORT, SIGNED, STAR, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="TypeId"/>
            </sequence>
            <action first="{RPAREN}">
             <token first="{RPAREN}" name="RPAREN"/>
            </action>
           </sequence>
          </choice>
         </group>
        </sequence>
        <action first="{#}">
         <empty first="{#}"/>
        </action>
       </sequence>
       <optional first="{#, LPAREN}">
        <nonterminal first="{LPAREN}" ruleName="NewInitializer"/>
       </optional>
      </sequence>
      <action first="{#}">
       <empty first="{#}"/>
      </action>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{LPAREN}" name="NewPlacement">
   <sequence first="{LPAREN}">
    <sequence first="{LPAREN}">
     <token first="{LPAREN}" name="LPAREN"/>
     <nonterminal first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, COMMA, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}" ruleName="ExpressionList"/>
    </sequence>
    <token first="{RPAREN}" name="RPAREN"/>
   </sequence>
  </rule>
  <rule first="{#, AMP, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, CONST, DOUBLE, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, SHORT, SIGNED, STAR, UNSIGNED, VOID, VOLATILE, WCHART}" name="NewTypeId">
   <sequence first="{#, AMP, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, CONST, DOUBLE, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, SHORT, SIGNED, STAR, UNSIGNED, VOID, VOLATILE, WCHART}">
    <action first="{#}">
     <empty first="{#}"/>
    </action>
    <action first="{#, AMP, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, CONST, DOUBLE, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, SHORT, SIGNED, STAR, UNSIGNED, VOID, VOLATILE, WCHART}">
     <group first="{#, AMP, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, CONST, DOUBLE, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, SHORT, SIGNED, STAR, UNSIGNED, VOID, VOLATILE, WCHART}">
      <sequence first="{#, AMP, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, CONST, DOUBLE, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, SHORT, SIGNED, STAR, UNSIGNED, VOID, VOLATILE, WCHART}">
       <group first="{#, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, CONST, DOUBLE, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, UNSIGNED, VOID, VOLATILE, WCHART}">
        <choice first="{#, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, COLON_COLON, CONST, DOUBLE, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, UNSIGNED, VOID, VOLATILE, WCHART}">
         <nonterminal first="{BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CONST, DOUBLE, FLOAT, INT, LONG, SHORT, SIGNED, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="TypeSpecifierSeq"/>
         <action first="{#, COLON_COLON, ID, LANGLE}">
          <nonterminal first="{#, COLON_COLON, ID, LANGLE}" ruleName="TypeName"/>
         </action>
        </choice>
       </group>
       <optional first="{#, AMP, LBRACKET, STAR}">
        <group first="{AMP, LBRACKET, STAR}">
         <action first="{AMP, LBRACKET, STAR}">
          <nonterminal first="{AMP, LBRACKET, STAR}" ruleName="NewDeclarator"/>
         </action>
        </group>
       </optional>
      </sequence>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{AMP, LBRACKET, STAR}" name="NewDeclarator">
   <action first="{AMP, LBRACKET, STAR}">
    <group first="{AMP, LBRACKET, STAR}">
     <choice first="{AMP, LBRACKET, STAR}">
      <sequence first="{AMP, STAR}">
       <action first="{AMP, STAR}">
        <nonterminal first="{AMP, STAR}" ruleName="PtrOperator"/>
       </action>
       <optional first="{#, AMP, LBRACKET, STAR}">
        <group first="{AMP, LBRACKET, STAR}">
         <action first="{AMP, LBRACKET, STAR}">
          <nonterminal first="{AMP, LBRACKET, STAR}" ruleName="NewDeclarator"/>
         </action>
        </group>
       </optional>
      </sequence>
      <action first="{LBRACKET}">
       <nonterminal first="{LBRACKET}" ruleName="DirectNewDeclarator"/>
      </action>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{LPAREN}" name="NewInitializer">
   <sequence first="{LPAREN}">
    <sequence first="{LPAREN}">
     <token first="{LPAREN}" name="LPAREN"/>
     <optional first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, COMMA, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}">
      <nonterminal first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, COMMA, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}" ruleName="ExpressionList"/>
     </optional>
    </sequence>
    <token first="{RPAREN}" name="RPAREN"/>
   </sequence>
  </rule>
  <rule first="{LBRACKET}" name="DirectNewDeclarator">
   <action first="{LBRACKET}">
    <group first="{LBRACKET}">
     <sequence first="{LBRACKET}">
      <sequence first="{LBRACKET}">
       <sequence first="{LBRACKET}">
        <action first="{LBRACKET}">
         <token first="{LBRACKET}" name="LBRACKET"/>
        </action>
        <action first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, COMMA, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}">
         <nonterminal first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, COMMA, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}" ruleName="Expression"/>
        </action>
       </sequence>
       <action first="{RBRACKET}">
        <token first="{RBRACKET}" name="RBRACKET"/>
       </action>
      </sequence>
      <kleene first="{#, LBRACKET}">
       <group first="{LBRACKET}">
        <sequence first="{LBRACKET}">
         <sequence first="{LBRACKET}">
          <token first="{LBRACKET}" name="LBRACKET"/>
          <nonterminal first="{#, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, BOOL, CARET, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, COMMA, CONST, CONST_CAST, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, NULLPTR, OPERATOR, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART, XOR_ASSIGN}" ruleName="ConstantExpression"/>
         </sequence>
         <action first="{RBRACKET}">
          <token first="{RBRACKET}" name="RBRACKET"/>
         </action>
        </sequence>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" name="DeleteExpression">
   <action first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
    <group first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
     <sequence first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}">
      <sequence first="{#, COLON_COLON, DELETE, LBRACKET}">
       <sequence first="{#, COLON_COLON, DELETE}">
        <optional first="{#, COLON_COLON}">
         <group first="{COLON_COLON}">
          <action first="{COLON_COLON}">
           <token first="{COLON_COLON}" name="COLON_COLON"/>
          </action>
         </group>
        </optional>
        <token first="{DELETE}" name="DELETE"/>
       </sequence>
       <optional first="{#, LBRACKET}">
        <group first="{LBRACKET}">
         <sequence first="{LBRACKET}">
          <token first="{LBRACKET}" name="LBRACKET"/>
          <action first="{RBRACKET}">
           <token first="{RBRACKET}" name="RBRACKET"/>
          </action>
         </sequence>
        </group>
       </optional>
      </sequence>
      <nonterminal first="{#, AMP, ARROW, BOOL, CHAR, CHAR16T, CHAR32T, CHAR8T, CHAR_LITERAL, COLON_COLON, CONST, CONST_CAST, DELETE, DOT, DOUBLE, DYNAMIC_CAST, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, ID, INT, INTEGER_LITERAL, LANGLE, LBRACKET, LONG, LPAREN, MINUS, MINUS_MINUS, NEW, NULLPTR, OPERATOR, PLUS, PLUS_PLUS, REINTERPRET_CAST, SHORT, SIGNED, SIZEOF, STAR, STATIC_CAST, STRING_LITERAL, THIS, TILDE, TRUE, TYPEID, UNSIGNED, VOID, VOLATILE, WCHART}" ruleName="CastExpression"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{OPERATOR}" name="OperatorFunctionId">
   <action first="{OPERATOR}">
    <group first="{OPERATOR}">
     <sequence first="{OPERATOR}">
      <action first="{OPERATOR}">
       <token first="{OPERATOR}" name="OPERATOR"/>
      </action>
      <action first="{AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, CARET, COMMA, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, EQ, EXCLAMATION, GEQ, LANGLE, LBRACKET, LEQ, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, RANGLE, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, STAR, TILDE, XOR_ASSIGN}">
       <nonterminal first="{AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, CARET, COMMA, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, EQ, EXCLAMATION, GEQ, LANGLE, LBRACKET, LEQ, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, RANGLE, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, STAR, TILDE, XOR_ASSIGN}" ruleName="Operator"/>
      </action>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, CARET, COMMA, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, EQ, EXCLAMATION, GEQ, LANGLE, LBRACKET, LEQ, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, RANGLE, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, STAR, TILDE, XOR_ASSIGN}" name="Operator">
   <group first="{AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, CARET, COMMA, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, EQ, EXCLAMATION, GEQ, LANGLE, LBRACKET, LEQ, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, RANGLE, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, STAR, TILDE, XOR_ASSIGN}">
    <choice first="{AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, CARET, COMMA, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, EQ, EXCLAMATION, GEQ, LANGLE, LBRACKET, LEQ, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, RANGLE, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, STAR, TILDE, XOR_ASSIGN}">
     <choice first="{AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, CARET, COMMA, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, EQ, EXCLAMATION, GEQ, LANGLE, LBRACKET, LEQ, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, RANGLE, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, STAR, TILDE, XOR_ASSIGN}">
      <choice first="{AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, CARET, COMMA, DELETE, DISJUNCTION, DIV, DIV_ASSIGN, EQ, EXCLAMATION, GEQ, LANGLE, LBRACKET, LEQ, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, RANGLE, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, STAR, TILDE, XOR_ASSIGN}">
       <choice first="{AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, CARET, COMMA, DISJUNCTION, DIV, DIV_ASSIGN, EQ, EXCLAMATION, GEQ, LANGLE, LBRACKET, LEQ, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, NEW, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, RANGLE, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, STAR, TILDE, XOR_ASSIGN}">
        <choice first="{AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, CARET, COMMA, DISJUNCTION, DIV, DIV_ASSIGN, EQ, EXCLAMATION, GEQ, LANGLE, LBRACKET, LEQ, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, OR_ASSIGN, PIPE, PLUS, PLUS_ASSIGN, PLUS_PLUS, RANGLE, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, STAR, TILDE, XOR_ASSIGN}">
         <choice first="{AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, CARET, COMMA, DISJUNCTION, DIV, DIV_ASSIGN, EQ, EXCLAMATION, GEQ, LANGLE, LBRACKET, LEQ, LPAREN, MINUS, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, OR_ASSIGN, PIPE, PLUS_ASSIGN, PLUS_PLUS, RANGLE, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, STAR, TILDE, XOR_ASSIGN}">
          <choice first="{AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, CARET, COMMA, DISJUNCTION, DIV, DIV_ASSIGN, EQ, EXCLAMATION, GEQ, LANGLE, LBRACKET, LEQ, LPAREN, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, OR_ASSIGN, PIPE, PLUS_ASSIGN, PLUS_PLUS, RANGLE, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, STAR, TILDE, XOR_ASSIGN}">
           <choice first="{AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, CARET, COMMA, DISJUNCTION, DIV, DIV_ASSIGN, EQ, EXCLAMATION, GEQ, LANGLE, LBRACKET, LEQ, LPAREN, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, OR_ASSIGN, PIPE, PLUS_ASSIGN, PLUS_PLUS, RANGLE, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, TILDE, XOR_ASSIGN}">
            <choice first="{AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, CARET, COMMA, DISJUNCTION, DIV_ASSIGN, EQ, EXCLAMATION, GEQ, LANGLE, LBRACKET, LEQ, LPAREN, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, OR_ASSIGN, PIPE, PLUS_ASSIGN, PLUS_PLUS, RANGLE, REM, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, TILDE, XOR_ASSIGN}">
             <choice first="{AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, CARET, COMMA, DISJUNCTION, DIV_ASSIGN, EQ, EXCLAMATION, GEQ, LANGLE, LBRACKET, LEQ, LPAREN, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, OR_ASSIGN, PIPE, PLUS_ASSIGN, PLUS_PLUS, RANGLE, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, TILDE, XOR_ASSIGN}">
              <choice first="{AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, CARET, COMMA, DISJUNCTION, DIV_ASSIGN, EQ, EXCLAMATION, GEQ, LANGLE, LBRACKET, LEQ, LPAREN, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, OR_ASSIGN, PLUS_ASSIGN, PLUS_PLUS, RANGLE, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, TILDE, XOR_ASSIGN}">
               <choice first="{AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, COMMA, DISJUNCTION, DIV_ASSIGN, EQ, EXCLAMATION, GEQ, LANGLE, LBRACKET, LEQ, LPAREN, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, OR_ASSIGN, PLUS_ASSIGN, PLUS_PLUS, RANGLE, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, TILDE, XOR_ASSIGN}">
                <choice first="{AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, COMMA, DISJUNCTION, DIV_ASSIGN, EQ, EXCLAMATION, GEQ, LANGLE, LBRACKET, LEQ, LPAREN, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, OR_ASSIGN, PLUS_ASSIGN, PLUS_PLUS, RANGLE, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, TILDE, XOR_ASSIGN}">
                 <choice first="{AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, COMMA, DISJUNCTION, DIV_ASSIGN, EQ, EXCLAMATION, GEQ, LANGLE, LBRACKET, LEQ, LPAREN, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, OR_ASSIGN, PLUS_ASSIGN, PLUS_PLUS, RANGLE, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, XOR_ASSIGN}">
                  <choice first="{AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, COMMA, DISJUNCTION, DIV_ASSIGN, EQ, GEQ, LANGLE, LBRACKET, LEQ, LPAREN, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, OR_ASSIGN, PLUS_ASSIGN, PLUS_PLUS, RANGLE, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, XOR_ASSIGN}">
                   <choice first="{AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, COMMA, DISJUNCTION, DIV_ASSIGN, EQ, GEQ, LANGLE, LBRACKET, LEQ, LPAREN, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, OR_ASSIGN, PLUS_ASSIGN, PLUS_PLUS, RANGLE, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, XOR_ASSIGN}">
                    <choice first="{AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, COMMA, DISJUNCTION, DIV_ASSIGN, EQ, GEQ, LANGLE, LBRACKET, LEQ, LPAREN, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, OR_ASSIGN, PLUS_ASSIGN, PLUS_PLUS, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, XOR_ASSIGN}">
                     <choice first="{AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, COMMA, DISJUNCTION, DIV_ASSIGN, EQ, GEQ, LBRACKET, LEQ, LPAREN, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, OR_ASSIGN, PLUS_ASSIGN, PLUS_PLUS, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, XOR_ASSIGN}">
                      <choice first="{AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, COMMA, DISJUNCTION, DIV_ASSIGN, EQ, GEQ, LBRACKET, LEQ, LPAREN, MINUS_ASSIGN, MINUS_MINUS, MUL_ASSIGN, NEQ, OR_ASSIGN, PLUS_PLUS, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, XOR_ASSIGN}">
                       <choice first="{AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, COMMA, DISJUNCTION, DIV_ASSIGN, EQ, GEQ, LBRACKET, LEQ, LPAREN, MINUS_MINUS, MUL_ASSIGN, NEQ, OR_ASSIGN, PLUS_PLUS, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, XOR_ASSIGN}">
                        <choice first="{AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, COMMA, DISJUNCTION, DIV_ASSIGN, EQ, GEQ, LBRACKET, LEQ, LPAREN, MINUS_MINUS, NEQ, OR_ASSIGN, PLUS_PLUS, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, XOR_ASSIGN}">
                         <choice first="{AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, COMMA, DISJUNCTION, EQ, GEQ, LBRACKET, LEQ, LPAREN, MINUS_MINUS, NEQ, OR_ASSIGN, PLUS_PLUS, REM_ASSIGN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, XOR_ASSIGN}">
                          <choice first="{AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, COMMA, DISJUNCTION, EQ, GEQ, LBRACKET, LEQ, LPAREN, MINUS_MINUS, NEQ, OR_ASSIGN, PLUS_PLUS, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, XOR_ASSIGN}">
                           <choice first="{AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, COMMA, DISJUNCTION, EQ, GEQ, LBRACKET, LEQ, LPAREN, MINUS_MINUS, NEQ, OR_ASSIGN, PLUS_PLUS, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN}">
                            <choice first="{AMP_AMP, ARROW, ARROW_STAR, COMMA, DISJUNCTION, EQ, GEQ, LBRACKET, LEQ, LPAREN, MINUS_MINUS, NEQ, OR_ASSIGN, PLUS_PLUS, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN}">
                             <choice first="{AMP_AMP, ARROW, ARROW_STAR, COMMA, DISJUNCTION, EQ, GEQ, LBRACKET, LEQ, LPAREN, MINUS_MINUS, NEQ, PLUS_PLUS, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN}">
                              <choice first="{AMP_AMP, ARROW, ARROW_STAR, COMMA, DISJUNCTION, EQ, GEQ, LBRACKET, LEQ, LPAREN, MINUS_MINUS, NEQ, PLUS_PLUS, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN}">
                               <choice first="{AMP_AMP, ARROW, ARROW_STAR, COMMA, DISJUNCTION, EQ, GEQ, LBRACKET, LEQ, LPAREN, MINUS_MINUS, NEQ, PLUS_PLUS, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT_ASSIGN}">
                                <choice first="{AMP_AMP, ARROW, ARROW_STAR, COMMA, DISJUNCTION, EQ, GEQ, LBRACKET, LEQ, LPAREN, MINUS_MINUS, NEQ, PLUS_PLUS, SHIFT_LEFT_ASSIGN}">
                                 <choice first="{AMP_AMP, ARROW, ARROW_STAR, COMMA, DISJUNCTION, EQ, GEQ, LBRACKET, LEQ, LPAREN, MINUS_MINUS, NEQ, PLUS_PLUS}">
                                  <choice first="{AMP_AMP, ARROW, ARROW_STAR, COMMA, DISJUNCTION, GEQ, LBRACKET, LEQ, LPAREN, MINUS_MINUS, NEQ, PLUS_PLUS}">
                                   <choice first="{AMP_AMP, ARROW, ARROW_STAR, COMMA, DISJUNCTION, GEQ, LBRACKET, LEQ, LPAREN, MINUS_MINUS, PLUS_PLUS}">
                                    <choice first="{AMP_AMP, ARROW, ARROW_STAR, COMMA, DISJUNCTION, LBRACKET, LEQ, LPAREN, MINUS_MINUS, PLUS_PLUS}">
                                     <choice first="{AMP_AMP, ARROW, ARROW_STAR, COMMA, DISJUNCTION, LBRACKET, LPAREN, MINUS_MINUS, PLUS_PLUS}">
                                      <choice first="{ARROW, ARROW_STAR, COMMA, DISJUNCTION, LBRACKET, LPAREN, MINUS_MINUS, PLUS_PLUS}">
                                       <choice first="{ARROW, ARROW_STAR, COMMA, LBRACKET, LPAREN, MINUS_MINUS, PLUS_PLUS}">
                                        <choice first="{ARROW, ARROW_STAR, COMMA, LBRACKET, LPAREN, MINUS_MINUS}">
                                         <choice first="{ARROW, ARROW_STAR, COMMA, LBRACKET, LPAREN}">
                                          <choice first="{ARROW, ARROW_STAR, LBRACKET, LPAREN}">
                                           <choice first="{ARROW_STAR, LBRACKET, LPAREN}">
                                            <choice first="{LBRACKET, LPAREN}">
                                             <sequence first="{LBRACKET}">
                                              <token first="{LBRACKET}" name="LBRACKET"/>
                                              <action first="{RBRACKET}">
                                               <token first="{RBRACKET}" name="RBRACKET"/>
                                              </action>
                                             </sequence>
                                             <sequence first="{LPAREN}">
                                              <token first="{LPAREN}" name="LPAREN"/>
                                              <action first="{RPAREN}">
                                               <token first="{RPAREN}" name="RPAREN"/>
                                              </action>
                                             </sequence>
                                            </choice>
                                            <action first="{ARROW_STAR}">
                                             <token first="{ARROW_STAR}" name="ARROW_STAR"/>
                                            </action>
                                           </choice>
                                           <action first="{ARROW}">
                                            <token first="{ARROW}" name="ARROW"/>
                                           </action>
                                          </choice>
                                          <action first="{COMMA}">
                                           <token first="{COMMA}" name="COMMA"/>
                                          </action>
                                         </choice>
                                         <action first="{MINUS_MINUS}">
                                          <token first="{MINUS_MINUS}" name="MINUS_MINUS"/>
                                         </action>
                                        </choice>
                                        <action first="{PLUS_PLUS}">
                                         <token first="{PLUS_PLUS}" name="PLUS_PLUS"/>
                                        </action>
                                       </choice>
                                       <action first="{DISJUNCTION}">
                                        <token first="{DISJUNCTION}" name="DISJUNCTION"/>
                                       </action>
                                      </choice>
                                      <action first="{AMP_AMP}">
                                       <token first="{AMP_AMP}" name="AMP_AMP"/>
                                      </action>
                                     </choice>
                                     <action first="{LEQ}">
                                      <token first="{LEQ}" name="LEQ"/>
                                     </action>
                                    </choice>
                                    <action first="{GEQ}">
                                     <token first="{GEQ}" name="GEQ"/>
                                    </action>
                                   </choice>
                                   <action first="{NEQ}">
                                    <token first="{NEQ}" name="NEQ"/>
                                   </action>
                                  </choice>
                                  <action first="{EQ}">
                                   <token first="{EQ}" name="EQ"/>
                                  </action>
                                 </choice>
                                 <action first="{SHIFT_LEFT_ASSIGN}">
                                  <token first="{SHIFT_LEFT_ASSIGN}" name="SHIFT_LEFT_ASSIGN"/>
                                 </action>
                                </choice>
                                <action first="{SHIFT_RIGHT_ASSIGN}">
                                 <token first="{SHIFT_RIGHT_ASSIGN}" name="SHIFT_RIGHT_ASSIGN"/>
                                </action>
                               </choice>
                               <action first="{SHIFT_LEFT}">
                                <token first="{SHIFT_LEFT}" name="SHIFT_LEFT"/>
                               </action>
                              </choice>
                              <action first="{SHIFT_RIGHT}">
                               <token first="{SHIFT_RIGHT}" name="SHIFT_RIGHT"/>
                              </action>
                             </choice>
                             <action first="{OR_ASSIGN}">
                              <token first="{OR_ASSIGN}" name="OR_ASSIGN"/>
                             </action>
                            </choice>
                            <action first="{AND_ASSIGN}">
                             <token first="{AND_ASSIGN}" name="AND_ASSIGN"/>
                            </action>
                           </choice>
                           <action first="{XOR_ASSIGN}">
                            <token first="{XOR_ASSIGN}" name="XOR_ASSIGN"/>
                           </action>
                          </choice>
                          <action first="{REM_ASSIGN}">
                           <token first="{REM_ASSIGN}" name="REM_ASSIGN"/>
                          </action>
                         </choice>
                         <action first="{DIV_ASSIGN}">
                          <token first="{DIV_ASSIGN}" name="DIV_ASSIGN"/>
                         </action>
                        </choice>
                        <action first="{MUL_ASSIGN}">
                         <token first="{MUL_ASSIGN}" name="MUL_ASSIGN"/>
                        </action>
                       </choice>
                       <action first="{MINUS_ASSIGN}">
                        <token first="{MINUS_ASSIGN}" name="MINUS_ASSIGN"/>
                       </action>
                      </choice>
                      <action first="{PLUS_ASSIGN}">
                       <token first="{PLUS_ASSIGN}" name="PLUS_ASSIGN"/>
                      </action>
                     </choice>
                     <action first="{LANGLE}">
                      <token first="{LANGLE}" name="LANGLE"/>
                     </action>
                    </choice>
                    <action first="{RANGLE}">
                     <token first="{RANGLE}" name="RANGLE"/>
                    </action>
                   </choice>
                   <action first="{ASSIGN}">
                    <token first="{ASSIGN}" name="ASSIGN"/>
                   </action>
                  </choice>
                  <action first="{EXCLAMATION}">
                   <token first="{EXCLAMATION}" name="EXCLAMATION"/>
                  </action>
                 </choice>
                 <action first="{TILDE}">
                  <token first="{TILDE}" name="TILDE"/>
                 </action>
                </choice>
                <action first="{AMP}">
                 <token first="{AMP}" name="AMP"/>
                </action>
               </choice>
               <action first="{CARET}">
                <token first="{CARET}" name="CARET"/>
               </action>
              </choice>
              <action first="{PIPE}">
               <token first="{PIPE}" name="PIPE"/>
              </action>
             </choice>
             <action first="{REM}">
              <token first="{REM}" name="REM"/>
             </action>
            </choice>
            <action first="{DIV}">
             <token first="{DIV}" name="DIV"/>
            </action>
           </choice>
           <action first="{STAR}">
            <token first="{STAR}" name="STAR"/>
           </action>
          </choice>
          <action first="{MINUS}">
           <token first="{MINUS}" name="MINUS"/>
          </action>
         </choice>
         <action first="{PLUS}">
          <token first="{PLUS}" name="PLUS"/>
         </action>
        </choice>
        <sequence first="{NEW}">
         <sequence first="{NEW}">
          <token first="{NEW}" name="NEW"/>
          <token first="{LBRACKET}" name="LBRACKET"/>
         </sequence>
         <action first="{RBRACKET}">
          <token first="{RBRACKET}" name="RBRACKET"/>
         </action>
        </sequence>
       </choice>
       <sequence first="{DELETE}">
        <sequence first="{DELETE}">
         <token first="{DELETE}" name="DELETE"/>
         <token first="{LBRACKET}" name="LBRACKET"/>
        </sequence>
        <action first="{RBRACKET}">
         <token first="{RBRACKET}" name="RBRACKET"/>
        </action>
       </sequence>
      </choice>
      <action first="{NEW}">
       <token first="{NEW}" name="NEW"/>
      </action>
     </choice>
     <action first="{DELETE}">
      <token first="{DELETE}" name="DELETE"/>
     </action>
    </choice>
   </group>
  </rule>
 </grammar>
</parserFile>
