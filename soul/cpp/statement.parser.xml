<parserFile>
 <grammar name="StatementParser">
  <rule first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}" name="Statement">
   <choice first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}">
    <choice first="{#, WCHART, COLON_COLON, INT, SIGNED, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, STAR, MUTABLE, CHAR16T, UNSIGNED, STATIC, BOOL, AUTO, LONG, CHAR32T, DOUBLE, USING, CHAR8T, CASE, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, NAMESPACE, CONST, AMP, BREAK, FOR, CONTINUE, SEMICOLON, ID, SWITCH, LBRACE, DO, WHILE, RETURN, GOTO, #, #, #}">
     <choice first="{CASE, DEFAULT, IF, BREAK, FOR, CONTINUE, SEMICOLON, ID, SWITCH, LBRACE, DO, WHILE, RETURN, GOTO}">
      <choice first="{CASE, DEFAULT, IF, FOR, SEMICOLON, ID, SWITCH, LBRACE, DO, WHILE}">
       <choice first="{CASE, DEFAULT, IF, SEMICOLON, ID, SWITCH, LBRACE}">
        <choice first="{CASE, DEFAULT, SEMICOLON, ID, LBRACE}">
         <choice first="{CASE, DEFAULT, SEMICOLON, ID}">
          <action first="{CASE, DEFAULT, ID}">
           <nonterminal first="{CASE, DEFAULT, ID}" ruleName="LabeledStatement"/>
          </action>
          <action first="{SEMICOLON}">
           <nonterminal first="{SEMICOLON}" ruleName="EmptyStatement"/>
          </action>
         </choice>
         <action first="{LBRACE}">
          <nonterminal first="{LBRACE}" ruleName="CompoundStatement"/>
         </action>
        </choice>
        <action first="{IF, SWITCH}">
         <nonterminal first="{IF, SWITCH}" ruleName="SelectionStatement"/>
        </action>
       </choice>
       <action first="{FOR, DO, WHILE}">
        <nonterminal first="{FOR, DO, WHILE}" ruleName="IterationStatement"/>
       </action>
      </choice>
      <action first="{BREAK, CONTINUE, RETURN, GOTO}">
       <nonterminal first="{BREAK, CONTINUE, RETURN, GOTO}" ruleName="JumpStatement"/>
      </action>
     </choice>
     <action first="{#, WCHART, COLON_COLON, INT, SIGNED, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, STAR, MUTABLE, CHAR16T, UNSIGNED, STATIC, BOOL, AUTO, LONG, CHAR32T, DOUBLE, USING, CHAR8T, REGISTER, CHAR, TYPEDEF, NAMESPACE, CONST, AMP, SEMICOLON, ID, #, #, #}">
      <nonterminal first="{#, WCHART, COLON_COLON, INT, SIGNED, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, STAR, MUTABLE, CHAR16T, UNSIGNED, STATIC, BOOL, AUTO, LONG, CHAR32T, DOUBLE, USING, CHAR8T, REGISTER, CHAR, TYPEDEF, NAMESPACE, CONST, AMP, SEMICOLON, ID, #, #, #}" ruleName="DeclarationStatement"/>
     </action>
    </choice>
    <action first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #}">
     <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #}" ruleName="ExpressionStatement"/>
    </action>
   </choice>
  </rule>
  <rule first="{CASE, DEFAULT, ID}" name="LabeledStatement">
   <choice first="{CASE, DEFAULT, ID}">
    <choice first="{CASE, ID}">
     <sequence first="{ID}">
      <sequence first="{ID}">
       <action first="{ID}">
        <token first="{ID}" name="ID"/>
       </action>
       <token first="{COLON}" name="COLON"/>
      </sequence>
      <action first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}">
       <expectation first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}">
        <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}" ruleName="Statement"/>
       </expectation>
      </action>
     </sequence>
     <sequence first="{CASE}">
      <sequence first="{CASE}">
       <sequence first="{CASE}">
        <token first="{CASE}" name="CASE"/>
        <expectation first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #}">
         <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #}" ruleName="ConstantExpression"/>
        </expectation>
       </sequence>
       <expectation first="{COLON}">
        <token first="{COLON}" name="COLON"/>
       </expectation>
      </sequence>
      <action first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}">
       <expectation first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}">
        <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}" ruleName="Statement"/>
       </expectation>
      </action>
     </sequence>
    </choice>
    <sequence first="{DEFAULT}">
     <sequence first="{DEFAULT}">
      <token first="{DEFAULT}" name="DEFAULT"/>
      <expectation first="{COLON}">
       <token first="{COLON}" name="COLON"/>
      </expectation>
     </sequence>
     <action first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}">
      <expectation first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}">
       <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}" ruleName="Statement"/>
      </expectation>
     </action>
    </sequence>
   </choice>
  </rule>
  <rule first="{SEMICOLON}" name="EmptyStatement">
   <action first="{SEMICOLON}">
    <token first="{SEMICOLON}" name="SEMICOLON"/>
   </action>
  </rule>
  <rule first="{LBRACE}" name="CompoundStatement">
   <action first="{LBRACE}">
    <group first="{LBRACE}">
     <sequence first="{LBRACE}">
      <sequence first="{LBRACE}">
       <action first="{LBRACE}">
        <token first="{LBRACE}" name="LBRACE"/>
       </action>
       <kleene first="{SHIFT_RIGHT, #, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}">
        <group first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}">
         <action first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}">
          <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}" ruleName="Statement"/>
         </action>
        </group>
       </kleene>
      </sequence>
      <expectation first="{RBRACE}">
       <token first="{RBRACE}" name="RBRACE"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{IF, SWITCH}" name="SelectionStatement">
   <choice first="{IF, SWITCH}">
    <action first="{IF}">
     <nonterminal first="{IF}" ruleName="IfStatement"/>
    </action>
    <action first="{SWITCH}">
     <nonterminal first="{SWITCH}" ruleName="SwitchStatement"/>
    </action>
   </choice>
  </rule>
  <rule first="{IF}" name="IfStatement">
   <action first="{IF}">
    <group first="{IF}">
     <sequence first="{IF}">
      <sequence first="{IF}">
       <sequence first="{IF}">
        <sequence first="{IF}">
         <sequence first="{IF}">
          <token first="{IF}" name="IF"/>
          <expectation first="{LPAREN}">
           <token first="{LPAREN}" name="LPAREN"/>
          </expectation>
         </sequence>
         <expectation first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #, #}">
          <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #, #}" ruleName="Condition"/>
         </expectation>
        </sequence>
        <expectation first="{RPAREN}">
         <token first="{RPAREN}" name="RPAREN"/>
        </expectation>
       </sequence>
       <expectation first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}">
        <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}" ruleName="Statement"/>
       </expectation>
      </sequence>
      <optional first="{#, ELSE}">
       <group first="{ELSE}">
        <sequence first="{ELSE}">
         <token first="{ELSE}" name="ELSE"/>
         <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}" ruleName="Statement"/>
        </sequence>
       </group>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{SWITCH}" name="SwitchStatement">
   <action first="{SWITCH}">
    <group first="{SWITCH}">
     <sequence first="{SWITCH}">
      <sequence first="{SWITCH}">
       <sequence first="{SWITCH}">
        <sequence first="{SWITCH}">
         <token first="{SWITCH}" name="SWITCH"/>
         <expectation first="{LPAREN}">
          <token first="{LPAREN}" name="LPAREN"/>
         </expectation>
        </sequence>
        <expectation first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #, #}">
         <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #, #}" ruleName="Condition"/>
        </expectation>
       </sequence>
       <expectation first="{RPAREN}">
        <token first="{RPAREN}" name="RPAREN"/>
       </expectation>
      </sequence>
      <expectation first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}">
       <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}" ruleName="Statement"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{FOR, DO, WHILE}" name="IterationStatement">
   <choice first="{FOR, DO, WHILE}">
    <choice first="{FOR, DO, WHILE}">
     <choice first="{DO, WHILE}">
      <action first="{WHILE}">
       <nonterminal first="{WHILE}" ruleName="WhileStatement"/>
      </action>
      <action first="{DO}">
       <nonterminal first="{DO}" ruleName="DoStatement"/>
      </action>
     </choice>
     <action first="{FOR}">
      <nonterminal first="{FOR}" ruleName="RangeForStatement"/>
     </action>
    </choice>
    <action first="{FOR}">
     <nonterminal first="{FOR}" ruleName="ForStatement"/>
    </action>
   </choice>
  </rule>
  <rule first="{WHILE}" name="WhileStatement">
   <action first="{WHILE}">
    <group first="{WHILE}">
     <sequence first="{WHILE}">
      <sequence first="{WHILE}">
       <sequence first="{WHILE}">
        <sequence first="{WHILE}">
         <token first="{WHILE}" name="WHILE"/>
         <expectation first="{LPAREN}">
          <token first="{LPAREN}" name="LPAREN"/>
         </expectation>
        </sequence>
        <expectation first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #, #}">
         <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #, #}" ruleName="Condition"/>
        </expectation>
       </sequence>
       <expectation first="{RPAREN}">
        <token first="{RPAREN}" name="RPAREN"/>
       </expectation>
      </sequence>
      <expectation first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}">
       <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}" ruleName="Statement"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{DO}" name="DoStatement">
   <action first="{DO}">
    <group first="{DO}">
     <sequence first="{DO}">
      <sequence first="{DO}">
       <sequence first="{DO}">
        <sequence first="{DO}">
         <sequence first="{DO}">
          <sequence first="{DO}">
           <token first="{DO}" name="DO"/>
           <expectation first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}">
            <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}" ruleName="Statement"/>
           </expectation>
          </sequence>
          <expectation first="{WHILE}">
           <token first="{WHILE}" name="WHILE"/>
          </expectation>
         </sequence>
         <expectation first="{LPAREN}">
          <token first="{LPAREN}" name="LPAREN"/>
         </expectation>
        </sequence>
        <expectation first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #}">
         <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #}" ruleName="Expression"/>
        </expectation>
       </sequence>
       <expectation first="{RPAREN}">
        <token first="{RPAREN}" name="RPAREN"/>
       </expectation>
      </sequence>
      <expectation first="{SEMICOLON}">
       <token first="{SEMICOLON}" name="SEMICOLON"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{FOR}" name="RangeForStatement">
   <action first="{FOR}">
    <group first="{FOR}">
     <sequence first="{FOR}">
      <sequence first="{FOR}">
       <sequence first="{FOR}">
        <sequence first="{FOR}">
         <sequence first="{FOR}">
          <sequence first="{FOR}">
           <token first="{FOR}" name="FOR"/>
           <token first="{LPAREN}" name="LPAREN"/>
          </sequence>
          <nonterminal first="{#, WCHART, COLON_COLON, INT, SIGNED, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, STAR, MUTABLE, CHAR16T, UNSIGNED, STATIC, BOOL, AUTO, LONG, CHAR32T, DOUBLE, CHAR8T, REGISTER, CHAR, TYPEDEF, CONST, AMP, ID, #, #}" ruleName="ForRangeDeclaration"/>
         </sequence>
         <token first="{COLON}" name="COLON"/>
        </sequence>
        <expectation first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #}">
         <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #}" ruleName="Expression"/>
        </expectation>
       </sequence>
       <expectation first="{RPAREN}">
        <token first="{RPAREN}" name="RPAREN"/>
       </expectation>
      </sequence>
      <expectation first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}">
       <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}" ruleName="Statement"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, WCHART, COLON_COLON, INT, SIGNED, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, STAR, MUTABLE, CHAR16T, UNSIGNED, STATIC, BOOL, AUTO, LONG, CHAR32T, DOUBLE, CHAR8T, REGISTER, CHAR, TYPEDEF, CONST, AMP, ID, #, #}" name="ForRangeDeclaration">
   <action first="{#, WCHART, COLON_COLON, INT, SIGNED, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, STAR, MUTABLE, CHAR16T, UNSIGNED, STATIC, BOOL, AUTO, LONG, CHAR32T, DOUBLE, CHAR8T, REGISTER, CHAR, TYPEDEF, CONST, AMP, ID, #, #}">
    <group first="{#, WCHART, COLON_COLON, INT, SIGNED, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, STAR, MUTABLE, CHAR16T, UNSIGNED, STATIC, BOOL, AUTO, LONG, CHAR32T, DOUBLE, CHAR8T, REGISTER, CHAR, TYPEDEF, CONST, AMP, ID, #, #}">
     <sequence first="{#, WCHART, COLON_COLON, INT, SIGNED, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, STAR, MUTABLE, CHAR16T, UNSIGNED, STATIC, BOOL, AUTO, LONG, CHAR32T, DOUBLE, CHAR8T, REGISTER, CHAR, TYPEDEF, CONST, AMP, ID, #, #}">
      <sequence first="{#, WCHART, COLON_COLON, INT, SIGNED, SHORT, VOLATILE, FLOAT, VOID, EXTERN, MUTABLE, CHAR16T, UNSIGNED, STATIC, BOOL, AUTO, LONG, CHAR32T, DOUBLE, CHAR8T, REGISTER, CHAR, TYPEDEF, CONST, ID, #}">
       <action first="{#}">
        <empty first="{#}"/>
       </action>
       <nonterminal first="{WCHART, COLON_COLON, INT, SIGNED, SHORT, VOLATILE, FLOAT, VOID, EXTERN, MUTABLE, CHAR16T, UNSIGNED, STATIC, BOOL, AUTO, LONG, CHAR32T, DOUBLE, CHAR8T, REGISTER, CHAR, TYPEDEF, CONST, ID, #}" ruleName="DeclSpecifierSeq"/>
      </sequence>
      <action first="{COLON_COLON, OPERATOR, STAR, AMP, ID, #, #}">
       <nonterminal first="{COLON_COLON, OPERATOR, STAR, AMP, ID, #, #}" ruleName="Declarator"/>
      </action>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{FOR}" name="ForStatement">
   <sequence first="{FOR}">
    <sequence first="{FOR}">
     <sequence first="{FOR}">
      <sequence first="{FOR}">
       <sequence first="{FOR}">
        <sequence first="{FOR}">
         <sequence first="{FOR}">
          <token first="{FOR}" name="FOR"/>
          <token first="{LPAREN}" name="LPAREN"/>
         </sequence>
         <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #, #}" ruleName="ForInitStatement"/>
        </sequence>
        <optional first="{SHIFT_RIGHT, #, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #, #}">
         <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #, #}" ruleName="Condition"/>
        </optional>
       </sequence>
       <token first="{SEMICOLON}" name="SEMICOLON"/>
      </sequence>
      <optional first="{SHIFT_RIGHT, #, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #}">
       <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #}" ruleName="Expression"/>
      </optional>
     </sequence>
     <expectation first="{RPAREN}">
      <token first="{RPAREN}" name="RPAREN"/>
     </expectation>
    </sequence>
    <action first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}">
     <expectation first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}">
      <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, USING, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, CASE, STATIC_CAST, DEFAULT, IF, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, NAMESPACE, PLUS_PLUS, CONST, AMP, BREAK, CHAR_LITERAL, FOR, LANGLE, CONTINUE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, SWITCH, FLOATING_LITERAL, LBRACE, EXCLAMATION, DO, CARET, WHILE, RETURN, GOTO, #, #, #}" ruleName="Statement"/>
     </expectation>
    </action>
   </sequence>
  </rule>
  <rule first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #, #}" name="ForInitStatement">
   <choice first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, #, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, MUTABLE, CHAR16T, UNSIGNED, TYPEID, STATIC, BOOL, AUTO, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, REGISTER, CHAR, TYPEDEF, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #, #}">
    <choice first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, SEMICOLON, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #}">
     <action first="{SEMICOLON}">
      <nonterminal first="{SEMICOLON}" ruleName="EmptyStatement"/>
     </action>
     <action first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #}">
      <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #}" ruleName="ExpressionStatement"/>
     </action>
    </choice>
    <action first="{#, WCHART, COLON_COLON, INT, SIGNED, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, STAR, MUTABLE, CHAR16T, UNSIGNED, STATIC, BOOL, AUTO, LONG, CHAR32T, DOUBLE, CHAR8T, REGISTER, CHAR, TYPEDEF, CONST, AMP, SEMICOLON, ID, #, #, #}">
     <nonterminal first="{#, WCHART, COLON_COLON, INT, SIGNED, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, STAR, MUTABLE, CHAR16T, UNSIGNED, STATIC, BOOL, AUTO, LONG, CHAR32T, DOUBLE, CHAR8T, REGISTER, CHAR, TYPEDEF, CONST, AMP, SEMICOLON, ID, #, #, #}" ruleName="SimpleDeclaration"/>
    </action>
   </choice>
  </rule>
  <rule first="{BREAK, CONTINUE, RETURN, GOTO}" name="JumpStatement">
   <choice first="{BREAK, CONTINUE, RETURN, GOTO}">
    <choice first="{BREAK, CONTINUE, RETURN}">
     <choice first="{BREAK, CONTINUE}">
      <action first="{BREAK}">
       <nonterminal first="{BREAK}" ruleName="BreakStatement"/>
      </action>
      <action first="{CONTINUE}">
       <nonterminal first="{CONTINUE}" ruleName="ContinueStatement"/>
      </action>
     </choice>
     <action first="{RETURN}">
      <nonterminal first="{RETURN}" ruleName="ReturnStatement"/>
     </action>
    </choice>
    <action first="{GOTO}">
     <nonterminal first="{GOTO}" ruleName="GotoStatement"/>
    </action>
   </choice>
  </rule>
  <rule first="{BREAK}" name="BreakStatement">
   <action first="{BREAK}">
    <group first="{BREAK}">
     <sequence first="{BREAK}">
      <token first="{BREAK}" name="BREAK"/>
      <expectation first="{SEMICOLON}">
       <token first="{SEMICOLON}" name="SEMICOLON"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{CONTINUE}" name="ContinueStatement">
   <action first="{CONTINUE}">
    <group first="{CONTINUE}">
     <sequence first="{CONTINUE}">
      <token first="{CONTINUE}" name="CONTINUE"/>
      <expectation first="{SEMICOLON}">
       <token first="{SEMICOLON}" name="SEMICOLON"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{RETURN}" name="ReturnStatement">
   <action first="{RETURN}">
    <group first="{RETURN}">
     <sequence first="{RETURN}">
      <sequence first="{RETURN}">
       <token first="{RETURN}" name="RETURN"/>
       <optional first="{SHIFT_RIGHT, #, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #}">
        <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #}" ruleName="Expression"/>
       </optional>
      </sequence>
      <expectation first="{SEMICOLON}">
       <token first="{SEMICOLON}" name="SEMICOLON"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{GOTO}" name="GotoStatement">
   <action first="{GOTO}">
    <group first="{GOTO}">
     <sequence first="{GOTO}">
      <sequence first="{GOTO}">
       <token first="{GOTO}" name="GOTO"/>
       <action first="{ID}">
        <expectation first="{ID}">
         <token first="{ID}" name="ID"/>
        </expectation>
       </action>
      </sequence>
      <expectation first="{SEMICOLON}">
       <token first="{SEMICOLON}" name="SEMICOLON"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, WCHART, COLON_COLON, INT, SIGNED, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, STAR, MUTABLE, CHAR16T, UNSIGNED, STATIC, BOOL, AUTO, LONG, CHAR32T, DOUBLE, USING, CHAR8T, REGISTER, CHAR, TYPEDEF, NAMESPACE, CONST, AMP, SEMICOLON, ID, #, #, #}" name="DeclarationStatement">
   <action first="{#, WCHART, COLON_COLON, INT, SIGNED, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, STAR, MUTABLE, CHAR16T, UNSIGNED, STATIC, BOOL, AUTO, LONG, CHAR32T, DOUBLE, USING, CHAR8T, REGISTER, CHAR, TYPEDEF, NAMESPACE, CONST, AMP, SEMICOLON, ID, #, #, #}">
    <group first="{#, WCHART, COLON_COLON, INT, SIGNED, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, STAR, MUTABLE, CHAR16T, UNSIGNED, STATIC, BOOL, AUTO, LONG, CHAR32T, DOUBLE, USING, CHAR8T, REGISTER, CHAR, TYPEDEF, NAMESPACE, CONST, AMP, SEMICOLON, ID, #, #, #}">
     <nonterminal first="{#, WCHART, COLON_COLON, INT, SIGNED, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, EXTERN, STAR, MUTABLE, CHAR16T, UNSIGNED, STATIC, BOOL, AUTO, LONG, CHAR32T, DOUBLE, USING, CHAR8T, REGISTER, CHAR, TYPEDEF, NAMESPACE, CONST, AMP, SEMICOLON, ID, #, #, #}" ruleName="BlockDeclaration"/>
    </group>
   </action>
  </rule>
  <rule first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #, #}" name="Condition">
   <group first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #, #}">
    <choice first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #, #}">
     <sequence first="{WCHART, COLON_COLON, INT, SIGNED, SHORT, VOLATILE, FLOAT, VOID, CHAR16T, UNSIGNED, BOOL, LONG, CHAR32T, DOUBLE, CHAR8T, CHAR, CONST, ID, #, #}">
      <sequence first="{WCHART, COLON_COLON, INT, SIGNED, SHORT, VOLATILE, FLOAT, VOID, CHAR16T, UNSIGNED, BOOL, LONG, CHAR32T, DOUBLE, CHAR8T, CHAR, CONST, ID, #, #}">
       <sequence first="{WCHART, COLON_COLON, INT, SIGNED, SHORT, VOLATILE, FLOAT, VOID, CHAR16T, UNSIGNED, BOOL, LONG, CHAR32T, DOUBLE, CHAR8T, CHAR, CONST, ID, #, #}">
        <nonterminal first="{WCHART, COLON_COLON, INT, SIGNED, SHORT, VOLATILE, FLOAT, VOID, CHAR16T, UNSIGNED, BOOL, LONG, CHAR32T, DOUBLE, CHAR8T, CHAR, CONST, ID, #, #}" ruleName="TypeId"/>
        <nonterminal first="{COLON_COLON, OPERATOR, STAR, AMP, ID, #, #}" ruleName="Declarator"/>
       </sequence>
       <token first="{ASSIGN}" name="ASSIGN"/>
      </sequence>
      <action first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #}">
       <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #}" ruleName="AssignmentExpression"/>
      </action>
     </sequence>
     <action first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #}">
      <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #}" ruleName="Expression"/>
     </action>
    </choice>
   </group>
  </rule>
  <rule first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #}" name="ExpressionStatement">
   <action first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #}">
    <group first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #}">
     <sequence first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #}">
      <nonterminal first="{SHIFT_RIGHT, SHIFT_LEFT, LEQ, GEQ, NEQ, ARROW_STAR, DISJUNCTION, AMP_AMP, DOT_STAR, EQ, SIZEOF, CONST_CAST, TRUE, PLUS_ASSIGN, OR_ASSIGN, WCHART, COLON_COLON, INT, SIGNED, DELETE, REM_ASSIGN, ASSIGN, SHORT, VOLATILE, OPERATOR, FLOAT, VOID, MINUS, REM, MUL_ASSIGN, MINUS_ASSIGN, SHIFT_RIGHT_ASSIGN, STAR, XOR_ASSIGN, DIV_ASSIGN, AND_ASSIGN, CHAR16T, UNSIGNED, TYPEID, BOOL, DIV, PLUS, LONG, CHAR32T, DOUBLE, DYNAMIC_CAST, THIS, MINUS_MINUS, CHAR8T, NEW, FALSE, REINTERPRET_CAST, NULLPTR, STATIC_CAST, CHAR, SHIFT_LEFT_ASSIGN, PLUS_PLUS, CONST, AMP, CHAR_LITERAL, LANGLE, RANGLE, INTEGER_LITERAL, DOT, LPAREN, ARROW, LBRACKET, QUEST, ID, STRING_LITERAL, COMMA, TILDE, PIPE, FLOATING_LITERAL, EXCLAMATION, CARET, #, #}" ruleName="Expression"/>
      <expectation first="{SEMICOLON}">
       <token first="{SEMICOLON}" name="SEMICOLON"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
 </grammar>
</parserFile>
