<parserFile>
 <grammar name="StatementParser">
  <rule first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}" name="Statement">
   <choice first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
    <choice first="{#, GOTO, ID, RETURN, DEFAULT, CASE, SWITCH, IF, WHILE, FOR, DO, BREAK, CONTINUE, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, USING, STATIC, COLON_COLON, EXTERN, STAR, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, NAMESPACE, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, OPERATOR, CHAR, SHORT, CHAR32T, LBRACE, SEMICOLON, AMP, #, #, #}">
     <choice first="{GOTO, ID, RETURN, DEFAULT, CASE, SWITCH, IF, WHILE, FOR, DO, BREAK, CONTINUE, LBRACE, SEMICOLON}">
      <choice first="{ID, DEFAULT, CASE, SWITCH, IF, WHILE, FOR, DO, LBRACE, SEMICOLON}">
       <choice first="{ID, DEFAULT, CASE, SWITCH, IF, LBRACE, SEMICOLON}">
        <choice first="{ID, DEFAULT, CASE, LBRACE, SEMICOLON}">
         <choice first="{ID, DEFAULT, CASE, SEMICOLON}">
          <action first="{ID, DEFAULT, CASE}">
           <nonterminal first="{ID, DEFAULT, CASE}" ruleName="LabeledStatement"/>
          </action>
          <action first="{SEMICOLON}">
           <nonterminal first="{SEMICOLON}" ruleName="EmptyStatement"/>
          </action>
         </choice>
         <action first="{LBRACE}">
          <nonterminal first="{LBRACE}" ruleName="CompoundStatement"/>
         </action>
        </choice>
        <action first="{SWITCH, IF}">
         <nonterminal first="{SWITCH, IF}" ruleName="SelectionStatement"/>
        </action>
       </choice>
       <action first="{WHILE, FOR, DO}">
        <nonterminal first="{WHILE, FOR, DO}" ruleName="IterationStatement"/>
       </action>
      </choice>
      <action first="{GOTO, RETURN, BREAK, CONTINUE}">
       <nonterminal first="{GOTO, RETURN, BREAK, CONTINUE}" ruleName="JumpStatement"/>
      </action>
     </choice>
     <action first="{#, ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, USING, STATIC, COLON_COLON, EXTERN, STAR, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, NAMESPACE, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, OPERATOR, CHAR, SHORT, CHAR32T, SEMICOLON, AMP, #, #, #}">
      <nonterminal first="{#, ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, USING, STATIC, COLON_COLON, EXTERN, STAR, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, NAMESPACE, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, OPERATOR, CHAR, SHORT, CHAR32T, SEMICOLON, AMP, #, #, #}" ruleName="DeclarationStatement"/>
     </action>
    </choice>
    <action first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #}">
     <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #}" ruleName="ExpressionStatement"/>
    </action>
   </choice>
  </rule>
  <rule first="{ID, DEFAULT, CASE}" name="LabeledStatement">
   <choice first="{ID, DEFAULT, CASE}">
    <choice first="{ID, CASE}">
     <sequence first="{ID}">
      <sequence first="{ID}">
       <action first="{ID}">
        <token first="{ID}" name="ID"/>
       </action>
       <token first="{COLON}" name="COLON"/>
      </sequence>
      <action first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
       <expectation first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
        <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}" ruleName="Statement"/>
       </expectation>
      </action>
     </sequence>
     <sequence first="{CASE}">
      <sequence first="{CASE}">
       <sequence first="{CASE}">
        <token first="{CASE}" name="CASE"/>
        <expectation first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #}">
         <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #}" ruleName="ConstantExpression"/>
        </expectation>
       </sequence>
       <expectation first="{COLON}">
        <token first="{COLON}" name="COLON"/>
       </expectation>
      </sequence>
      <action first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
       <expectation first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
        <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}" ruleName="Statement"/>
       </expectation>
      </action>
     </sequence>
    </choice>
    <sequence first="{DEFAULT}">
     <sequence first="{DEFAULT}">
      <token first="{DEFAULT}" name="DEFAULT"/>
      <expectation first="{COLON}">
       <token first="{COLON}" name="COLON"/>
      </expectation>
     </sequence>
     <action first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
      <expectation first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
       <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}" ruleName="Statement"/>
      </expectation>
     </action>
    </sequence>
   </choice>
  </rule>
  <rule first="{SEMICOLON}" name="EmptyStatement">
   <action first="{SEMICOLON}">
    <token first="{SEMICOLON}" name="SEMICOLON"/>
   </action>
  </rule>
  <rule first="{LBRACE}" name="CompoundStatement">
   <action first="{LBRACE}">
    <group first="{LBRACE}">
     <sequence first="{LBRACE}">
      <sequence first="{LBRACE}">
       <action first="{LBRACE}">
        <token first="{LBRACE}" name="LBRACE"/>
       </action>
       <kleene first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, #, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
        <group first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
         <action first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
          <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}" ruleName="Statement"/>
         </action>
        </group>
       </kleene>
      </sequence>
      <expectation first="{RBRACE}">
       <token first="{RBRACE}" name="RBRACE"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{SWITCH, IF}" name="SelectionStatement">
   <choice first="{SWITCH, IF}">
    <action first="{IF}">
     <nonterminal first="{IF}" ruleName="IfStatement"/>
    </action>
    <action first="{SWITCH}">
     <nonterminal first="{SWITCH}" ruleName="SwitchStatement"/>
    </action>
   </choice>
  </rule>
  <rule first="{IF}" name="IfStatement">
   <action first="{IF}">
    <group first="{IF}">
     <sequence first="{IF}">
      <sequence first="{IF}">
       <sequence first="{IF}">
        <sequence first="{IF}">
         <sequence first="{IF}">
          <token first="{IF}" name="IF"/>
          <expectation first="{LPAREN}">
           <token first="{LPAREN}" name="LPAREN"/>
          </expectation>
         </sequence>
         <expectation first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
          <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #, #}" ruleName="Condition"/>
         </expectation>
        </sequence>
        <expectation first="{RPAREN}">
         <token first="{RPAREN}" name="RPAREN"/>
        </expectation>
       </sequence>
       <expectation first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
        <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}" ruleName="Statement"/>
       </expectation>
      </sequence>
      <optional first="{ELSE, #}">
       <group first="{ELSE}">
        <sequence first="{ELSE}">
         <token first="{ELSE}" name="ELSE"/>
         <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}" ruleName="Statement"/>
        </sequence>
       </group>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{SWITCH}" name="SwitchStatement">
   <action first="{SWITCH}">
    <group first="{SWITCH}">
     <sequence first="{SWITCH}">
      <sequence first="{SWITCH}">
       <sequence first="{SWITCH}">
        <sequence first="{SWITCH}">
         <token first="{SWITCH}" name="SWITCH"/>
         <expectation first="{LPAREN}">
          <token first="{LPAREN}" name="LPAREN"/>
         </expectation>
        </sequence>
        <expectation first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
         <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #, #}" ruleName="Condition"/>
        </expectation>
       </sequence>
       <expectation first="{RPAREN}">
        <token first="{RPAREN}" name="RPAREN"/>
       </expectation>
      </sequence>
      <expectation first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
       <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}" ruleName="Statement"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{WHILE, FOR, DO}" name="IterationStatement">
   <choice first="{WHILE, FOR, DO}">
    <choice first="{WHILE, FOR, DO}">
     <choice first="{WHILE, DO}">
      <action first="{WHILE}">
       <nonterminal first="{WHILE}" ruleName="WhileStatement"/>
      </action>
      <action first="{DO}">
       <nonterminal first="{DO}" ruleName="DoStatement"/>
      </action>
     </choice>
     <action first="{FOR}">
      <nonterminal first="{FOR}" ruleName="RangeForStatement"/>
     </action>
    </choice>
    <action first="{FOR}">
     <nonterminal first="{FOR}" ruleName="ForStatement"/>
    </action>
   </choice>
  </rule>
  <rule first="{WHILE}" name="WhileStatement">
   <action first="{WHILE}">
    <group first="{WHILE}">
     <sequence first="{WHILE}">
      <sequence first="{WHILE}">
       <sequence first="{WHILE}">
        <sequence first="{WHILE}">
         <token first="{WHILE}" name="WHILE"/>
         <expectation first="{LPAREN}">
          <token first="{LPAREN}" name="LPAREN"/>
         </expectation>
        </sequence>
        <expectation first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
         <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #, #}" ruleName="Condition"/>
        </expectation>
       </sequence>
       <expectation first="{RPAREN}">
        <token first="{RPAREN}" name="RPAREN"/>
       </expectation>
      </sequence>
      <expectation first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
       <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}" ruleName="Statement"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{DO}" name="DoStatement">
   <action first="{DO}">
    <group first="{DO}">
     <sequence first="{DO}">
      <sequence first="{DO}">
       <sequence first="{DO}">
        <sequence first="{DO}">
         <sequence first="{DO}">
          <sequence first="{DO}">
           <token first="{DO}" name="DO"/>
           <expectation first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
            <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}" ruleName="Statement"/>
           </expectation>
          </sequence>
          <expectation first="{WHILE}">
           <token first="{WHILE}" name="WHILE"/>
          </expectation>
         </sequence>
         <expectation first="{LPAREN}">
          <token first="{LPAREN}" name="LPAREN"/>
         </expectation>
        </sequence>
        <expectation first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #}">
         <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #}" ruleName="Expression"/>
        </expectation>
       </sequence>
       <expectation first="{RPAREN}">
        <token first="{RPAREN}" name="RPAREN"/>
       </expectation>
      </sequence>
      <expectation first="{SEMICOLON}">
       <token first="{SEMICOLON}" name="SEMICOLON"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{FOR}" name="RangeForStatement">
   <action first="{FOR}">
    <group first="{FOR}">
     <sequence first="{FOR}">
      <sequence first="{FOR}">
       <sequence first="{FOR}">
        <sequence first="{FOR}">
         <sequence first="{FOR}">
          <sequence first="{FOR}">
           <token first="{FOR}" name="FOR"/>
           <token first="{LPAREN}" name="LPAREN"/>
          </sequence>
          <nonterminal first="{ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, COLON_COLON, EXTERN, STAR, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, OPERATOR, CHAR, SHORT, CHAR32T, #, AMP, #, #}" ruleName="ForRangeDeclaration"/>
         </sequence>
         <token first="{COLON}" name="COLON"/>
        </sequence>
        <expectation first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #}">
         <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #}" ruleName="Expression"/>
        </expectation>
       </sequence>
       <expectation first="{RPAREN}">
        <token first="{RPAREN}" name="RPAREN"/>
       </expectation>
      </sequence>
      <expectation first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
       <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}" ruleName="Statement"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, COLON_COLON, EXTERN, STAR, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, OPERATOR, CHAR, SHORT, CHAR32T, #, AMP, #, #}" name="ForRangeDeclaration">
   <action first="{ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, COLON_COLON, EXTERN, STAR, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, OPERATOR, CHAR, SHORT, CHAR32T, #, AMP, #, #}">
    <group first="{ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, COLON_COLON, EXTERN, STAR, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, OPERATOR, CHAR, SHORT, CHAR32T, #, AMP, #, #}">
     <sequence first="{ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, COLON_COLON, EXTERN, STAR, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, OPERATOR, CHAR, SHORT, CHAR32T, #, AMP, #, #}">
      <sequence first="{ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, COLON_COLON, EXTERN, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #, #}">
       <action first="{#}">
        <empty first="{#}"/>
       </action>
       <nonterminal first="{ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, COLON_COLON, EXTERN, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #}" ruleName="DeclSpecifierSeq"/>
      </sequence>
      <action first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #}">
       <nonterminal first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #}" ruleName="Declarator"/>
      </action>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{FOR}" name="ForStatement">
   <sequence first="{FOR}">
    <sequence first="{FOR}">
     <sequence first="{FOR}">
      <sequence first="{FOR}">
       <sequence first="{FOR}">
        <sequence first="{FOR}">
         <sequence first="{FOR}">
          <token first="{FOR}" name="FOR"/>
          <token first="{LPAREN}" name="LPAREN"/>
         </sequence>
         <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, #, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}" ruleName="ForInitStatement"/>
        </sequence>
        <optional first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, #, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
         <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #, #}" ruleName="Condition"/>
        </optional>
       </sequence>
       <token first="{SEMICOLON}" name="SEMICOLON"/>
      </sequence>
      <optional first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, #, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #}">
       <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #}" ruleName="Expression"/>
      </optional>
     </sequence>
     <expectation first="{RPAREN}">
      <token first="{RPAREN}" name="RPAREN"/>
     </expectation>
    </sequence>
    <action first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
     <expectation first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
      <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, #, GOTO, ID, RETURN, DELETE, DEFAULT, FALSE, CASE, TRUE, SWITCH, IF, WHILE, FOR, NULLPTR, DO, NEW, BREAK, CONTINUE, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, USING, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, NAMESPACE, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, LBRACE, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}" ruleName="Statement"/>
     </expectation>
    </action>
   </sequence>
  </rule>
  <rule first="{STRING_LITERAL, CHAR_LITERAL, #, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}" name="ForInitStatement">
   <choice first="{STRING_LITERAL, CHAR_LITERAL, #, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, REGISTER, VOLATILE, TYPEDEF, PLUS, MINUS_MINUS, STATIC, COLON_COLON, EXTERN, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, AUTO, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, MUTABLE, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
    <choice first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, SEMICOLON, LPAREN, ARROW, AMP, LANGLE, #, #}">
     <action first="{SEMICOLON}">
      <nonterminal first="{SEMICOLON}" ruleName="EmptyStatement"/>
     </action>
     <action first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #}">
      <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #}" ruleName="ExpressionStatement"/>
     </action>
    </choice>
    <action first="{#, ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, COLON_COLON, EXTERN, STAR, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, OPERATOR, CHAR, SHORT, CHAR32T, SEMICOLON, AMP, #, #, #}">
     <nonterminal first="{#, ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, STATIC, COLON_COLON, EXTERN, STAR, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, OPERATOR, CHAR, SHORT, CHAR32T, SEMICOLON, AMP, #, #, #}" ruleName="SimpleDeclaration"/>
    </action>
   </choice>
  </rule>
  <rule first="{GOTO, RETURN, BREAK, CONTINUE}" name="JumpStatement">
   <choice first="{GOTO, RETURN, BREAK, CONTINUE}">
    <choice first="{RETURN, BREAK, CONTINUE}">
     <choice first="{BREAK, CONTINUE}">
      <action first="{BREAK}">
       <nonterminal first="{BREAK}" ruleName="BreakStatement"/>
      </action>
      <action first="{CONTINUE}">
       <nonterminal first="{CONTINUE}" ruleName="ContinueStatement"/>
      </action>
     </choice>
     <action first="{RETURN}">
      <nonterminal first="{RETURN}" ruleName="ReturnStatement"/>
     </action>
    </choice>
    <action first="{GOTO}">
     <nonterminal first="{GOTO}" ruleName="GotoStatement"/>
    </action>
   </choice>
  </rule>
  <rule first="{BREAK}" name="BreakStatement">
   <action first="{BREAK}">
    <group first="{BREAK}">
     <sequence first="{BREAK}">
      <token first="{BREAK}" name="BREAK"/>
      <expectation first="{SEMICOLON}">
       <token first="{SEMICOLON}" name="SEMICOLON"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{CONTINUE}" name="ContinueStatement">
   <action first="{CONTINUE}">
    <group first="{CONTINUE}">
     <sequence first="{CONTINUE}">
      <token first="{CONTINUE}" name="CONTINUE"/>
      <expectation first="{SEMICOLON}">
       <token first="{SEMICOLON}" name="SEMICOLON"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{RETURN}" name="ReturnStatement">
   <action first="{RETURN}">
    <group first="{RETURN}">
     <sequence first="{RETURN}">
      <sequence first="{RETURN}">
       <token first="{RETURN}" name="RETURN"/>
       <optional first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, #, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #}">
        <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #}" ruleName="Expression"/>
       </optional>
      </sequence>
      <expectation first="{SEMICOLON}">
       <token first="{SEMICOLON}" name="SEMICOLON"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{GOTO}" name="GotoStatement">
   <action first="{GOTO}">
    <group first="{GOTO}">
     <sequence first="{GOTO}">
      <sequence first="{GOTO}">
       <token first="{GOTO}" name="GOTO"/>
       <action first="{ID}">
        <expectation first="{ID}">
         <token first="{ID}" name="ID"/>
        </expectation>
       </action>
      </sequence>
      <expectation first="{SEMICOLON}">
       <token first="{SEMICOLON}" name="SEMICOLON"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, USING, STATIC, COLON_COLON, EXTERN, STAR, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, NAMESPACE, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, OPERATOR, CHAR, SHORT, CHAR32T, SEMICOLON, AMP, #, #, #}" name="DeclarationStatement">
   <action first="{#, ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, USING, STATIC, COLON_COLON, EXTERN, STAR, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, NAMESPACE, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, OPERATOR, CHAR, SHORT, CHAR32T, SEMICOLON, AMP, #, #, #}">
    <group first="{#, ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, USING, STATIC, COLON_COLON, EXTERN, STAR, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, NAMESPACE, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, OPERATOR, CHAR, SHORT, CHAR32T, SEMICOLON, AMP, #, #, #}">
     <nonterminal first="{#, ID, UNSIGNED, REGISTER, VOLATILE, TYPEDEF, USING, STATIC, COLON_COLON, EXTERN, STAR, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, AUTO, WCHART, NAMESPACE, CONST, MUTABLE, CHAR8T, VOID, CHAR16T, OPERATOR, CHAR, SHORT, CHAR32T, SEMICOLON, AMP, #, #, #}" ruleName="BlockDeclaration"/>
    </group>
   </action>
  </rule>
  <rule first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #, #}" name="Condition">
   <group first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
    <choice first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #, #}">
     <sequence first="{ID, UNSIGNED, VOLATILE, COLON_COLON, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #, #}">
      <sequence first="{ID, UNSIGNED, VOLATILE, COLON_COLON, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #, #}">
       <sequence first="{ID, UNSIGNED, VOLATILE, COLON_COLON, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #, #}">
        <nonterminal first="{ID, UNSIGNED, VOLATILE, COLON_COLON, BOOL, INT, SIGNED, LONG, FLOAT, DOUBLE, WCHART, CONST, CHAR8T, VOID, CHAR16T, CHAR, SHORT, CHAR32T, #, #}" ruleName="TypeId"/>
        <nonterminal first="{ID, COLON_COLON, STAR, OPERATOR, AMP, #, #}" ruleName="Declarator"/>
       </sequence>
       <token first="{ASSIGN}" name="ASSIGN"/>
      </sequence>
      <action first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #}">
       <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, LPAREN, ARROW, AMP, LANGLE, #, #}" ruleName="AssignmentExpression"/>
      </action>
     </sequence>
     <action first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #}">
      <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #}" ruleName="Expression"/>
     </action>
    </choice>
   </group>
  </rule>
  <rule first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #}" name="ExpressionStatement">
   <action first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #}">
    <group first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #}">
     <sequence first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #}">
      <nonterminal first="{STRING_LITERAL, CHAR_LITERAL, ID, DELETE, FALSE, TRUE, NULLPTR, NEW, INTEGER_LITERAL, FLOATING_LITERAL, TYPEID, UNSIGNED, THIS, VOLATILE, PLUS, MINUS_MINUS, COLON_COLON, SHIFT_RIGHT, STAR, REM, PLUS_ASSIGN, SHIFT_LEFT_ASSIGN, AND_ASSIGN, BOOL, OR_ASSIGN, INT, SIGNED, SHIFT_LEFT, LONG, FLOAT, REM_ASSIGN, DOUBLE, WCHART, MINUS, DIV, ASSIGN, MUL_ASSIGN, GEQ, CONST, PLUS_PLUS, MINUS_ASSIGN, DIV_ASSIGN, XOR_ASSIGN, CHAR8T, VOID, CHAR16T, SIZEOF, OPERATOR, CHAR, DYNAMIC_CAST, LEQ, SHORT, STATIC_CAST, SHIFT_RIGHT_ASSIGN, REINTERPRET_CAST, CONST_CAST, CHAR32T, DISJUNCTION, DOT_STAR, ARROW_STAR, EQ, NEQ, AMP_AMP, DOT, TILDE, EXCLAMATION, CARET, RANGLE, QUEST, PIPE, LBRACKET, COMMA, LPAREN, ARROW, AMP, LANGLE, #, #}" ruleName="Expression"/>
      <expectation first="{SEMICOLON}">
       <token first="{SEMICOLON}" name="SEMICOLON"/>
      </expectation>
     </sequence>
    </group>
   </action>
  </rule>
 </grammar>
</parserFile>
