<parserFile>
 <grammar name="TypeParser">
  <rule first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}" name="TypeSpecifierSeq">
   <action first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
    <group first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
     <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
      <sequence first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
       <action first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
        <nonterminal first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}" ruleName="TypeSpecifier"/>
       </action>
       <kleene first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
        <group first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
         <action first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
          <nonterminal first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}" ruleName="TypeSpecifier"/>
         </action>
        </group>
       </kleene>
      </sequence>
      <optional first="{#, ALIGNAS, LBRACKET}">
       <group first="{ALIGNAS, LBRACKET}">
        <action first="{ALIGNAS, LBRACKET}">
         <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
        </action>
       </group>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}" name="TypeSpecifierSeqReset">
   <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
    <action first="{#}">
     <empty first="{#}"/>
    </action>
    <action first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
     <nonterminal first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}" ruleName="TypeSpecifierSeq"/>
    </action>
   </sequence>
  </rule>
  <rule first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, SHORT, SIGNED, STAR, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}" name="DefiningTypeId">
   <action first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, SHORT, SIGNED, STAR, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
    <group first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, SHORT, SIGNED, STAR, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
     <sequence first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, SHORT, SIGNED, STAR, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
      <action first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
       <nonterminal first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}" ruleName="DefiningTypeSpecifierSeq"/>
      </action>
      <optional first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, COLON_COLON, CONST, ELLIPSIS, ID, LBRACKET, LPAREN, STAR, TEMPLATE, VOLATILE}">
       <nonterminal first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, COLON_COLON, CONST, ELLIPSIS, ID, LBRACKET, LPAREN, STAR, TEMPLATE, VOLATILE}" ruleName="AbstractDeclarator"/>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}" name="DefiningTypeSpecifierSeq">
   <action first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
    <group first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
     <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
      <sequence first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
       <action first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
        <nonterminal first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}" ruleName="DefiningTypeSpecifierReset"/>
       </action>
       <kleene first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
        <group first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
         <action first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
          <nonterminal first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}" ruleName="DefiningTypeSpecifierReset"/>
         </action>
        </group>
       </kleene>
      </sequence>
      <optional first="{#, ALIGNAS, LBRACKET}">
       <group first="{ALIGNAS, LBRACKET}">
        <action first="{ALIGNAS, LBRACKET}">
         <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
        </action>
       </group>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}" name="DefiningTypeSpecifierReset">
   <sequence first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
    <action first="{#}">
     <empty first="{#}"/>
    </action>
    <action first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
     <nonterminal first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}" ruleName="DefiningTypeSpecifier"/>
    </action>
   </sequence>
  </rule>
  <rule first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}" name="DefiningTypeSpecifier">
   <group first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
    <choice first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
     <choice first="{CLASS, ENUM, STRUCT, UNION}">
      <action first="{CLASS, STRUCT, UNION}">
       <nonterminal first="{CLASS, STRUCT, UNION}" ruleName="ClassSpecifier"/>
      </action>
      <action first="{ENUM}">
       <nonterminal first="{ENUM}" ruleName="EnumSpecifier"/>
      </action>
     </choice>
     <action first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
      <nonterminal first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}" ruleName="TypeSpecifier"/>
     </action>
    </choice>
   </group>
  </rule>
  <rule first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}" name="TypeSpecifier">
   <choice first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
    <choice first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, WCHAR_T}">
     <choice first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, UNION, UNSIGNED, VOID, WCHAR_T}">
      <action first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, COLON_COLON, DECLTYPE, DOUBLE, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, TEMPLATE, UNSIGNED, VOID, WCHAR_T}">
       <nonterminal first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, COLON_COLON, DECLTYPE, DOUBLE, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, TEMPLATE, UNSIGNED, VOID, WCHAR_T}" ruleName="SimpleTypeSpecifier"/>
      </action>
      <action first="{CLASS, ENUM, STRUCT, UNION}">
       <nonterminal first="{CLASS, ENUM, STRUCT, UNION}" ruleName="ElaboratedTypeSpecifier"/>
      </action>
     </choice>
     <action first="{#, TYPENAME}">
      <nonterminal first="{#, TYPENAME}" ruleName="TypenameSpecifier"/>
     </action>
    </choice>
    <action first="{CONST, VOLATILE}">
     <nonterminal first="{CONST, VOLATILE}" ruleName="CVQualifier"/>
    </action>
   </choice>
  </rule>
  <rule first="{CLASS, ENUM, STRUCT, UNION}" name="ElaboratedTypeSpecifier">
   <choice first="{CLASS, ENUM, STRUCT, UNION}">
    <sequence first="{CLASS, STRUCT, UNION}">
     <sequence first="{CLASS, STRUCT, UNION}">
      <action first="{CLASS, STRUCT, UNION}">
       <nonterminal first="{CLASS, STRUCT, UNION}" ruleName="ClassKey"/>
      </action>
      <optional first="{#, ALIGNAS, LBRACKET}">
       <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
      </optional>
     </sequence>
     <group first="{#, COLON_COLON, ID, TEMPLATE}">
      <choice first="{#, COLON_COLON, ID, TEMPLATE}">
       <choice first="{#, COLON_COLON, ID, TEMPLATE}">
        <sequence first="{#, COLON_COLON, ID, TEMPLATE}">
         <action first="{#, COLON_COLON, ID, TEMPLATE}">
          <nonterminal first="{#, COLON_COLON, ID, TEMPLATE}" ruleName="NestedNameSpecifier"/>
         </action>
         <group first="{ID, TEMPLATE}">
          <choice first="{ID, TEMPLATE}">
           <choice first="{ID, TEMPLATE}">
            <sequence first="{TEMPLATE}">
             <action first="{TEMPLATE}">
              <nonterminal first="{TEMPLATE}" ruleName="Template"/>
             </action>
             <action first="{ID}">
              <nonterminal first="{ID}" ruleName="SimpleTemplateId"/>
             </action>
            </sequence>
            <action first="{ID}">
             <nonterminal first="{ID}" ruleName="SimpleTemplateId"/>
            </action>
           </choice>
           <action first="{ID}">
            <nonterminal first="{ID}" ruleName="Identifier"/>
           </action>
          </choice>
         </group>
        </sequence>
        <action first="{ID}">
         <nonterminal first="{ID}" ruleName="SimpleTemplateId"/>
        </action>
       </choice>
       <action first="{ID}">
        <nonterminal first="{ID}" ruleName="Identifier"/>
       </action>
      </choice>
     </group>
    </sequence>
    <action first="{ENUM}">
     <nonterminal first="{ENUM}" ruleName="ElaboratedEnumSpecifier"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, COLON_COLON, DECLTYPE, DOUBLE, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, TEMPLATE, UNSIGNED, VOID, WCHAR_T}" name="SimpleTypeSpecifierReset">
   <sequence first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, COLON_COLON, DECLTYPE, DOUBLE, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, TEMPLATE, UNSIGNED, VOID, WCHAR_T}">
    <action first="{#}">
     <empty first="{#}"/>
    </action>
    <action first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, COLON_COLON, DECLTYPE, DOUBLE, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, TEMPLATE, UNSIGNED, VOID, WCHAR_T}">
     <nonterminal first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, COLON_COLON, DECLTYPE, DOUBLE, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, TEMPLATE, UNSIGNED, VOID, WCHAR_T}" ruleName="SimpleTypeSpecifier"/>
    </action>
   </sequence>
  </rule>
  <rule first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, COLON_COLON, DECLTYPE, DOUBLE, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, TEMPLATE, UNSIGNED, VOID, WCHAR_T}" name="SimpleTypeSpecifier">
   <group first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, COLON_COLON, DECLTYPE, DOUBLE, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, TEMPLATE, UNSIGNED, VOID, WCHAR_T}">
    <choice first="{#, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, COLON_COLON, DECLTYPE, DOUBLE, FLOAT, ID, INT, LANGLE, LONG, SHORT, SIGNED, TEMPLATE, UNSIGNED, VOID, WCHAR_T}">
     <action first="{BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, DOUBLE, FLOAT, INT, LONG, SHORT, SIGNED, UNSIGNED, VOID, WCHAR_T}">
      <nonterminal first="{BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, DOUBLE, FLOAT, INT, LONG, SHORT, SIGNED, UNSIGNED, VOID, WCHAR_T}" ruleName="SimpleType"/>
     </action>
     <sequence first="{#, AUTO, COLON_COLON, DECLTYPE, ID, LANGLE, TEMPLATE}">
      <nonterminal first="{#}" ruleName="NotDefiningTypeSpecifierGuard"/>
      <group first="{#, AUTO, COLON_COLON, DECLTYPE, ID, LANGLE, TEMPLATE}">
       <group first="{#, AUTO, COLON_COLON, DECLTYPE, ID, LANGLE, TEMPLATE}">
        <choice first="{#, AUTO, COLON_COLON, DECLTYPE, ID, LANGLE, TEMPLATE}">
         <choice first="{#, COLON_COLON, DECLTYPE, ID, TEMPLATE}">
          <choice first="{#, COLON_COLON, ID, TEMPLATE}">
           <choice first="{#, COLON_COLON, ID, TEMPLATE}">
            <sequence first="{#, COLON_COLON, ID, TEMPLATE}">
             <sequence first="{#, COLON_COLON, ID, TEMPLATE}">
              <action first="{#, COLON_COLON, ID, TEMPLATE}">
               <nonterminal first="{#, COLON_COLON, ID, TEMPLATE}" ruleName="NestedNameSpecifier"/>
              </action>
              <action first="{TEMPLATE}">
               <nonterminal first="{TEMPLATE}" ruleName="Template"/>
              </action>
             </sequence>
             <action first="{ID}">
              <nonterminal first="{ID}" ruleName="SimpleTemplateId"/>
             </action>
            </sequence>
            <sequence first="{#, COLON_COLON, ID, TEMPLATE}">
             <action first="{#, COLON_COLON, ID, TEMPLATE}">
              <nonterminal first="{#, COLON_COLON, ID, TEMPLATE}" ruleName="NestedNameSpecifier"/>
             </action>
             <action first="{#, ID}">
              <nonterminal first="{#, ID}" ruleName="TypeName"/>
             </action>
            </sequence>
           </choice>
           <sequence first="{#, ID}">
            <action first="{#}">
             <empty first="{#}"/>
            </action>
            <action first="{#, ID}">
             <nonterminal first="{#, ID}" ruleName="TypeName"/>
            </action>
           </sequence>
          </choice>
          <action first="{DECLTYPE}">
           <nonterminal first="{DECLTYPE}" ruleName="DeclTypeSpecifier"/>
          </action>
         </choice>
         <action first="{#, AUTO, COLON_COLON, DECLTYPE, ID, LANGLE, TEMPLATE}">
          <nonterminal first="{#, AUTO, COLON_COLON, DECLTYPE, ID, LANGLE, TEMPLATE}" ruleName="PlaceholderTypeSpecifier"/>
         </action>
        </choice>
       </group>
      </group>
     </sequence>
    </choice>
   </group>
  </rule>
  <rule first="{#, ID}" name="TypeName">
   <choice first="{#, ID}">
    <action first="{ID}">
     <nonterminal first="{ID}" ruleName="SimpleTemplateId"/>
    </action>
    <action first="{#, ID}">
     <nonterminal first="{#, ID}" ruleName="TypeIdentifier"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, SHORT, SIGNED, STAR, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}" name="TypeId">
   <action first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, SHORT, SIGNED, STAR, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
    <group first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, SHORT, SIGNED, STAR, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
     <sequence first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, SHORT, SIGNED, STAR, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
      <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
       <action first="{#}">
        <empty first="{#}"/>
       </action>
       <action first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
        <nonterminal first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}" ruleName="TypeSpecifierSeq"/>
       </action>
      </sequence>
      <optional first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, COLON_COLON, CONST, ELLIPSIS, ID, LBRACKET, LPAREN, STAR, TEMPLATE, VOLATILE}">
       <nonterminal first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, COLON_COLON, CONST, ELLIPSIS, ID, LBRACKET, LPAREN, STAR, TEMPLATE, VOLATILE}" ruleName="AbstractDeclarator"/>
      </optional>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, TYPENAME}" name="TypenameSpecifier">
   <choice first="{#, TYPENAME}">
    <sequence first="{TYPENAME}">
     <sequence first="{TYPENAME}">
      <sequence first="{TYPENAME}">
       <action first="{TYPENAME}">
        <token first="{TYPENAME}" name="TYPENAME"/>
       </action>
       <action first="{#}">
        <empty first="{#}"/>
       </action>
      </sequence>
      <action first="{#, COLON_COLON, ID, TEMPLATE}">
       <nonterminal first="{#, COLON_COLON, ID, TEMPLATE}" ruleName="NestedNameSpecifier"/>
      </action>
     </sequence>
     <group first="{#, ID, TEMPLATE}">
      <choice first="{#, ID, TEMPLATE}">
       <sequence first="{#, ID, TEMPLATE}">
        <optional first="{#, TEMPLATE}">
         <group first="{TEMPLATE}">
          <action first="{TEMPLATE}">
           <nonterminal first="{TEMPLATE}" ruleName="Template"/>
          </action>
         </group>
        </optional>
        <action first="{ID}">
         <nonterminal first="{ID}" ruleName="SimpleTemplateId"/>
        </action>
       </sequence>
       <action first="{ID}">
        <nonterminal first="{ID}" ruleName="Identifier"/>
       </action>
      </choice>
     </group>
    </sequence>
    <action first="{#}">
     <empty first="{#}"/>
    </action>
   </choice>
  </rule>
  <rule first="{DECLTYPE}" name="DeclTypeSpecifier">
   <action first="{DECLTYPE}">
    <group first="{DECLTYPE}">
     <sequence first="{DECLTYPE}">
      <sequence first="{DECLTYPE}">
       <sequence first="{DECLTYPE}">
        <action first="{DECLTYPE}">
         <token first="{DECLTYPE}" name="DECLTYPE"/>
        </action>
        <action first="{LPAREN}">
         <token first="{LPAREN}" name="LPAREN"/>
        </action>
       </sequence>
       <nonterminal first="{#, ADD_ASSIGN, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}" ruleName="Expression"/>
      </sequence>
      <action first="{RPAREN}">
       <token first="{RPAREN}" name="RPAREN"/>
      </action>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, AUTO, COLON_COLON, DECLTYPE, ID, LANGLE, TEMPLATE}" name="PlaceholderTypeSpecifier">
   <group first="{#, AUTO, COLON_COLON, DECLTYPE, ID, LANGLE, TEMPLATE}">
    <choice first="{#, AUTO, COLON_COLON, DECLTYPE, ID, LANGLE, TEMPLATE}">
     <sequence first="{#, AUTO, COLON_COLON, ID, LANGLE, TEMPLATE}">
      <optional first="{#, COLON_COLON, ID, LANGLE, TEMPLATE}">
       <group first="{#, COLON_COLON, ID, LANGLE, TEMPLATE}">
        <action first="{#, COLON_COLON, ID, LANGLE, TEMPLATE}">
         <nonterminal first="{#, COLON_COLON, ID, LANGLE, TEMPLATE}" ruleName="TypeConstraint"/>
        </action>
       </group>
      </optional>
      <group first="{AUTO}">
       <action first="{AUTO}">
        <token first="{AUTO}" name="AUTO"/>
       </action>
      </group>
     </sequence>
     <group first="{DECLTYPE}">
      <action first="{DECLTYPE}">
       <group first="{DECLTYPE}">
        <sequence first="{DECLTYPE}">
         <sequence first="{DECLTYPE}">
          <sequence first="{DECLTYPE}">
           <action first="{DECLTYPE}">
            <token first="{DECLTYPE}" name="DECLTYPE"/>
           </action>
           <action first="{LPAREN}">
            <token first="{LPAREN}" name="LPAREN"/>
           </action>
          </sequence>
          <action first="{AUTO}">
           <token first="{AUTO}" name="AUTO"/>
          </action>
         </sequence>
         <action first="{RPAREN}">
          <token first="{RPAREN}" name="RPAREN"/>
         </action>
        </sequence>
       </group>
      </action>
     </group>
    </choice>
   </group>
  </rule>
 </grammar>
</parserFile>
