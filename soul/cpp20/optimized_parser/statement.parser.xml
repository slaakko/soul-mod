<parserFile>
 <grammar name="StatementParser">
  <rule first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASM, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, BREAK, CASE, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CONTINUE, CO_AWAIT, CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DIV, DIV_ASSIGN, DO, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FOR, FRIEND, GEQ, GOTO, ID, IF, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NAMESPACE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RETURN, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_ASSERT, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, SWITCH, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TRY, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, WHILE, XOR, XOR_ASSIGN}" name="Statement">
   <choice first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASM, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, BREAK, CASE, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CONTINUE, CO_AWAIT, CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DIV, DIV_ASSIGN, DO, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FOR, FRIEND, GEQ, GOTO, ID, IF, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NAMESPACE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RETURN, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_ASSERT, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, SWITCH, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TRY, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, WHILE, XOR, XOR_ASSIGN}">
    <choice first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, BREAK, CASE, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CONTINUE, CO_AWAIT, CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DIV, DIV_ASSIGN, DO, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, FOR, GEQ, GOTO, ID, IF, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RETURN, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, SWITCH, TEMPLATE, THIS, THROW, TILDE, TRUE, TRY, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, WHILE, XOR, XOR_ASSIGN}">
     <choice first="{#, ALIGNAS, BREAK, CASE, CONTINUE, CO_RETURN, DEFAULT, DO, FOR, GOTO, ID, IF, LBRACE, LBRACKET, RETURN, SWITCH, TRY, WHILE}">
      <choice first="{#, ALIGNAS, BREAK, CASE, CONTINUE, CO_RETURN, DEFAULT, DO, FOR, GOTO, ID, IF, LBRACE, LBRACKET, RETURN, SWITCH, WHILE}">
       <choice first="{#, ALIGNAS, CASE, DEFAULT, DO, FOR, ID, IF, LBRACE, LBRACKET, SWITCH, WHILE}">
        <choice first="{#, ALIGNAS, CASE, DEFAULT, ID, IF, LBRACE, LBRACKET, SWITCH}">
         <choice first="{#, ALIGNAS, CASE, DEFAULT, ID, LBRACE, LBRACKET}">
          <action first="{#, ALIGNAS, CASE, DEFAULT, ID, LBRACKET}">
           <nonterminal first="{#, ALIGNAS, CASE, DEFAULT, ID, LBRACKET}" ruleName="LabeledStatement"/>
          </action>
          <action first="{#, ALIGNAS, LBRACE, LBRACKET}">
           <nonterminal first="{#, ALIGNAS, LBRACE, LBRACKET}" ruleName="CompoundStatement"/>
          </action>
         </choice>
         <action first="{#, ALIGNAS, IF, LBRACKET, SWITCH}">
          <nonterminal first="{#, ALIGNAS, IF, LBRACKET, SWITCH}" ruleName="SelectionStatement"/>
         </action>
        </choice>
        <action first="{#, ALIGNAS, DO, FOR, LBRACKET, WHILE}">
         <nonterminal first="{#, ALIGNAS, DO, FOR, LBRACKET, WHILE}" ruleName="IterationStatement"/>
        </action>
       </choice>
       <action first="{#, ALIGNAS, BREAK, CONTINUE, CO_RETURN, GOTO, LBRACKET, RETURN}">
        <nonterminal first="{#, ALIGNAS, BREAK, CONTINUE, CO_RETURN, GOTO, LBRACKET, RETURN}" ruleName="JumpStatement"/>
       </action>
      </choice>
      <action first="{#, ALIGNAS, LBRACKET, TRY}">
       <nonterminal first="{#, ALIGNAS, LBRACKET, TRY}" ruleName="TryStatement"/>
      </action>
     </choice>
     <action first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}">
      <nonterminal first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}" ruleName="ExpressionStatement"/>
     </action>
    </choice>
    <action first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
     <nonterminal first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}" ruleName="DeclarationStatement"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, ALIGNAS, CASE, DEFAULT, ID, LBRACKET}" name="LabeledStatement">
   <sequence first="{#, ALIGNAS, CASE, DEFAULT, ID, LBRACKET}">
    <optional first="{#, ALIGNAS, LBRACKET}">
     <group first="{ALIGNAS, LBRACKET}">
      <action first="{ALIGNAS, LBRACKET}">
       <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
      </action>
     </group>
    </optional>
    <group first="{CASE, DEFAULT, ID}">
     <choice first="{CASE, DEFAULT, ID}">
      <choice first="{CASE, ID}">
       <sequence first="{ID}">
        <sequence first="{ID}">
         <action first="{ID}">
          <token first="{ID}" name="ID"/>
         </action>
         <action first="{COLON}">
          <token first="{COLON}" name="COLON"/>
         </action>
        </sequence>
        <action first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASM, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, BREAK, CASE, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CONTINUE, CO_AWAIT, CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DIV, DIV_ASSIGN, DO, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FOR, FRIEND, GEQ, GOTO, ID, IF, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NAMESPACE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RETURN, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_ASSERT, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, SWITCH, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TRY, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, WHILE, XOR, XOR_ASSIGN}">
         <nonterminal first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASM, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, BREAK, CASE, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CONTINUE, CO_AWAIT, CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DIV, DIV_ASSIGN, DO, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FOR, FRIEND, GEQ, GOTO, ID, IF, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NAMESPACE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RETURN, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_ASSERT, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, SWITCH, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TRY, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, WHILE, XOR, XOR_ASSIGN}" ruleName="Statement"/>
        </action>
       </sequence>
       <sequence first="{CASE}">
        <sequence first="{CASE}">
         <sequence first="{CASE}">
          <action first="{CASE}">
           <token first="{CASE}" name="CASE"/>
          </action>
          <nonterminal first="{#, ADD_ASSIGN, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}" ruleName="ConstantExpression"/>
         </sequence>
         <action first="{COLON}">
          <token first="{COLON}" name="COLON"/>
         </action>
        </sequence>
        <action first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASM, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, BREAK, CASE, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CONTINUE, CO_AWAIT, CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DIV, DIV_ASSIGN, DO, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FOR, FRIEND, GEQ, GOTO, ID, IF, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NAMESPACE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RETURN, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_ASSERT, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, SWITCH, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TRY, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, WHILE, XOR, XOR_ASSIGN}">
         <nonterminal first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASM, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, BREAK, CASE, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CONTINUE, CO_AWAIT, CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DIV, DIV_ASSIGN, DO, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FOR, FRIEND, GEQ, GOTO, ID, IF, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NAMESPACE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RETURN, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_ASSERT, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, SWITCH, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TRY, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, WHILE, XOR, XOR_ASSIGN}" ruleName="Statement"/>
        </action>
       </sequence>
      </choice>
      <sequence first="{DEFAULT}">
       <sequence first="{DEFAULT}">
        <action first="{DEFAULT}">
         <token first="{DEFAULT}" name="DEFAULT"/>
        </action>
        <action first="{COLON}">
         <token first="{COLON}" name="COLON"/>
        </action>
       </sequence>
       <action first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASM, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, BREAK, CASE, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CONTINUE, CO_AWAIT, CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DIV, DIV_ASSIGN, DO, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FOR, FRIEND, GEQ, GOTO, ID, IF, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NAMESPACE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RETURN, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_ASSERT, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, SWITCH, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TRY, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, WHILE, XOR, XOR_ASSIGN}">
        <nonterminal first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASM, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, BREAK, CASE, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CONTINUE, CO_AWAIT, CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DIV, DIV_ASSIGN, DO, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FOR, FRIEND, GEQ, GOTO, ID, IF, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NAMESPACE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RETURN, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_ASSERT, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, SWITCH, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TRY, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, WHILE, XOR, XOR_ASSIGN}" ruleName="Statement"/>
       </action>
      </sequence>
     </choice>
    </group>
   </sequence>
  </rule>
  <rule first="{#, ALIGNAS, LBRACE, LBRACKET}" name="CompoundStatementUnguarded">
   <sequence first="{#, ALIGNAS, LBRACE, LBRACKET}">
    <optional first="{#, ALIGNAS, LBRACKET}">
     <group first="{ALIGNAS, LBRACKET}">
      <action first="{ALIGNAS, LBRACKET}">
       <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
      </action>
     </group>
    </optional>
    <action first="{LBRACE}">
     <group first="{LBRACE}">
      <sequence first="{LBRACE}">
       <sequence first="{LBRACE}">
        <action first="{LBRACE}">
         <token first="{LBRACE}" name="LBRACE"/>
        </action>
        <kleene first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASM, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, BREAK, CASE, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CONTINUE, CO_AWAIT, CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DIV, DIV_ASSIGN, DO, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FOR, FRIEND, GEQ, GOTO, ID, IF, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NAMESPACE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RETURN, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_ASSERT, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, SWITCH, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TRY, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, WHILE, XOR, XOR_ASSIGN}">
         <group first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASM, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, BREAK, CASE, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CONTINUE, CO_AWAIT, CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DIV, DIV_ASSIGN, DO, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FOR, FRIEND, GEQ, GOTO, ID, IF, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NAMESPACE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RETURN, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_ASSERT, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, SWITCH, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TRY, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, WHILE, XOR, XOR_ASSIGN}">
          <choice first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASM, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, BREAK, CASE, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CONTINUE, CO_AWAIT, CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DIV, DIV_ASSIGN, DO, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FOR, FRIEND, GEQ, GOTO, ID, IF, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NAMESPACE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RETURN, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_ASSERT, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, SWITCH, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TRY, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, WHILE, XOR, XOR_ASSIGN}">
           <choice first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASM, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, BREAK, CASE, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CONTINUE, CO_AWAIT, CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DIV, DIV_ASSIGN, DO, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FOR, FRIEND, GEQ, GOTO, ID, IF, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NAMESPACE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RETURN, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_ASSERT, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, SWITCH, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TRY, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, WHILE, XOR, XOR_ASSIGN}">
            <action first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASM, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, BREAK, CASE, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CONTINUE, CO_AWAIT, CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DIV, DIV_ASSIGN, DO, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FOR, FRIEND, GEQ, GOTO, ID, IF, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NAMESPACE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RETURN, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_ASSERT, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, SWITCH, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TRY, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, WHILE, XOR, XOR_ASSIGN}">
             <nonterminal first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASM, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, BREAK, CASE, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CONTINUE, CO_AWAIT, CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DIV, DIV_ASSIGN, DO, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FOR, FRIEND, GEQ, GOTO, ID, IF, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NAMESPACE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RETURN, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_ASSERT, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, SWITCH, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TRY, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, WHILE, XOR, XOR_ASSIGN}" ruleName="Statement"/>
            </action>
            <action first="{RBRACE}">
             <nonterminal first="{RBRACE}" ruleName="RBraceNext"/>
            </action>
           </choice>
           <action first="{#}">
            <empty first="{#}"/>
           </action>
          </choice>
         </group>
        </kleene>
       </sequence>
       <action first="{RBRACE}">
        <token first="{RBRACE}" name="RBRACE"/>
       </action>
      </sequence>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{RBRACE}" name="RBraceNext">
   <lookahead first="{RBRACE}">
    <group first="{RBRACE}">
     <token first="{RBRACE}" name="RBRACE"/>
    </group>
   </lookahead>
  </rule>
  <rule first="{#, ALIGNAS, LBRACKET}" name="CompoundStatementGuarded">
   <action first="{#, ALIGNAS, LBRACKET}">
    <group first="{#, ALIGNAS, LBRACKET}">
     <choice first="{#, ALIGNAS, LBRACKET}">
      <action first="{ALIGNAS, LBRACKET}">
       <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
      </action>
      <action first="{#}">
       <empty first="{#}"/>
      </action>
     </choice>
    </group>
   </action>
  </rule>
  <rule first="{#, LBRACE}" name="CompoundStatementSaved">
   <choice first="{#, LBRACE}">
    <sequence first="{#, LBRACE}">
     <action first="{#}">
      <empty first="{#}"/>
     </action>
     <group first="{LBRACE}">
      <sequence first="{LBRACE}">
       <sequence first="{LBRACE}">
        <action first="{LBRACE}">
         <token first="{LBRACE}" name="LBRACE"/>
        </action>
        <kleene first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASM, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, BREAK, CASE, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CONTINUE, CO_AWAIT, CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DIV, DIV_ASSIGN, DO, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FOR, FRIEND, GEQ, GOTO, ID, IF, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NAMESPACE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RETURN, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_ASSERT, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, SWITCH, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TRY, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, WHILE, XOR, XOR_ASSIGN}">
         <group first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASM, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, BREAK, CASE, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CONTINUE, CO_AWAIT, CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DIV, DIV_ASSIGN, DO, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FOR, FRIEND, GEQ, GOTO, ID, IF, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NAMESPACE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RETURN, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_ASSERT, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, SWITCH, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TRY, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, WHILE, XOR, XOR_ASSIGN}">
          <action first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASM, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, BREAK, CASE, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CONTINUE, CO_AWAIT, CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DIV, DIV_ASSIGN, DO, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FOR, FRIEND, GEQ, GOTO, ID, IF, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NAMESPACE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RETURN, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_ASSERT, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, SWITCH, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TRY, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, WHILE, XOR, XOR_ASSIGN}">
           <nonterminal first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASM, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, BREAK, CASE, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CONTINUE, CO_AWAIT, CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DIV, DIV_ASSIGN, DO, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FOR, FRIEND, GEQ, GOTO, ID, IF, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NAMESPACE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RETURN, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_ASSERT, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, SWITCH, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TRY, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, WHILE, XOR, XOR_ASSIGN}" ruleName="Statement"/>
          </action>
         </group>
        </kleene>
       </sequence>
       <action first="{RBRACE}">
        <token first="{RBRACE}" name="RBRACE"/>
       </action>
      </sequence>
     </group>
    </sequence>
    <action first="{#}">
     <empty first="{#}"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, ALIGNAS, LBRACE, LBRACKET}" name="CompoundStatement">
   <group first="{#, ALIGNAS, LBRACE, LBRACKET}">
    <choice first="{#, ALIGNAS, LBRACE, LBRACKET}">
     <choice first="{#, ALIGNAS, LBRACE, LBRACKET}">
      <sequence first="{#, ALIGNAS, LBRACKET}">
       <nonterminal first="{#}" ruleName="MemberFunctionTemplateGuard"/>
       <action first="{#, ALIGNAS, LBRACKET}">
        <nonterminal first="{#, ALIGNAS, LBRACKET}" ruleName="CompoundStatementGuarded"/>
       </action>
      </sequence>
      <sequence first="{#, LBRACE}">
       <action first="{#}">
        <nonterminal first="{#}" ruleName="SavedMemberFunctionBodyGuard"/>
       </action>
       <action first="{#, LBRACE}">
        <nonterminal first="{#, LBRACE}" ruleName="CompoundStatementSaved"/>
       </action>
      </sequence>
     </choice>
     <action first="{#, ALIGNAS, LBRACE, LBRACKET}">
      <nonterminal first="{#, ALIGNAS, LBRACE, LBRACKET}" ruleName="CompoundStatementUnguarded"/>
     </action>
    </choice>
   </group>
  </rule>
  <rule first="{#, ALIGNAS, IF, LBRACKET, SWITCH}" name="SelectionStatement">
   <choice first="{#, ALIGNAS, IF, LBRACKET, SWITCH}">
    <action first="{#, ALIGNAS, IF, LBRACKET}">
     <nonterminal first="{#, ALIGNAS, IF, LBRACKET}" ruleName="IfStatement"/>
    </action>
    <action first="{#, ALIGNAS, LBRACKET, SWITCH}">
     <nonterminal first="{#, ALIGNAS, LBRACKET, SWITCH}" ruleName="SwitchStatement"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, ALIGNAS, IF, LBRACKET}" name="IfStatement">
   <sequence first="{#, ALIGNAS, IF, LBRACKET}">
    <optional first="{#, ALIGNAS, LBRACKET}">
     <group first="{ALIGNAS, LBRACKET}">
      <action first="{ALIGNAS, LBRACKET}">
       <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
      </action>
     </group>
    </optional>
    <action first="{IF}">
     <group first="{IF}">
      <sequence first="{IF}">
       <sequence first="{IF}">
        <sequence first="{IF}">
         <sequence first="{IF}">
          <sequence first="{IF}">
           <sequence first="{IF}">
            <sequence first="{IF}">
             <action first="{IF}">
              <token first="{IF}" name="IF"/>
             </action>
             <optional first="{#, CONSTEXPR}">
              <group first="{CONSTEXPR}">
               <action first="{CONSTEXPR}">
                <token first="{CONSTEXPR}" name="CONSTEXPR"/>
               </action>
              </group>
             </optional>
            </sequence>
            <action first="{LPAREN}">
             <token first="{LPAREN}" name="LPAREN"/>
            </action>
           </sequence>
           <optional first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FRIEND, GEQ, ID, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}">
            <nonterminal first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FRIEND, GEQ, ID, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}" ruleName="InitStatement"/>
           </optional>
          </sequence>
          <nonterminal first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FRIEND, GEQ, ID, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}" ruleName="Condition"/>
         </sequence>
         <action first="{RPAREN}">
          <token first="{RPAREN}" name="RPAREN"/>
         </action>
        </sequence>
        <nonterminal first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASM, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, BREAK, CASE, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CONTINUE, CO_AWAIT, CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DIV, DIV_ASSIGN, DO, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FOR, FRIEND, GEQ, GOTO, ID, IF, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NAMESPACE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RETURN, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_ASSERT, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, SWITCH, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TRY, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, WHILE, XOR, XOR_ASSIGN}" ruleName="Statement"/>
       </sequence>
       <optional first="{#, ELSE}">
        <group first="{ELSE}">
         <sequence first="{ELSE}">
          <action first="{ELSE}">
           <token first="{ELSE}" name="ELSE"/>
          </action>
          <nonterminal first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASM, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, BREAK, CASE, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CONTINUE, CO_AWAIT, CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DIV, DIV_ASSIGN, DO, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FOR, FRIEND, GEQ, GOTO, ID, IF, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NAMESPACE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RETURN, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_ASSERT, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, SWITCH, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TRY, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, WHILE, XOR, XOR_ASSIGN}" ruleName="Statement"/>
         </sequence>
        </group>
       </optional>
      </sequence>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{#, ALIGNAS, LBRACKET, SWITCH}" name="SwitchStatement">
   <sequence first="{#, ALIGNAS, LBRACKET, SWITCH}">
    <optional first="{#, ALIGNAS, LBRACKET}">
     <group first="{ALIGNAS, LBRACKET}">
      <action first="{ALIGNAS, LBRACKET}">
       <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
      </action>
     </group>
    </optional>
    <action first="{SWITCH}">
     <group first="{SWITCH}">
      <sequence first="{SWITCH}">
       <sequence first="{SWITCH}">
        <sequence first="{SWITCH}">
         <sequence first="{SWITCH}">
          <sequence first="{SWITCH}">
           <action first="{SWITCH}">
            <token first="{SWITCH}" name="SWITCH"/>
           </action>
           <action first="{LPAREN}">
            <token first="{LPAREN}" name="LPAREN"/>
           </action>
          </sequence>
          <optional first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FRIEND, GEQ, ID, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}">
           <nonterminal first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FRIEND, GEQ, ID, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}" ruleName="InitStatement"/>
          </optional>
         </sequence>
         <nonterminal first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FRIEND, GEQ, ID, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}" ruleName="Condition"/>
        </sequence>
        <action first="{RPAREN}">
         <token first="{RPAREN}" name="RPAREN"/>
        </action>
       </sequence>
       <nonterminal first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASM, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, BREAK, CASE, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CONTINUE, CO_AWAIT, CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DIV, DIV_ASSIGN, DO, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FOR, FRIEND, GEQ, GOTO, ID, IF, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NAMESPACE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RETURN, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_ASSERT, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, SWITCH, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TRY, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, WHILE, XOR, XOR_ASSIGN}" ruleName="Statement"/>
      </sequence>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{#, ALIGNAS, DO, FOR, LBRACKET, WHILE}" name="IterationStatement">
   <choice first="{#, ALIGNAS, DO, FOR, LBRACKET, WHILE}">
    <choice first="{#, ALIGNAS, DO, FOR, LBRACKET, WHILE}">
     <choice first="{#, ALIGNAS, DO, LBRACKET, WHILE}">
      <action first="{#, ALIGNAS, LBRACKET, WHILE}">
       <nonterminal first="{#, ALIGNAS, LBRACKET, WHILE}" ruleName="WhileStatement"/>
      </action>
      <action first="{#, ALIGNAS, DO, LBRACKET}">
       <nonterminal first="{#, ALIGNAS, DO, LBRACKET}" ruleName="DoStatement"/>
      </action>
     </choice>
     <action first="{#, ALIGNAS, FOR, LBRACKET}">
      <nonterminal first="{#, ALIGNAS, FOR, LBRACKET}" ruleName="RangeForStatement"/>
     </action>
    </choice>
    <action first="{#, ALIGNAS, FOR, LBRACKET}">
     <nonterminal first="{#, ALIGNAS, FOR, LBRACKET}" ruleName="ForStatement"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, ALIGNAS, LBRACKET, WHILE}" name="WhileStatement">
   <sequence first="{#, ALIGNAS, LBRACKET, WHILE}">
    <optional first="{#, ALIGNAS, LBRACKET}">
     <group first="{ALIGNAS, LBRACKET}">
      <action first="{ALIGNAS, LBRACKET}">
       <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
      </action>
     </group>
    </optional>
    <action first="{WHILE}">
     <group first="{WHILE}">
      <sequence first="{WHILE}">
       <sequence first="{WHILE}">
        <sequence first="{WHILE}">
         <sequence first="{WHILE}">
          <action first="{WHILE}">
           <token first="{WHILE}" name="WHILE"/>
          </action>
          <action first="{LPAREN}">
           <token first="{LPAREN}" name="LPAREN"/>
          </action>
         </sequence>
         <nonterminal first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FRIEND, GEQ, ID, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}" ruleName="Condition"/>
        </sequence>
        <action first="{RPAREN}">
         <token first="{RPAREN}" name="RPAREN"/>
        </action>
       </sequence>
       <nonterminal first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASM, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, BREAK, CASE, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CONTINUE, CO_AWAIT, CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DIV, DIV_ASSIGN, DO, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FOR, FRIEND, GEQ, GOTO, ID, IF, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NAMESPACE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RETURN, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_ASSERT, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, SWITCH, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TRY, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, WHILE, XOR, XOR_ASSIGN}" ruleName="Statement"/>
      </sequence>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{#, ALIGNAS, DO, LBRACKET}" name="DoStatement">
   <sequence first="{#, ALIGNAS, DO, LBRACKET}">
    <optional first="{#, ALIGNAS, LBRACKET}">
     <group first="{ALIGNAS, LBRACKET}">
      <action first="{ALIGNAS, LBRACKET}">
       <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
      </action>
     </group>
    </optional>
    <action first="{DO}">
     <group first="{DO}">
      <sequence first="{DO}">
       <sequence first="{DO}">
        <sequence first="{DO}">
         <sequence first="{DO}">
          <sequence first="{DO}">
           <sequence first="{DO}">
            <action first="{DO}">
             <token first="{DO}" name="DO"/>
            </action>
            <nonterminal first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASM, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, BREAK, CASE, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CONTINUE, CO_AWAIT, CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DIV, DIV_ASSIGN, DO, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FOR, FRIEND, GEQ, GOTO, ID, IF, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NAMESPACE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RETURN, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_ASSERT, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, SWITCH, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TRY, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, WHILE, XOR, XOR_ASSIGN}" ruleName="Statement"/>
           </sequence>
           <action first="{WHILE}">
            <token first="{WHILE}" name="WHILE"/>
           </action>
          </sequence>
          <action first="{LPAREN}">
           <token first="{LPAREN}" name="LPAREN"/>
          </action>
         </sequence>
         <nonterminal first="{#, ADD_ASSIGN, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}" ruleName="Expression"/>
        </sequence>
        <action first="{RPAREN}">
         <token first="{RPAREN}" name="RPAREN"/>
        </action>
       </sequence>
       <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
      </sequence>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{#, ALIGNAS, FOR, LBRACKET}" name="RangeForStatement">
   <sequence first="{#, ALIGNAS, FOR, LBRACKET}">
    <optional first="{#, ALIGNAS, LBRACKET}">
     <group first="{ALIGNAS, LBRACKET}">
      <action first="{ALIGNAS, LBRACKET}">
       <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
      </action>
     </group>
    </optional>
    <action first="{FOR}">
     <group first="{FOR}">
      <sequence first="{FOR}">
       <sequence first="{FOR}">
        <sequence first="{FOR}">
         <sequence first="{FOR}">
          <sequence first="{FOR}">
           <sequence first="{FOR}">
            <sequence first="{FOR}">
             <action first="{FOR}">
              <token first="{FOR}" name="FOR"/>
             </action>
             <action first="{LPAREN}">
              <token first="{LPAREN}" name="LPAREN"/>
             </action>
            </sequence>
            <optional first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FRIEND, GEQ, ID, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}">
             <nonterminal first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FRIEND, GEQ, ID, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}" ruleName="InitStatement"/>
            </optional>
           </sequence>
           <nonterminal first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, RBRACKET, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}" ruleName="ForRangeDeclaration"/>
          </sequence>
          <action first="{COLON}">
           <token first="{COLON}" name="COLON"/>
          </action>
         </sequence>
         <nonterminal first="{#, ADD_ASSIGN, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}" ruleName="ForRangeInitializer"/>
        </sequence>
        <action first="{RPAREN}">
         <token first="{RPAREN}" name="RPAREN"/>
        </action>
       </sequence>
       <nonterminal first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASM, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, BREAK, CASE, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CONTINUE, CO_AWAIT, CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DIV, DIV_ASSIGN, DO, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FOR, FRIEND, GEQ, GOTO, ID, IF, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NAMESPACE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RETURN, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_ASSERT, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, SWITCH, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TRY, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, WHILE, XOR, XOR_ASSIGN}" ruleName="Statement"/>
      </sequence>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, RBRACKET, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}" name="ForRangeDeclaration">
   <sequence first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, RBRACKET, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
    <optional first="{#, ALIGNAS, LBRACKET}">
     <group first="{ALIGNAS, LBRACKET}">
      <action first="{ALIGNAS, LBRACKET}">
       <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
      </action>
     </group>
    </optional>
    <action first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, RBRACKET, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
     <group first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, RBRACKET, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
      <sequence first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, RBRACKET, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
       <action first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
        <nonterminal first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}" ruleName="DeclSpecifierSeq"/>
       </action>
       <group first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, COLON_COLON, CONST, ELLIPSIS, ID, LBRACKET, LPAREN, OPERATOR, RBRACKET, STAR, TEMPLATE, TILDE, VOLATILE}">
        <choice first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, COLON_COLON, CONST, ELLIPSIS, ID, LBRACKET, LPAREN, OPERATOR, RBRACKET, STAR, TEMPLATE, TILDE, VOLATILE}">
         <action first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, COLON_COLON, CONST, ELLIPSIS, ID, LBRACKET, LPAREN, OPERATOR, STAR, TEMPLATE, TILDE, VOLATILE}">
          <nonterminal first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, COLON_COLON, CONST, ELLIPSIS, ID, LBRACKET, LPAREN, OPERATOR, STAR, TEMPLATE, TILDE, VOLATILE}" ruleName="Declarator"/>
         </action>
         <action first="{#, AMP, AMP_AMP, ID, LBRACKET, RBRACKET}">
          <group first="{#, AMP, AMP_AMP, ID, LBRACKET, RBRACKET}">
           <sequence first="{#, AMP, AMP_AMP, ID, LBRACKET, RBRACKET}">
            <sequence first="{#, AMP, AMP_AMP, ID, LBRACKET}">
             <sequence first="{#, AMP, AMP_AMP, LBRACKET}">
              <optional first="{#, AMP, AMP_AMP}">
               <nonterminal first="{AMP, AMP_AMP}" ruleName="RefQualifier"/>
              </optional>
              <action first="{LBRACKET}">
               <token first="{LBRACKET}" name="LBRACKET"/>
              </action>
             </sequence>
             <nonterminal first="{ID}" ruleName="IdentifierList"/>
            </sequence>
            <action first="{RBRACKET}">
             <token first="{RBRACKET}" name="RBRACKET"/>
            </action>
           </sequence>
          </group>
         </action>
        </choice>
       </group>
      </sequence>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{#, ADD_ASSIGN, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}" name="ForRangeInitializer">
   <action first="{#, ADD_ASSIGN, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}">
    <nonterminal first="{#, ADD_ASSIGN, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}" ruleName="ExprOrBracedInitList"/>
   </action>
  </rule>
  <rule first="{#, ALIGNAS, FOR, LBRACKET}" name="ForStatement">
   <sequence first="{#, ALIGNAS, FOR, LBRACKET}">
    <optional first="{#, ALIGNAS, LBRACKET}">
     <group first="{ALIGNAS, LBRACKET}">
      <action first="{ALIGNAS, LBRACKET}">
       <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
      </action>
     </group>
    </optional>
    <action first="{FOR}">
     <group first="{FOR}">
      <sequence first="{FOR}">
       <sequence first="{FOR}">
        <sequence first="{FOR}">
         <sequence first="{FOR}">
          <sequence first="{FOR}">
           <sequence first="{FOR}">
            <sequence first="{FOR}">
             <action first="{FOR}">
              <token first="{FOR}" name="FOR"/>
             </action>
             <action first="{LPAREN}">
              <token first="{LPAREN}" name="LPAREN"/>
             </action>
            </sequence>
            <nonterminal first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FRIEND, GEQ, ID, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}" ruleName="InitStatement"/>
           </sequence>
           <optional first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FRIEND, GEQ, ID, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}">
            <nonterminal first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FRIEND, GEQ, ID, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}" ruleName="Condition"/>
           </optional>
          </sequence>
          <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
         </sequence>
         <optional first="{#, ADD_ASSIGN, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}">
          <nonterminal first="{#, ADD_ASSIGN, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}" ruleName="Expression"/>
         </optional>
        </sequence>
        <action first="{RPAREN}">
         <token first="{RPAREN}" name="RPAREN"/>
        </action>
       </sequence>
       <nonterminal first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASM, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, BREAK, CASE, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CONTINUE, CO_AWAIT, CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DIV, DIV_ASSIGN, DO, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FOR, FRIEND, GEQ, GOTO, ID, IF, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NAMESPACE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RETURN, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_ASSERT, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, SWITCH, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TRY, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T, WHILE, XOR, XOR_ASSIGN}" ruleName="Statement"/>
      </sequence>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{#, ALIGNAS, BREAK, CONTINUE, CO_RETURN, GOTO, LBRACKET, RETURN}" name="JumpStatement">
   <choice first="{#, ALIGNAS, BREAK, CONTINUE, CO_RETURN, GOTO, LBRACKET, RETURN}">
    <choice first="{#, ALIGNAS, BREAK, CONTINUE, CO_RETURN, LBRACKET, RETURN}">
     <choice first="{#, ALIGNAS, BREAK, CONTINUE, LBRACKET, RETURN}">
      <choice first="{#, ALIGNAS, BREAK, CONTINUE, LBRACKET}">
       <action first="{#, ALIGNAS, BREAK, LBRACKET}">
        <nonterminal first="{#, ALIGNAS, BREAK, LBRACKET}" ruleName="BreakStatement"/>
       </action>
       <action first="{#, ALIGNAS, CONTINUE, LBRACKET}">
        <nonterminal first="{#, ALIGNAS, CONTINUE, LBRACKET}" ruleName="ContinueStatement"/>
       </action>
      </choice>
      <action first="{#, ALIGNAS, LBRACKET, RETURN}">
       <nonterminal first="{#, ALIGNAS, LBRACKET, RETURN}" ruleName="ReturnStatement"/>
      </action>
     </choice>
     <action first="{#, ALIGNAS, CO_RETURN, LBRACKET}">
      <nonterminal first="{#, ALIGNAS, CO_RETURN, LBRACKET}" ruleName="CoroutineReturnStatement"/>
     </action>
    </choice>
    <action first="{#, ALIGNAS, GOTO, LBRACKET}">
     <nonterminal first="{#, ALIGNAS, GOTO, LBRACKET}" ruleName="GotoStatement"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, ALIGNAS, BREAK, LBRACKET}" name="BreakStatement">
   <sequence first="{#, ALIGNAS, BREAK, LBRACKET}">
    <optional first="{#, ALIGNAS, LBRACKET}">
     <group first="{ALIGNAS, LBRACKET}">
      <action first="{ALIGNAS, LBRACKET}">
       <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
      </action>
     </group>
    </optional>
    <action first="{BREAK}">
     <group first="{BREAK}">
      <sequence first="{BREAK}">
       <action first="{BREAK}">
        <token first="{BREAK}" name="BREAK"/>
       </action>
       <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
      </sequence>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{#, ALIGNAS, CONTINUE, LBRACKET}" name="ContinueStatement">
   <sequence first="{#, ALIGNAS, CONTINUE, LBRACKET}">
    <optional first="{#, ALIGNAS, LBRACKET}">
     <group first="{ALIGNAS, LBRACKET}">
      <action first="{ALIGNAS, LBRACKET}">
       <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
      </action>
     </group>
    </optional>
    <action first="{CONTINUE}">
     <group first="{CONTINUE}">
      <sequence first="{CONTINUE}">
       <action first="{CONTINUE}">
        <token first="{CONTINUE}" name="CONTINUE"/>
       </action>
       <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
      </sequence>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{#, ALIGNAS, LBRACKET, RETURN}" name="ReturnStatement">
   <sequence first="{#, ALIGNAS, LBRACKET, RETURN}">
    <optional first="{#, ALIGNAS, LBRACKET}">
     <group first="{ALIGNAS, LBRACKET}">
      <action first="{ALIGNAS, LBRACKET}">
       <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
      </action>
     </group>
    </optional>
    <action first="{RETURN}">
     <group first="{RETURN}">
      <sequence first="{RETURN}">
       <sequence first="{RETURN}">
        <action first="{RETURN}">
         <token first="{RETURN}" name="RETURN"/>
        </action>
        <optional first="{#, ADD_ASSIGN, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}">
         <nonterminal first="{#, ADD_ASSIGN, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}" ruleName="ExprOrBracedInitList"/>
        </optional>
       </sequence>
       <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
      </sequence>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{#, ALIGNAS, CO_RETURN, LBRACKET}" name="CoroutineReturnStatement">
   <sequence first="{#, ALIGNAS, CO_RETURN, LBRACKET}">
    <optional first="{#, ALIGNAS, LBRACKET}">
     <group first="{ALIGNAS, LBRACKET}">
      <action first="{ALIGNAS, LBRACKET}">
       <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
      </action>
     </group>
    </optional>
    <action first="{CO_RETURN}">
     <group first="{CO_RETURN}">
      <sequence first="{CO_RETURN}">
       <sequence first="{CO_RETURN}">
        <action first="{CO_RETURN}">
         <token first="{CO_RETURN}" name="CO_RETURN"/>
        </action>
        <optional first="{#, ADD_ASSIGN, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}">
         <nonterminal first="{#, ADD_ASSIGN, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}" ruleName="ExprOrBracedInitList"/>
        </optional>
       </sequence>
       <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
      </sequence>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{#, ALIGNAS, GOTO, LBRACKET}" name="GotoStatement">
   <sequence first="{#, ALIGNAS, GOTO, LBRACKET}">
    <optional first="{#, ALIGNAS, LBRACKET}">
     <group first="{ALIGNAS, LBRACKET}">
      <action first="{ALIGNAS, LBRACKET}">
       <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
      </action>
     </group>
    </optional>
    <action first="{GOTO}">
     <group first="{GOTO}">
      <sequence first="{GOTO}">
       <sequence first="{GOTO}">
        <action first="{GOTO}">
         <token first="{GOTO}" name="GOTO"/>
        </action>
        <nonterminal first="{ID}" ruleName="Identifier"/>
       </sequence>
       <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
      </sequence>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{#, ALIGNAS, LBRACKET, TRY}" name="TryStatement">
   <sequence first="{#, ALIGNAS, LBRACKET, TRY}">
    <optional first="{#, ALIGNAS, LBRACKET}">
     <group first="{ALIGNAS, LBRACKET}">
      <action first="{ALIGNAS, LBRACKET}">
       <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
      </action>
     </group>
    </optional>
    <action first="{TRY}">
     <group first="{TRY}">
      <sequence first="{TRY}">
       <sequence first="{TRY}">
        <action first="{TRY}">
         <token first="{TRY}" name="TRY"/>
        </action>
        <nonterminal first="{#, ALIGNAS, LBRACE, LBRACKET}" ruleName="CompoundStatement"/>
       </sequence>
       <nonterminal first="{CATCH}" ruleName="HandlerSeq"/>
      </sequence>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{CATCH}" name="HandlerSeq">
   <action first="{CATCH}">
    <group first="{CATCH}">
     <sequence first="{CATCH}">
      <action first="{CATCH}">
       <nonterminal first="{CATCH}" ruleName="Handler"/>
      </action>
      <kleene first="{#, CATCH}">
       <group first="{CATCH}">
        <action first="{CATCH}">
         <nonterminal first="{CATCH}" ruleName="Handler"/>
        </action>
       </group>
      </kleene>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{CATCH}" name="Handler">
   <action first="{CATCH}">
    <group first="{CATCH}">
     <sequence first="{CATCH}">
      <sequence first="{CATCH}">
       <sequence first="{CATCH}">
        <sequence first="{CATCH}">
         <action first="{CATCH}">
          <token first="{CATCH}" name="CATCH"/>
         </action>
         <action first="{LPAREN}">
          <token first="{LPAREN}" name="LPAREN"/>
         </action>
        </sequence>
        <nonterminal first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, OPERATOR, SHORT, SIGNED, STAR, STRUCT, TEMPLATE, TILDE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}" ruleName="ExceptionDeclaration"/>
       </sequence>
       <action first="{RPAREN}">
        <token first="{RPAREN}" name="RPAREN"/>
       </action>
      </sequence>
      <nonterminal first="{#, ALIGNAS, LBRACE, LBRACKET}" ruleName="CompoundStatement"/>
     </sequence>
    </group>
   </action>
  </rule>
  <rule first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, OPERATOR, SHORT, SIGNED, STAR, STRUCT, TEMPLATE, TILDE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}" name="ExceptionDeclaration">
   <sequence first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, OPERATOR, SHORT, SIGNED, STAR, STRUCT, TEMPLATE, TILDE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
    <optional first="{#, ALIGNAS, LBRACKET}">
     <group first="{ALIGNAS, LBRACKET}">
      <action first="{ALIGNAS, LBRACKET}">
       <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
      </action>
     </group>
    </optional>
    <action first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, OPERATOR, SHORT, SIGNED, STAR, STRUCT, TEMPLATE, TILDE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
     <group first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, OPERATOR, SHORT, SIGNED, STAR, STRUCT, TEMPLATE, TILDE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
      <choice first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, OPERATOR, SHORT, SIGNED, STAR, STRUCT, TEMPLATE, TILDE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
       <sequence first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, LPAREN, OPERATOR, SHORT, SIGNED, STAR, STRUCT, TEMPLATE, TILDE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
        <action first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}">
         <nonterminal first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, DECLTYPE, DOUBLE, ENUM, FLOAT, ID, INT, LANGLE, LBRACKET, LONG, SHORT, SIGNED, STRUCT, TEMPLATE, TYPENAME, UNION, UNSIGNED, VOID, VOLATILE, WCHAR_T}" ruleName="TypeSpecifierSeq"/>
        </action>
        <group first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, COLON_COLON, CONST, ELLIPSIS, ID, LBRACKET, LPAREN, OPERATOR, STAR, TEMPLATE, TILDE, VOLATILE}">
         <choice first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, COLON_COLON, CONST, ELLIPSIS, ID, LBRACKET, LPAREN, OPERATOR, STAR, TEMPLATE, TILDE, VOLATILE}">
          <choice first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, COLON_COLON, CONST, ELLIPSIS, ID, LBRACKET, LPAREN, OPERATOR, STAR, TEMPLATE, TILDE, VOLATILE}">
           <action first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, COLON_COLON, CONST, ELLIPSIS, ID, LBRACKET, LPAREN, OPERATOR, STAR, TEMPLATE, TILDE, VOLATILE}">
            <nonterminal first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, COLON_COLON, CONST, ELLIPSIS, ID, LBRACKET, LPAREN, OPERATOR, STAR, TEMPLATE, TILDE, VOLATILE}" ruleName="Declarator"/>
           </action>
           <action first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, COLON_COLON, CONST, ELLIPSIS, ID, LBRACKET, LPAREN, STAR, TEMPLATE, VOLATILE}">
            <nonterminal first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, COLON_COLON, CONST, ELLIPSIS, ID, LBRACKET, LPAREN, STAR, TEMPLATE, VOLATILE}" ruleName="AbstractDeclarator"/>
           </action>
          </choice>
          <empty first="{#}"/>
         </choice>
        </group>
       </sequence>
       <action first="{ELLIPSIS}">
        <nonterminal first="{ELLIPSIS}" ruleName="Ellipsis"/>
       </action>
      </choice>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}" name="DeclarationStatement">
   <action first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
    <group first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
     <action first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
      <nonterminal first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASM, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, NAMESPACE, OPERATOR, RBRACKET, REQUIRES, RPAREN, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STATIC_ASSERT, STRING_LITERAL, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID, VOLATILE, WCHAR_T}" ruleName="BlockDeclaration"/>
     </action>
    </group>
   </action>
  </rule>
  <rule first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}" name="ExpressionStatement">
   <sequence first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}">
    <optional first="{#, ALIGNAS, LBRACKET}">
     <group first="{ALIGNAS, LBRACKET}">
      <action first="{ALIGNAS, LBRACKET}">
       <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
      </action>
     </group>
    </optional>
    <action first="{#, ADD_ASSIGN, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}">
     <group first="{#, ADD_ASSIGN, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}">
      <sequence first="{#, ADD_ASSIGN, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}">
       <group first="{#, ADD_ASSIGN, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}">
        <choice first="{#, ADD_ASSIGN, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}">
         <action first="{#, ADD_ASSIGN, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}">
          <nonterminal first="{#, ADD_ASSIGN, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}" ruleName="Expression"/>
         </action>
         <empty first="{#}"/>
        </choice>
       </group>
       <action first="{SEMICOLON}">
        <nonterminal first="{SEMICOLON}" ruleName="Semicolon"/>
       </action>
      </sequence>
     </group>
    </action>
   </sequence>
  </rule>
  <rule first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FRIEND, GEQ, ID, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}" name="InitStatement">
   <choice first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FRIEND, GEQ, ID, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, RBRACKET, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}">
    <action first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, RBRACKET, REQUIRES, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
     <nonterminal first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, RBRACKET, REQUIRES, SEMICOLON, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}" ruleName="SimpleDeclaration"/>
    </action>
    <action first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}">
     <nonterminal first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SEMICOLON, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}" ruleName="ExpressionStatement"/>
    </action>
   </choice>
  </rule>
  <rule first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FRIEND, GEQ, ID, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}" name="Condition">
   <group first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FRIEND, GEQ, ID, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}">
    <choice first="{#, ADD_ASSIGN, ALIGNAS, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, CLASS, COLON_COLON, COMMA, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, ENUM, EQ, EXCLAMATION, EXPLICIT, EXTERN, FALSE, FLOAT, FLOATING_LITERAL, FRIEND, GEQ, ID, INLINE, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, MUTABLE, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC, STATIC_CAST, STRING_LITERAL, STRUCT, SUB_ASSIGN, TEMPLATE, THIS, THREAD_LOCAL, THROW, TILDE, TRUE, TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T, XOR, XOR_ASSIGN}">
     <sequence first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, ASSIGN, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
      <sequence first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ELLIPSIS, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, LPAREN, MUTABLE, OPERATOR, SHORT, SIGNED, STAR, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TILDE, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
       <sequence first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
        <optional first="{#, ALIGNAS, LBRACKET}">
         <group first="{ALIGNAS, LBRACKET}">
          <action first="{ALIGNAS, LBRACKET}">
           <nonterminal first="{ALIGNAS, LBRACKET}" ruleName="AttributeSpecifierSeq"/>
          </action>
         </group>
        </optional>
        <action first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}">
         <nonterminal first="{#, ALIGNAS, AUTO, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CLASS, COLON_COLON, CONST, CONSTEVAL, CONSTEXPR, CONSTINIT, DECLTYPE, DOUBLE, ENUM, EXPLICIT, EXTERN, FLOAT, FRIEND, ID, INLINE, INT, LANGLE, LBRACKET, LONG, MUTABLE, SHORT, SIGNED, STATIC, STRUCT, TEMPLATE, THREAD_LOCAL, TYPEDEF, TYPENAME, UNION, UNSIGNED, VIRTUAL, VOID, VOLATILE, WCHAR_T}" ruleName="DeclSpecifierSeq"/>
        </action>
       </sequence>
       <nonterminal first="{#, ALIGNAS, AMP, AMP_AMP, ARROW, COLON_COLON, CONST, ELLIPSIS, ID, LBRACKET, LPAREN, OPERATOR, STAR, TEMPLATE, TILDE, VOLATILE}" ruleName="Declarator"/>
      </sequence>
      <action first="{ASSIGN, LBRACE}">
       <nonterminal first="{ASSIGN, LBRACE}" ruleName="BraceOrEqualInitializer"/>
      </action>
     </sequence>
     <action first="{#, ADD_ASSIGN, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}">
      <nonterminal first="{#, ADD_ASSIGN, ALIGNOF, AMP, AMP_AMP, AND_ASSIGN, ARROW, ARROW_STAR, ASSIGN, AUTO, BEGIN_RAW_STRING_LITERAL, BOOL, CHAR, CHAR16_T, CHAR32_T, CHAR8_T, CHARACTER_LITERAL, COLON_COLON, COMMA, CONST_CAST, CO_AWAIT, CO_YIELD, DECLTYPE, DELETE, DIV, DIV_ASSIGN, DOT, DOT_STAR, DOUBLE, DYNAMIC_CAST, ELLIPSIS, EQ, EXCLAMATION, FALSE, FLOAT, FLOATING_LITERAL, GEQ, ID, INT, INTEGER_LITERAL, LANGLE, LBRACE, LBRACKET, LEQ, LONG, LPAREN, MINUS, MINUS_MINUS, MOD, MUL_ASSIGN, NEQ, NEW, NOEXCEPT, NULLPTR, OPERATOR, OR, OR_ASSIGN, OR_OR, PLUS, PLUS_PLUS, QUEST, RANGLE, REINTERPRET_CAST, REM_ASSIGN, REQUIRES, RPAREN, SHIFT_LEFT, SHIFT_LEFT_ASSIGN, SHIFT_RIGHT, SHIFT_RIGHT_ASSIGN, SHORT, SIGNED, SIZEOF, SPACE_SHIP, STAR, STATIC_CAST, STRING_LITERAL, SUB_ASSIGN, TEMPLATE, THIS, THROW, TILDE, TRUE, TYPEID, TYPENAME, UNSIGNED, VOID, WCHAR_T, XOR, XOR_ASSIGN}" ruleName="Expression"/>
     </action>
    </choice>
   </group>
  </rule>
 </grammar>
</parserFile>
