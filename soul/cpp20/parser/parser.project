project soul.cpp20.parser;
reference <../ast/ast.project>;
reference <../lexer/lexer.project>;
reference <../token/token.project>;
reference <../symbols/symbols.project>;
reference <../../ast/ast.project>;
reference <../../lexer/lexer.project>;
reference <../../parser/parser.project>;
reference <../../../util/util.project>;
interface <attribute.parser.ixx>;
source <attribute.parser.cpp>;
interface <class.parser.ixx>;
source <class.parser.cpp>;
interface <concept.parser.ixx>;
// source <concept.parser.cpp>; // auto, decltype
interface <cpp20_rules.ixx>;
source <cpp20_rules.cpp>;
interface <declaration.parser.ixx>;
source <declaration.parser.cpp>;
interface <enum.parser.ixx>;
source <enum.parser.cpp>;
interface <expression.parser.ixx>;
source <expression.parser.cpp>;
interface <function.parser.ixx>;
source <function.parser.cpp>;
interface <guard.parser.ixx>;
source <guard.parser.cpp>;
interface <identifier.parser.ixx>;
source <identifier.parser.cpp>;
interface <initialization.parser.ixx>;
source <initialization.parser.cpp>;
interface <lambda.parser.ixx>;
source <lambda.parser.cpp>;
interface <literal.parser.ixx>;
source <literal.parser.cpp>;
interface <module.parser.ixx>;
source <module.parser.cpp>;
interface <module_dependency.parser.ixx>;
source <module_dependency.parser.cpp>;
interface <punctuation.parser.ixx>;
source <punctuation.parser.cpp>;
interface <recorded_parse.ixx>;
source <recorded_parse.cpp>;
interface <simple_type.parser.ixx>;
source <simple_type.parser.cpp>;
interface <statement.parser.ixx>;
source <statement.parser.cpp>;
interface <template.parser.ixx>;
// source <template.parser.cpp>; // auto, decltype
interface <token_parser.ixx>;
source <token_parser.cpp>;
interface <translation_unit.parser.ixx>;
source <translation_unit.parser.cpp>;
interface <type.parser.ixx>;
source <type.parser.cpp>;
