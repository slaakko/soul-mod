// =================================
// Copyright (c) 2022 Seppo Laakko
// Distributed under the MIT license
// =================================

export module soul.cpp20.parser.simple.type;

[interface]import soul.cpp20.symbols.context;
[implementation]import soul.cpp20.ast;
[implementation]import soul.cpp20.token;
[implementation]import soul.cpp20.lexer;

parser SimpleTypeParser
{
    lexer soul::cpp20::lexer::Cpp20Lexer<char32_t>;

    SimpleType : soul::cpp20::ast::Node*
        ::= CHAR{ return new soul::cpp20::ast::CharNode(lexer.GetSourcePos(pos)); }
        |   CHAR8_T{ return new soul::cpp20::ast::Char8Node(lexer.GetSourcePos(pos)); }
        |   CHAR16_T{ return new soul::cpp20::ast::Char16Node(lexer.GetSourcePos(pos)); }
        |   CHAR32_T{ return new soul::cpp20::ast::Char32Node(lexer.GetSourcePos(pos)); }
        |   WCHAR_T{ return new soul::cpp20::ast::WCharNode(lexer.GetSourcePos(pos)); }
        |   BOOL{ return new soul::cpp20::ast::BoolNode(lexer.GetSourcePos(pos)); }
        |   SHORT{ return new soul::cpp20::ast::ShortNode(lexer.GetSourcePos(pos)); }
        |   INT{ return new soul::cpp20::ast::IntNode(lexer.GetSourcePos(pos)); }
        |   LONG{ return new soul::cpp20::ast::LongNode(lexer.GetSourcePos(pos)); }
        |   SIGNED{ return new soul::cpp20::ast::SignedNode(lexer.GetSourcePos(pos)); }
        |   UNSIGNED{ return new soul::cpp20::ast::UnsignedNode(lexer.GetSourcePos(pos)); }
        |   FLOAT{ return new soul::cpp20::ast::FloatNode(lexer.GetSourcePos(pos)); }
        |   DOUBLE{ return new soul::cpp20::ast::DoubleNode(lexer.GetSourcePos(pos)); }
        |   VOID{ return new soul::cpp20::ast::VoidNode(lexer.GetSourcePos(pos)); }
        ;
}
